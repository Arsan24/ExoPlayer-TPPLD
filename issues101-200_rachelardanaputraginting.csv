number,title,state,created_at,updated_at,closed_at,body,labels,assignees,milestone,comments
11175,Custom layout and position for subtitles,closed,2023-05-23 12:34:53,2023-07-10 08:29:15,2023-07-10 08:29:14,"Hi! 
I want customize SubtitleView from xml, set font, font size, margin, etc. Also I need change subtitles position based on controls visibility with ConstraintLayout.
How can I do that?",['question'],['tonihei'],,1
11174,The subtitles are displaying too low,closed,2023-05-23 08:42:54,2023-08-09 01:05:32,2023-06-09 10:05:52,"The subtitles are displaying too low! They are getting close to the bottom. this issue also exists in third-party players(based on ExoPlayer), like TiviMate,  Live Channels,OTT Navigator.

![20230523103504](https://github.com/google/ExoPlayer/assets/134374774/6fd409bd-c224-46b5-ae01-3ac3ea52b6c0)
",['question'],['icbaker'],,2
11173,playback of Widevine's DASH live streams is very slowly,closed,2023-05-23 08:20:18,2023-07-10 08:29:10,2023-07-10 08:29:10,"### Bug

ExoPlayer doesn't seem to know from which version had this issue . The playback of Widevine's DASH live streams is very slow. I have tested several players based on ExoPlayer, like: TiviMate, OTT Navigator, and Android TV's Live Channels, and they all have this problem.",['question'],['tonihei'],,1
11172, Request for Demo Code to Access exo_duration TextView in Java Code,closed,2023-05-22 20:32:43,2023-07-10 08:29:06,2023-07-10 08:29:06,"** Request for Demo Code to Access exo_duration TextView in Java Code*



I hope this issue finds you well. I am writing to kindly request a demo code that demonstrates how to access the ""exo_duration"" TextView in Java code using ExoPlayer. I am particularly interested in understanding how to retrieve and display the duration of a media file being played.

As a backend developer working on a project that involves media playback, I have been exploring the capabilities of ExoPlayer, and I find it to be an excellent library for handling multimedia content. However, I am currently facing a challenge in accessing the ""exo_duration"" TextView programmatically within my Java code.

I would greatly appreciate it if you could provide me with a demo code snippet or an example that illustrates the process of accessing the ""exo_duration"" TextView and obtaining the duration value. This would immensely help me in understanding the implementation details and further enhance my development skills with ExoPlayer.

Additionally, if there are any specific instructions or prerequisites for integrating the demo code into an existing project, please provide them along with the code. Any additional documentation or resources related to this topic would also be highly beneficial.

Thank you in advance for your time and support. I eagerly await your response and the requested demo code. If you have any further questions or require more information, please do not hesitate to reach out to me.

Looking forward to your positive response.

Best regards,

HGSC

HGSC.learn@gmail.com
",['question'],['tonihei'],,1
11171,set the horizontal padding for the subtitle with background and the corner radius for the subtitle background,closed,2023-05-22 13:15:24,2023-07-23 01:04:39,2023-05-23 08:41:15,"I have a subtitle with dark background

I can only make the subtitle as shown below:
![Untitled09](https://github.com/google/ExoPlayer/assets/30954955/b74501d9-12a4-4f9d-8ae2-28607ceb32d1)

but I wanna make that as shown below:
![Untitled11](https://github.com/google/ExoPlayer/assets/30954955/66f43ab5-8a09-407f-a178-f1cc28e4cefa)


I wanna set horizontal space between the subtitle text and background text, but I can't find any solutions. I set space for the start and the end of the text with OnCue fun, but it didn't work.

",['duplicate'],['icbaker'],,5
11170,M3U8 URL Playback error (Source error),closed,2023-05-20 14:36:26,2023-07-24 01:05:07,2023-05-24 08:06:51,"Getting Error while playing M3U8 URL in Exo Player...

com.google.android.exoplayer2.ExoPlaybackException: Source error
Caused by: com.google.android.exoplayer2.ParserException: Input does not start with the #EXTM3U header","['question', 'needs triage']",['tonihei'],,1
11169,The SurfaceView problem when using multi-player with ViewPager2,open,2023-05-19 09:58:53,2023-05-25 22:09:26,,"Although I already know that multiple player instances can cause codec issues like these [example search](https://github.com/google/ExoPlayer/issues?q=is%3Aissue++RecyclerView++viewPager). We have a legacy implementation still use multiple player instances architecture.

Another issue we noticed only on android OS version 12+ is that the surface becomes transparent and the content of the next next page can be seen when using viewpager2. I attached the [source code](https://github.com/isaacchiang-kkstream/VideoPage) and [issued video](https://drive.google.com/drive/folders/1sYMemrf0mdc918OmYBePG_7Yx971YFhH?usp=share_link) here for reference. You can see that the problem occurs at 18th - 25th, and 50th second of the video. In fact the codec has an exception, but after press the play button, the current page's player still can playback the content.

Please help guide me how to solve this problem or give me some advice, thanks.

### My testing device information as following:
- name: Pixel 6
- android version: 13
","['question', 'needs triage']",['christosts'],,3
11168,"ExoPlayer ￼

ExoPlayer is an application level media player for Android. The latest version is published as part of AndroidX Media under a new package name and all future development will be in that project.
",closed,2023-05-18 07:01:50,2023-07-18 01:05:01,2023-05-18 07:13:27,"**Please do not file new issues in this repository.**

All new feature requests should be filed in the
[Media3 issue tracker](https://github.com/androidx/media/issues/new?template=feature_request.md).

We will continue to update and reply to existing issues in this repository and
will keep existing feature requests active.
","['enhancement', 'needs triage']",[],,0
11167,r2.18.7,closed,2023-05-17 15:32:19,2023-07-17 01:05:31,2023-05-17 16:26:27,,[],['icbaker'],,0
11166,Is there a way to view a VR 360 RTMP streaming in stereo mode (with a separated view for each eye)?,closed,2023-05-17 10:11:20,2023-07-19 01:05:03,2023-05-19 08:32:32,"Hi, I'm tying to develop an app in Android Studio te watch a 360 streaming using exoplayer, but I need to watch the streaming like an VR video (cardboard), with a separated view for each eye and control the player with the movement sensors of the phone. Is any way to do this?
Thanks",['question'],['andrewlewis'],,13
11165,Does IMA uses its own player for ads?,closed,2023-05-16 06:46:40,2023-07-16 01:05:12,2023-05-16 10:18:08,"I have mostly seen in all ads SDK that they use their own player to play ads.
If I am using IMA with exoplayer does it uses application's exoplayer instance to play ads or IMA has its own player to play ads which comes on top of content player when ad is served.",['question'],['marcbaechinger'],,1
11164,"ExoPlayer ￼

ExoPlayer is an application level media player for Android. The latest version is published as part of AndroidX Media under a new package name and all future development will be in that project.
Please refer to our migration guide and script to move your codebase to the Media3 package names.
",closed,2023-05-16 02:19:44,2023-07-16 01:05:12,2023-05-16 11:33:35,"**Please do not file new issues in this repository.**

All new feature requests should be filed in the
[Media3 issue tracker](https://github.com/androidx/media/issues/new?template=feature_request.md).

We will continue to update and reply to existing issues in this repository and
will keep existing feature requests active.
","['enhancement', 'needs triage']",[],,1
11163,Matroska(mka) files are not seekable if they do not contain Cues information,closed,2023-05-15 19:30:20,2023-08-13 01:04:39,2023-06-13 12:24:58,"Exoplayer does not attempt to add seek functionality if the Matroska file does not contain Cue information

https://github.com/google/ExoPlayer/blob/cf49175f790dc4bbee85bb195c021ea40765d84b/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/mkv/MatroskaExtractor.java#L685

But stagefright attempts to seek even if the cues are not available

https://cs.android.com/android/platform/superproject/+/refs/heads/master:frameworks/av/media/module/extractors/mkv/MatroskaExtractor.cpp;l=486

Is there a specific reason why it was not implemented on exoplayer. 
The mka files found under testdata does not contain any cue information. (Verified with mkvToolNix)",['enhancement'],['rohitjoins'],,2
11162,Pause and play android 13 ,closed,2023-05-13 23:13:11,2023-07-18 01:05:02,2023-05-18 14:15:10,"### Bug

I'm basically trying to implement ima sdk via android and then passing the view in flutter via method channel but I'm facing an issue that the pause, play, full screen and minimize screen button doesn't work in android 13 while it works perfectly fine with the android version 11","['bug', 'duplicate', 'need more info']",['anooravk'],,2
11161,ExoPlayerImpl#getCurrentPosition get a error value when seekTo end.,closed,2023-05-13 01:59:06,2023-07-15 01:05:18,2023-05-15 18:25:11,"### Bug

Hello,
There is some question when I use ExoPlayerImpl#getCurrentPosition to get a value when seekTo end.I think i could get a value is equal to getDuration() when seekTo end and most files in line with expectations，but there are some video get a value is not equal to getDuration().  

```
2023-01-31 15:32:00.917 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.917 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.917 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.917 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.918 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.921 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.922 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.922 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.922 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.922 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.922 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.922 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.922 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.925 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.926 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.926 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.926 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2136999
2023-01-31 15:32:00.989 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.989 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2198999
2023-01-31 15:32:00.990 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.990 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2198999
2023-01-31 15:32:00.990 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
2023-01-31 15:32:00.990 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: 2198999
2023-01-31 15:32:00.990 13992-13992/com.google.android.exoplayer2.demo E/ExoPlayerImpl: getCurrentPositionUsInternal: duration 2137
```
As the log we can see,when i call ExoPlayerImpl#getCurrentPosition sometime it  may return 2136,sometime it may return 2137 or other value.",['wont fix: intended behavior'],['tianyif'],,4
11160,Problems using RTSP,closed,2023-05-12 13:04:07,2023-07-25 01:04:50,2023-05-25 09:30:01,"I'm trying to use the rtsp extension in an android app but I have a problem and I get a black screen without an explicit error.
My video url is rtsp://myserver:port/live/test?t=pippo 
Watching streaming server's logs I see that, during the SETUP phase, the exoplayer client send this url rtsp://myserver:port/live/test/trackID=1?t=pippo while trying the same url with VLC during the same phase the streaming server logs rtsp://myserver:port/live/test/trackID=1 (whitout query parameter of the original url)
Is it possible to remove the query parameter in the url sent by exoplayer client for the SETUP session with the streaming server?

I'm using this code

val mediaitem = MediaItem.fromUri(Uri.parse(videoUrl))
val mediaSource = RtspMediaSource.Factory().setForceUseRtpTcp(true).setTimeoutMs(10000)
                .createMediaSource(mediaItem)
mediaSource.addEventListener(mainHandler, mediaSourceEventListener)
player?.repeatMode = repatMode
player?.setMediaSource(mediaSource ,true)
player?.prepare()

Thanks for the response","['question', 'needs triage']",['microkatz'],,5
11159,has a Native Crash for ExoPlayer:Playb,closed,2023-05-12 08:05:43,2023-07-16 01:05:13,2023-05-16 19:09:17,"### Bug

I encountered a low-level error while using it, and I did not use the UI component. The main code is as follows:

```
DefaultRenderersFactory defaultRenderersFactory = new DefaultRenderersFactory(context);
        defaultRenderersFactory.setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER);
        SimpleExoPlayer.Builder builder = new SimpleExoPlayer.Builder(context, defaultRenderersFactory);
        builder.setMediaSourceFactory(new DefaultMediaSourceFactory(new DefaultHttpDataSource.Factory().setConnectTimeoutMs(10000)));
        mPlayer = builder.build();

    private void initListener() {
        mPlayer.addListener(new Player.Listener() {
            @Override
            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
              
            }

            @Override
            public void onPlayerError(@NonNull ExoPlaybackException error) {
              
            }
        });
    }
```

ABI: 'arm'
Timestamp: 2023-05-10 12:44:04-0400
pid: 751, tid: 4552, name: ExoPlayer:Playb  
uid: 10065
signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x7ff91500
    r0  80515da0  r1  7ff91500  r2  00000320  r3  00000020
    r4  849e9978  r5  00000340  r6  00000340  r7  7ff91500
    r8  b3ba4edc  r9  b4d78200  r10 00000000  r11 00000000
    ip  00000000  sp  849e9958  lr  b3bc6e3b  pc  b0c68924

backtrace:
      #00 pc 00060924  /apex/com.android.runtime/lib/bionic/libc.so (__memcpy_base_a55+124) (BuildId: 29bc0f9d4101e570b3fe12148d8fe2fc)
      #01 pc 00046e37  /system/lib/libaudioclient.so (android::AudioTrack::write(void const*, unsigned int, bool)+266) (BuildId: 0e6541c880803e2edea73b4a5d4cc008)
      #02 pc 000d8da5  /system/lib/libandroid_runtime.so (int writeToTrack<signed char>(android::sp<android::AudioTrack> const&, int, signed char const*, int, int, bool)+104) (BuildId: 6c99b8fea85d3283f1f3743253b051f0)
      #03 pc 000d631b  /system/lib/libandroid_runtime.so (android_media_AudioTrack_write_native_bytes(_JNIEnv*, _jobject*, _jobject*, int, int, int, unsigned char)+126) (BuildId: 6c99b8fea85d3283f1f3743253b051f0)
      #04 pc 00db710b  /system/framework/arm/boot-framework.oat (art_jni_trampoline+122) (BuildId: 8ebceaef13c8403faa1c5b383dd86cf1fc566ed2)
      #05 pc 010848f7  /system/framework/arm/boot-framework.oat (android.media.AudioTrack.write+398) (BuildId: 8ebceaef13c8403faa1c5b383dd86cf1fc566ed2)
      #06 pc 02028267  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.x1.z.Q+710)
      #07 pc 0202af4f  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.x1.z.J+190)
      #08 pc 02023347  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.x1.z.g+4446)
      #09 pc 0202b36f  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.x1.c0.q0+254)
      #10 pc 02029405  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.c2.u.T+1644)
      #11 pc 020083db  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.c2.u.v+298)
      #12 pc 020210ab  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.r0.d+4370)
      #13 pc 02026c17  /memfd:jit-cache (deleted) (offset 0x2000000) (c.b.a.a.r0.handleMessage+2590)
      #14 pc 02059227  /system/framework/arm/boot-framework.oat (android.os.Handler.dispatchMessage+110) (BuildId: 8ebceaef13c8403faa1c5b383dd86cf1fc566ed2)
      #15 pc 0205baf1  /system/framework/arm/boot-framework.oat (android.os.Looper.loop+1376) (BuildId: 8ebceaef13c8403faa1c5b383dd86cf1fc566ed2)
      #16 pc 0205ab73  /system/framework/arm/boot-framework.oat (android.os.HandlerThread.run+250) (BuildId: 8ebceaef13c8403faa1c5b383dd86cf1fc566ed2)
      #17 pc 000d39d5  /apex/com.android.art/lib/libart.so (art_quick_invoke_stub_internal+68) (BuildId: f3dcf6d85f63090693a2a803bf4230f2)
      #18 pc 004eaf13  /apex/com.android.art/lib/libart.so (art_quick_invoke_stub+282) (BuildId: f3dcf6d85f63090693a2a803bf4230f2)
      #19 pc 0012bd2d  /apex/com.android.art/lib/libart.so (art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)+148) (BuildId: f3dcf6d85f63090693a2a803bf4230f2)
      #20 pc 003f8777  /apex/com.android.art/lib/libart.so (art::JValue art::InvokeVirtualOrInterfaceWithJValues<art::ArtMethod*>(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, art::ArtMethod*, jvalue const*)+374) (BuildId: f3dcf6d85f63090693a2a803bf4230f2)
      #21 pc 003f8887  /apex/com.android.art/lib/libart.so (art::JValue art::InvokeVirtualOrInterfaceWithJValues<_jmethodID*>(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, jvalue const*)+42) (BuildId: f3dcf6d85f63090693a2a803bf4230f2)
      #22 pc 00439995  /apex/com.android.art/lib/libart.so (art::Thread::CreateCallback(void*)+1056) (BuildId: f3dcf6d85f63090693a2a803bf4230f2)
      #23 pc 000aabb3  /apex/com.android.runtime/lib/bionic/libc.so (__pthread_start(void*)+40) (BuildId: 29bc0f9d4101e570b3fe12148d8fe2fc)
      #24 pc 00064023  /apex/com.android.runtime/lib/bionic/libc.so (__start_thread+30) (BuildId: 29bc0f9d4101e570b3fe12148d8fe2fc)
","['bug', 'duplicate']",['marcbaechinger'],,2
11158,Video codec error in exoplayer version 2.18.5 in android 10,open,2023-05-11 03:09:10,2023-05-11 10:43:18,,"### Bug

Below here details about this error :

`Video codec error
                                                                                                      com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.bcm.vdec.avc, Format(2, null, null, video/avc, avc1.64001F, -1, null, [1280, 720, 24.0], [-1, -1])
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1013)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:537)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1445)
                                                                                                          at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:917)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readSourceOmittingSampleData(MediaCodecRenderer.java:946)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:761)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:103)
                                                                                                          at android.os.Looper.loop(Looper.java:214)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
                                                                                                      Caused by: android.media.MediaCodec$CodecException: Failed to initialize OMX.bcm.vdec.avc, error 0xfffffff4
                                                                                                          at android.media.MediaCodec.native_setup(Native Method)
                                                                                                          at android.media.MediaCodec.<init>(MediaCodec.java:1865)
                                                                                                          at android.media.MediaCodec.createByCodecName(MediaCodec.java:1843)
                                                                                                          at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter$Factory.createCodec(SynchronousMediaCodecAdapter.java:74)
                                                                                                          at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter$Factory.createAdapter(SynchronousMediaCodecAdapter.java:49)
                                                                                                          at com.google.android.exoplayer2.mediacodec.DefaultMediaCodecAdapterFactory.createAdapter(DefaultMediaCodecAdapterFactory.java:113)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:1091)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1002)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:537) 
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1445) 
                                                                                                          at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:917) 
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readSourceOmittingSampleData(MediaCodecRenderer.java:946) 
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:761) 
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007) 
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502) 
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:103) 
                                                                                                          at android.os.Looper.loop(Looper.java:214) 
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67) `

below here sample that I use MediaCodecVideoRenderer to get type of render media code:

`
override fun buildVideoRenderers(
        context: Context,
        extensionRendererMode: Int,  // @ExtensionRendererMode extensionRendererMode: Int,
        mediaCodecSelector: MediaCodecSelector,
        enableDecoderFallback: Boolean,
        eventHandler: Handler,
        eventListener: VideoRendererEventListener,
        allowedVideoJoiningTimeMs: Long,
        out: ArrayList<Renderer>
    ) {

        out.add(
            XaafMediaCodecVideoRenderer(
                context,
                MediaCodecSelector.DEFAULT,
                allowedVideoJoiningTimeMs,
                enableDecoderFallback,
                eventHandler,
                eventListener,
                MAX_DROPPED_VIDEO_FRAME_COUNT_TO_NOTIFY,
                playerDecoderUsedListener
            )
        )


        if (extensionRendererMode == EXTENSION_RENDERER_MODE_OFF) {
            return
        }

        var extensionRendererIndex = out.size
        if (extensionRendererMode == EXTENSION_RENDERER_MODE_PREFER) {
            extensionRendererIndex--
        }

        try {
            // Full class names used for constructor args so the LINT rule triggers if any of them move.
            // LINT.IfChange
            val clazz = Class.forName(""com.google.android.exoplayer2.ext.vp9.LibvpxVideoRenderer"")
            val constructor = clazz.getConstructor(
                Boolean::class.javaPrimitiveType,
                Long::class.javaPrimitiveType,
                android.os.Handler::class.java,
                com.google.android.exoplayer2.video.VideoRendererEventListener::class.java,
                Int::class.javaPrimitiveType
            )
            // LINT.ThenChange(../../../../../../../proguard-rules.txt)
            val renderer = constructor.newInstance(
                true,
                allowedVideoJoiningTimeMs,
                eventHandler,
                eventListener,
                MAX_DROPPED_VIDEO_FRAME_COUNT_TO_NOTIFY
            ) as Renderer
            out.add(extensionRendererIndex++, renderer)
            logI(""Loaded LibvpxVideoRenderer"")
        } catch (e: ClassNotFoundException) {
            // Expected if the app was built without the extension.
        } catch (e: Exception) {
            // The extension is present, but instantiation failed.
            throw RuntimeException(""Error instantiating VP9 extension"", e)
        }
    }
    
override fun getDecoderInfos(
        mediaCodecSelector: MediaCodecSelector,
        format: Format,
        requiresSecureDecoder: Boolean
    ): MutableList<MediaCodecInfo> {
        val all =  super.getDecoderInfos(mediaCodecSelector, format, requiresSecureDecoder)
        if (!context.packageManager.hasSystemFeature(AMAZON_FEATURE_FIRE_TV) && !requiresSecureDecoder) {
            val googleDecoder = ArrayList<MediaCodecInfo>()
            for (info in all) {
                if (info.name.contains(""google"") || info.name.contains(""android"")) {
                    googleDecoder.add(info)
                }
            }
            val decoderListToUse = googleDecoder.takeIf { it.isNotEmpty() } ?: all
            reportDecoderUsed(decoderListToUse)

            return decoderListToUse
        }
        reportDecoderUsed(all)
        return all
    }`",['bug'],['microkatz'],,1
11157,ExoPlayer freezes with RTMP and Insta360 Pro,closed,2023-05-10 08:52:39,2023-07-24 01:05:08,2023-05-24 08:26:35,"### Bug

Hi, I'm trying to use Exoplayer in my Android app to watch the streaming that my Insta360 Pro camera transmits. This camera uses RTMP to stream the video in 360 degree. I implemented a simpleExoplayer and now I can watch videos from the camera, but when I try to watch the streaming, the player freezes. Only when I turn off the streaming I can see the last 5 seconds of the streaming and then, it stops. This is the code of the implemented exoPlayer in the onCreate of my activity (The logs are only used to debug and they doesn't display anything in the console) :


        DefaultRenderersFactory renderersFactory;

        DefaultLoadControl loadControl = new DefaultLoadControl.Builder().setBufferDurationsMs(2000, 5000, 1500, 2000).build();
        TrackSelector trackSelector = new DefaultTrackSelector();



        renderersFactory = new DefaultRenderersFactory(this).setExtensionRendererMode( DefaultRenderersFactory.EXTENSION_RENDERER_MODE_PREFER);

        simpleExoPlayer = new SimpleExoPlayer.Builder(context, renderersFactory)
                .setTrackSelector(trackSelector)
                .setLoadControl(loadControl)
                .build();

        simpleExoPlayer.setPauseAtEndOfMediaItems(false);
        simpleExoPlayer.setPlaybackSpeed(1f);
        simpleExoPlayer.setRepeatMode(Player.REPEAT_MODE_OFF);
        simpleExoPlayer.setPlayWhenReady(true);

        simpleExoPlayer.setTrackSelectionParameters(
                simpleExoPlayer.getTrackSelectionParameters()
                        .buildUpon()
                        .setMaxVideoSizeSd()
                        .build()
        );

        simpleExoPlayer.addListener(new Player.Listener() {
            @Override
            public void onPlayerError(PlaybackException error) {
                if (error.errorCode == PlaybackException.ERROR_CODE_UNSPECIFIED) {
                    Log.d(""ExoplayerError"", String.valueOf(error.errorCode));
                    // Re-initialize player at the current live window default position.
                    simpleExoPlayer.seekToDefaultPosition();
                    simpleExoPlayer.prepare();
                } else {
                    // Handle other errors.
                    Log.d(""ExoplayerErrorOtro"", String.valueOf(error.errorCode));
                }
            }
        });


        playerView.setPlayer(simpleExoPlayer);

        MediaSource mediaSource =
                new RtspMediaSource.Factory()
                        .setDebugLoggingEnabled(true)
                        .setSocketFactory(SocketFactory.getDefault())
                        .setTimeoutMs(20000)
                        .setForceUseRtpTcp(true)
                        .createMediaSource(MediaItem.fromUri(videoUrl));

        simpleExoPlayer.addMediaSource(mediaSource);

        simpleExoPlayer.prepare();
        simpleExoPlayer.seekTo(0);

","['bug', 'needs triage']",['microkatz'],,7
11156,EXCEPTION: ExoPlayer:Playback,closed,2023-05-09 07:11:30,2023-08-12 01:04:31,2023-06-12 01:05:38,"### Bug

implementation 'com.google.android.exoplayer:exoplayer-core:2.15.1'

```
 java.lang.IllegalAccessError: Illegal class access ('com.google.android.exoplayer2.video.MediaCodecVideoRenderer' attempting to access 'com.google.android.exoplayer2.RendererCapabilities$$Util') in attempt to invoke static method int com.google.android.exoplayer2.RendererCapabilities$$Util.create(int) (declaration of 'com.google.android.exoplayer2.video.MediaCodecVideoRenderer' appears in /data/app/com.sankuai.ng.cashier-1/base.apk:classes5.dex)
        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.supportsFormat(MediaCodecVideoRenderer.java:301)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.supportsFormat(MediaCodecRenderer.java:482)
        at com.google.android.exoplayer2.trackselection.MappingTrackSelector.findRenderer(MappingTrackSelector.java:485)
        at com.google.android.exoplayer2.trackselection.MappingTrackSelector.selectTracks(MappingTrackSelector.java:355)
        at com.google.android.exoplayer2.MediaPeriodHolder.selectTracks(MediaPeriodHolder.java:238)
        at com.google.android.exoplayer2.MediaPeriodHolder.handlePrepared(MediaPeriodHolder.java:186)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handlePeriodPrepared(ExoPlayerImplInternal.java:2202)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:501)
        at android.os.Handler.dispatchMessage(Handler.java:98)
        at android.os.Looper.loop(Looper.java:148)
        at android.os.HandlerThread.run(HandlerThread.java:61)
```",['closed-by-bot'],['marcbaechinger'],,3
11155,Question ,closed,2023-05-09 03:42:54,2023-07-09 01:05:17,2023-05-09 10:41:35,"**Please do not file new issues in this repository.**

All new feature requests should be filed in the
[Media3 issue tracker](https://github.com/androidx/media/issues/new?template=feature_request.md).

We will continue to update and reply to existing issues in this repository and
will keep existing feature requests active.
",['enhancement'],['microkatz'],,1
11154,Exoplayer without IMA extension in an Android background service,closed,2023-05-07 06:03:38,2023-08-12 01:04:32,2023-06-12 01:05:43,"Hello,

I'm currently building an Android Service that run as a system application on Android TV, in background. I'm using the Exoplayer with the IMA library to display ADS on a overlay, on top of other apps. I preload the ads and play them later on and it looks great. However, I sometime face issue, on some devices, when the app underneath is requesting the decoder and if I have a an AD in cache. It will basically call the onPlayerError listener forcing me to release the player.

I've been trying many things, including using different hardware / software decoder and video format. Now here is couple thing i wanted to ask:

- Is it possible to preload the ads by only downloading the file and prepare the codec only when I want to play?
- Is it possible to preload the ads, then release the codec once loaded and grab the codec again when I want to play?

Thank you
Max","['question', 'closed-by-bot']",['tonihei'],,3
11153, ExoPlayer  play video error ,open,2023-05-06 02:37:37,2023-07-06 12:21:41,,"04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal: Playback error
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:   com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.4D402A, -1, null, [1280, 720, 25.0], [-1, -1]), format_supported=YES
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:566)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at android.os.Handler.dispatchMessage(Handler.java:102)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at android.os.Looper.loop(Looper.java:223)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at android.os.HandlerThread.run(HandlerThread.java:67)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:   Caused by: com.google.android.exoplayer2.video.MediaCodecVideoDecoderException: Decoder failed: c2.qti.avc.decoder
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.createDecoderException(MediaCodecVideoRenderer.java:1590)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:813)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:989)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:490)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       ... 3 more
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:   Caused by: java.lang.IllegalStateException
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at android.media.MediaCodec.native_dequeueInputBuffer(Native Method)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at android.media.MediaCodec.dequeueInputBuffer(MediaCodec.java:2855)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.dequeueInputBufferIndex(SynchronousMediaCodecAdapter.java:99)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1190)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:794)
04-26 20:48:36.209  6206  8277 E ExoPlayerImplInternal:       ... 5 more
04-26 20:48:36.209  1624  2365 D Client  : clientCallBack!!  data:ClientCbData{code=4, serviceId=177, operationId=28, seqNr=111, opType=0, dataType=0, proc=0, payloadLen=0, payload=[]}
04-26 20:48:36.209  1624  2365 I Client  : clientCallBack: =MSG_SEND_SUC=
04-26 20:48:36.209  1624  2365 D IPCP Utils: byte2hex: data is NULL
",['question'],['microkatz'],,3
11152,ExoPlayer Support for HLS with ClearKey,closed,2023-05-05 19:50:00,2023-08-09 01:05:33,2023-06-09 10:05:38,"### Bug

Does ExoPlayer support HLS with ClearKey encryption? ",['question'],['icbaker'],,3
11151,How to play encrypted files,closed,2023-05-05 03:19:12,2023-07-05 01:05:32,2023-05-05 10:46:19,"###  1.Play ffmpeg-encrypted files

`ffmpeg -i decryption.mp4 -vcodec copy -acodec copy -encryption_scheme cenc-aes-ctr -encryption_key c7e16c4403654b85847037383f0c2db3 -encryption_kid a7e61c373e219033c21091fa607bf3b8 encryption.mp4`

FFMPEG encrypts video

How to play encrypted videos using ExoPlayer


-------------------------------------------------------------------------------------------------------------------------------------
###  2.Play AES-encrypted files
ExoPlayer2 HLS plays aes encrypted files

Or how to play AES encrypted files


 ExoPlayer2 plays AES encrypted files

To play AES-encrypted files with ExoPlayer2, you need to follow these steps:

First, you need to prepare an AES key, which must be the same key that you used to encrypt your files. The key must be a byte array with a length of 16, 24, or 32 bytes.

Next, you need to create a DataSource.Factory object that will be used to open the AES encrypted file. You can use the EncryptedFileDataSourceFactory class to create the object. For example:

```
val cipher = Cipher.getInstance(""AES/CBC/PKCS7Padding"")
val secretKeySpec = SecretKeySpec(keyData, ""AES"")
val ivParameterSpec = IvParameterSpec(ivData)
cipher.init(Cipher.DECRYPT_MODE, secretKeySpec, ivParameterSpec)
val defaultHttpDataSourceFactory = DefaultHttpDataSourceFactory(Util.getUserAgent(this, ""exo-player""))
val fileDataSourceFactory = DefaultDataSourceFactory(this, null, defaultHttpDataSourceFactory)
val encryptedFileDataSourceFactory = EncryptedFileDataSourceFactory(
cipher,
fileDataSourceFactory
)
```
Here ""keyData"" and ""ivData"" are the keys and initialization vectors you use to encrypt your files.

Now you need to create a MediaSource object that will be used to pass the AES encrypted file to ExoPlayer2. You can use the
EncryptedProgressiveMediaSource class to create a MediaSource. For example:
```
val mediaSource = EncryptedProgressiveMediaSource.Factory(encryptedFileDataSourceFactory)
.createMediaSource(Uri.parse(""file:///android_asset/encrypted_file.mp4""))
```

Note that the Uri.parse() method here converts the file path to a Uri object.

Finally, pass the MediaSource object to ExoPlayer2. For example:
```
val player = SimpleExoPlayer.Builder(this).build()
player.prepare(mediaSource)
player.play()
```
This way, you can play AES-encrypted files using ExoPlayer2.

![image](https://user-images.githubusercontent.com/33193340/236425164-e89f93b0-0b79-41a1-bb64-6aac5bf4d4b0.png)



# What I want to know is how to implement playback of encrypted files
","['question', 'need more info']",['marcbaechinger'],,1
11150,Manual range request for Fast forward: An exception occurred,closed,2023-05-04 12:18:36,2023-08-09 01:05:33,2023-06-09 10:04:59,"  `dataSource.setRequestProperty(""Range"", ""bytes=26-110915379"")`




```
Playback error
com.google.android.exoplayer2.ExoPlaybackException: Source error
    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:644)
    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:614)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loopOnce(Looper.java:201)
    at android.os.Looper.loop(Looper.java:288)
    at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: com.google.android.exoplayer2.ParserException: Invalid NAL length
    at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readSample(Mp4Extractor.java:641)
    at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.read(Mp4Extractor.java:259)
    at com.google.android.exoplayer2.source.BundledExtractorsAdapter.read(BundledExtractorsAdapter.java:127)
    at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1039)
    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:412)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
    at java.lang.Thread.run(Thread.java:1012)
```

![image](https://user-images.githubusercontent.com/33193340/236200017-b3d6d472-6817-4057-8b8e-e7fccef081ae.png)



![image](https://user-images.githubusercontent.com/33193340/236200240-2afa4e53-ba9c-42f7-b1d5-698843b43f4e.png)

",['question'],['icbaker'],,8
11149,"DefaultDrmSessionManager accessed before setPlayer(), possibly on the wrong thread.",closed,2023-05-04 10:30:39,2023-07-04 01:05:30,2023-05-04 12:53:19,"### Bug

Version: 2.18.6



Sometimes in Log I see the trace, but cant determinate problem in my code:
```
DefaultDrmSessionManager accessed before setPlayer(), possibly on the wrong thread.
                                   java.lang.IllegalStateException
                                       at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.verifyPlaybackThread(DefaultDrmSessionManager.java:824)
                                       at com.google.android.exoplayer2.drm.DefaultDrmSessionManager.prepare(DefaultDrmSessionManager.java:471)
                                       at com.google.android.exoplayer2.source.dash.DashMediaSource.prepareSourceInternal(DashMediaSource.java:450)
                                       at com.google.android.exoplayer2.source.BaseMediaSource.prepareSource(BaseMediaSource.java:221)
                                       at com.google.android.exoplayer2.source.CompositeMediaSource.prepareChildSource(CompositeMediaSource.java:120)
                                       at com.google.android.exoplayer2.source.WrappingMediaSource.prepareChildSource(WrappingMediaSource.java:212)
                                       at com.google.android.exoplayer2.source.MaskingMediaSource.createPeriod(MaskingMediaSource.java:108)
                                       at com.google.android.exoplayer2.MediaSourceList.createPeriod(MediaSourceList.java:315)
                                       at com.google.android.exoplayer2.MediaPeriodHolder.createMediaPeriod(MediaPeriodHolder.java:433)
                                       at com.google.android.exoplayer2.MediaPeriodHolder.<init>(MediaPeriodHolder.java:108)
                                       at com.google.android.exoplayer2.MediaPeriodQueue.enqueueNextMediaPeriodHolder(MediaPeriodQueue.java:190)
                                       at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod(ExoPlayerImplInternal.java:1999)
                                       at com.google.android.exoplayer2.ExoPlayerImplInternal.updatePeriods(ExoPlayerImplInternal.java:1986)
                                       at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:974)
                                       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                       at android.os.Handler.dispatchMessage(Handler.java:103)
                                       at android.os.Looper.loop(Looper.java:237)
                                       at android.os.HandlerThread.run(HandlerThread.java:67)
```


Android Studio:
```
Flamingo | 2022.2.1 Patch 1
Build #AI-222.4459.24.2221.9971841, built on April 19, 2023
Runtime version: 17.0.6+0-17.0.6b802.4-9586694 amd64
VM: OpenJDK 64-Bit Server VM by JetBrains s.r.o.
Linux 5.4.0-148-generic
GC: G1 Young Generation, G1 Old Generation
Memory: 4096M
Cores: 12
Registry:
    external.system.auto.import.disabled=true
    debugger.watches.in.variables=false
    ide.text.editor.with.preview.show.floating.toolbar=false
    ide.instant.shutdown=false
    gradle.version.catalogs.dynamic.support=true

Non-Bundled Plugins:
    idea.plugin.protoeditor (222.4459.16)
    com.intellij.marketplace (222.4459.28)
    com.intellij.javafx (1.0.4)
    co.anbora.labs.kse (1.4.0)
    JUnit4-Parallel-Runner (1.5)
    com.atlassian.bitbucket.references (2022.1.224)
    com.thoughtworks.gauge (222.4459.16)
    com.developerphil.adbidea (1.6.9)

Current Desktop: ubuntu:GNOME
```",['duplicate'],['marcbaechinger'],,5
11148,Custom Rotation Video Renderer Not Working On subsequent Video,closed,2023-05-04 05:39:06,2023-08-15 01:05:03,2023-06-15 01:05:38,"Hi, I have a question regarding custom video renderer that I created sometimes ago to rotate the video when playing to surface view.

The app uses single player instance (player is kept in activity and the fragment will get the player in activity)
It used to work fine, but it seems now it only works on the first media played (rotated) and when the next fragment with the other video is playing (video is not rotated).

This is my custom video renderer below that I passed through a custom renderers factory when initiating the player
```
    @Override
    protected void onOutputFormatChanged(Format format, @Nullable MediaFormat mediaFormat) {
        Format rotatedFormat = format.buildUpon().setRotationDegrees(rotationDegree).build();
        super.onOutputFormatChanged(rotatedFormat, mediaFormat);
    }

    @Override
    protected MediaFormat getMediaFormat(Format format, String codecMimeType, CodecMaxValues codecMaxValues, float codecOperatingRate, boolean deviceNeedsNoPostProcessWorkaround, int tunnelingAudioSessionId) {
        Format rotatedFormat = format.buildUpon().setRotationDegrees(rotationDegree).build();
        return super.getMediaFormat(rotatedFormat, codecMimeType, codecMaxValues, codecOperatingRate, deviceNeedsNoPostProcessWorkaround, tunnelingAudioSessionId);
    }
```

Any idea? Thanks","['question', 'closed-by-bot']",['christosts'],,5
11147,mpd content not visible ,closed,2023-05-03 08:42:58,2023-07-03 01:05:26,2023-05-03 09:00:57,"### Bug

I'm experiencing an issue where the video is playing but the content is not visible

  private void initializePlayer() {
        String URL = ""https://1185-vos.dtvott.com/DASH/manifest.mpd"";

        DefaultHttpDataSource.Factory defaultHttpDataSourceFactory = new DefaultHttpDataSource.Factory()
                .setUserAgent(USER_AGENT)
                .setTransferListener(new DefaultBandwidthMeter.Builder(this)
                        .setResetOnNetworkTypeChange(false)
                        .build());

        DashChunkSource.Factory dashChunkSourceFactory = new DefaultDashChunkSource.Factory(defaultHttpDataSourceFactory);
        DefaultHttpDataSource.Factory manifestDataSourceFactory = new DefaultHttpDataSource.Factory().setUserAgent(USER_AGENT);

//        String keyId = ""fad9eaf7a980300686af7809c0377a00"";// keyId
//        String keyValue = ""0d270d4c1ef2a319aeaf2f424e9b1442"";// key value
        String keyString = ""{\""keys\"":[{\""kty\"":\""oct\"",\""k\"":\""DScNTB7yoxmury9CTpsUQg\"",\""kid\"":\""+tnq96mAMAaGr3gJwDd6AA\""}],'type':\""temporary\""}"";
//        String keyString = ""{\""keys\"":[{\""kty\"":\""oct\"",\""k\"":\""0d270d4c1ef2a319aeaf2f424e9b1442\"",\""kid\"":\""fad9eaf7a980300686af7809c0377a00\""}],'type':\""temporary\""}"";


        LocalMediaDrmCallback drmCallback = new LocalMediaDrmCallback(keyString.getBytes());

        DashMediaSource dashMediaSource = new DashMediaSource.Factory(dashChunkSourceFactory, manifestDataSourceFactory)
                .setDrmSessionManagerProvider(mediaItem -> new DefaultDrmSessionManager.Builder()
                        .setPlayClearSamplesWithoutKeys(true)
                        .setMultiSession(true)
                        .setKeyRequestParameters(new HashMap<String, String>())
                        .setUuidAndExoMediaDrmProvider(C.CLEARKEY_UUID, FrameworkMediaDrm.DEFAULT_PROVIDER)
                        .build(drmCallback))

//                .createMediaSource(new MediaItem.Builder()
//                        .setUri(Uri.parse(URL))
//                        .setMimeType(MimeTypes.APPLICATION_MPD)
//                        .setTag(null)
//                        .build());

                .createMediaSource(new MediaItem.Builder()
                        .setUri(Uri.parse(URL))
                        // DRM Configuration
                        .setDrmConfiguration(new MediaItem.DrmConfiguration
                                .Builder(C.CLEARKEY_UUID)
                                .setMultiSession(true)
                                .setForceSessionsForAudioAndVideoTracks(true)
                                .build())
                        .setTag(null)
                        .build());

        // Prepare the player.
        player = new ExoPlayer.Builder(this).build();
        player.setPlayWhenReady(true);
        binding.playerView.setPlayer(player);
        player.setMediaSource(dashMediaSource, true);
        player.prepare();
        player.addListener(new Player.Listener() {
            @Override
            public void onPlaybackStateChanged(int playbackState) {
                switch (playbackState) {
                    case Player.STATE_IDLE:
                        Log.d(""PlayerLogs"", ""onPlaybackStateChanged - IDLE"");
                        break;
                    case Player.STATE_BUFFERING:
                        Log.d(""PlayerLogs"", ""onPlaybackStateChanged - BUFFERING"");
                        break;
                    case Player.STATE_READY:
                        Log.d(""PlayerLogs"", ""onPlaybackStateChanged - READY"");
                        break;
                    case Player.STATE_ENDED:
                        Log.d(""PlayerLogs"", ""onPlaybackStateChanged - ENDED"");
                        break;
                }
                Player.Listener.super.onPlaybackStateChanged(playbackState);
            }


            @Override
            public void onPlayerError(@NonNull PlaybackException error) {
                Log.e(""PlayerLogs"", ""onPlayerError - error: "" + error.getMessage(), error);
                Player.Listener.super.onPlayerError(error);
            }
        });
    }
",['duplicate'],['icbaker'],,1
11146,Mpd not show content,closed,2023-05-02 15:28:45,2023-08-12 01:04:32,2023-06-12 01:05:47,"### Bug

Hello, a few months ago this code was working fine, I was playing my mpd and m3u8 files normally, but recently I have not been able to see the content and I am not getting any error in console.

```
package com.fraporitmos.exoplayer;

import android.app.Activity;
import android.net.Uri;
import android.os.Bundle;
import com.google.android.exoplayer2.C;
import com.google.android.exoplayer2.ExoPlayer;
import com.google.android.exoplayer2.MediaItem;
import com.google.android.exoplayer2.SimpleExoPlayer;
import com.google.android.exoplayer2.drm.DefaultDrmSessionManager;
import com.google.android.exoplayer2.drm.DrmSessionManager;
import com.google.android.exoplayer2.drm.FrameworkMediaDrm;
import com.google.android.exoplayer2.drm.LocalMediaDrmCallback;
import com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
import com.google.android.exoplayer2.source.MediaSource;
import com.google.android.exoplayer2.source.dash.DashMediaSource;
import com.google.android.exoplayer2.upstream.DataSource;
import com.google.android.exoplayer2.upstream.DefaultHttpDataSource;
import com.halil.ozel.exoplayerdrm.databinding.ActivityMainBinding;
import java.util.HashMap;
import java.util.Map;

public class MainActivity extends Activity {

    private ExoPlayer player;
    private ActivityMainBinding binding;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setView();
        initializePlayer();
    }

    private void setView() {
        binding = ActivityMainBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
    }

    private void initializePlayer() {
        playvideoStream(""https://1185-vos.dtvott.com/DASH/manifest.mpd"",""My stream"",  ""+tnq96mAMAaGr3gJwDd6AA"",""DScNTB7yoxmury9CTpsUQg"");
        binding.playerView.setPlayer(player);
    }

    @Override
    protected void onPause() {
        super.onPause();
        player.setPlayWhenReady(false);
    }

    public void playvideoStream(String url_stream, String title, String key1_stream, String key2_stream) {
        Uri videoURI = Uri.parse(url_stream);
        player = new SimpleExoPlayer.Builder(this)
                .setMediaSourceFactory(new
                        DefaultMediaSourceFactory(headers()))
                .build();

        LocalMediaDrmCallback drmCallback = new LocalMediaDrmCallback(String.format( ""{\""keys\"":[{\""kty\"":\""oct\"",\""k\"":\""%s\"",\""kid\"":\""%s\""}],\""type\"":\""temporary\""}"",key1_stream,key2_stream).getBytes() );

        DrmSessionManager manager = new DefaultDrmSessionManager.Builder()
                .setPlayClearSamplesWithoutKeys(true)
                .setMultiSession(false)
                .setKeyRequestParameters(new HashMap<String,String>())
                .setUuidAndExoMediaDrmProvider(C.CLEARKEY_UUID, FrameworkMediaDrm.DEFAULT_PROVIDER)
                .build(drmCallback);
        DataSource.Factory dataSourceFactory = new DefaultHttpDataSource.Factory();


            MediaSource dashMediaSource = new DashMediaSource.Factory(dataSourceFactory)
                    .setDrmSessionManagerProvider(mediaItem -> manager)
                    .createMediaSource(MediaItem.fromUri(videoURI));
            player.setMediaSource(dashMediaSource);
            player.setPlayWhenReady(true);
            player.prepare();
            player.play();
    }

    public DataSource.Factory headers() {
        Map<String, String> headersMap = new HashMap<>();
        headersMap.put(""Referer"", """");
        headersMap.put(""Origin"", """");
        headersMap.put(""user-agent"", ""Mozilla"");
        return new DefaultHttpDataSource.Factory().setDefaultRequestProperties(headersMap);
    }
}
```",['closed-by-bot'],['icbaker'],,8
11145,live video stops playing after 4-5 seconds,open,2023-05-02 12:09:52,2023-05-05 08:09:53,,"tried using track selector & load control but still facing the issue of repeating frame for few seconds and then again stops

       val loadControl = DefaultLoadControl.Builder()
            .setAllocator(DefaultAllocator(true,16))
            .setBufferDurationsMs(32*1024, 64*1024, 1024, 1024)
            .setTargetBufferBytes(-1).setPrioritizeTimeOverSizeThresholds(true).createDefaultLoadControl()

        val trackSelectorParameters = DefaultTrackSelector.ParametersBuilder()
            .setMaxVideoBitrate(5000)
            .setMaxAudioBitrate(5000)
            .build()

       exoPlayer =
            ExoPlayer.Builder(this).setSeekBackIncrementMs(10000).setSeekForwardIncrementMs(10000)
                .setTrackSelector(trackSelector)
                .setLoadControl(loadControl)
                .build()
                
 can anyone please provide solution for this bug",['question'],['marcbaechinger'],,4
11144,Clipping media source only shows clipped duration in progress bar,closed,2023-05-01 07:13:23,2023-07-17 01:05:32,2023-05-17 09:11:43,"I am using concating media source with clipped media and divided my content into 20 seconds of video each

```
        val userAgent = Util.getUserAgent(this, ""Demo"")

        val defaultMediaSource = DefaultDataSourceFactory(this, userAgent)
        progressiveMediaSource = ProgressiveMediaSource.Factory(defaultMediaSource)
        val hlsMediaSource = HlsMediaSource.Factory(defaultMediaSource)
        movieMediaSource =
            hlsMediaSource.createMediaSource(MediaItem.Builder()
                .setUri(""https://devstreaming-cdn.apple.com/videos/streaming/examples/bipbop_4x3/bipbop_4x3_variant.m3u8"")
                .setMediaId(""content"")
                .build())
        concatMediaSource = ConcatenatingMediaSource(ClippingMediaSource(
            movieMediaSource,
            0 * 1000 * 1000,
            1 * 1000 * 1000))
        player.addMediaSource(concatMediaSource)
        concatMediaSource.addMediaSource(ClippingMediaSource(
            movieMediaSource,
            1 * 1000 * 1000,
            20 * 1000 * 1000)
        )
        concatMediaSource.addMediaSource(ClippingMediaSource(
            movieMediaSource,
            20 * 1000 * 1000,
            40 * 1000 * 1000)
        )
        concatMediaSource.addMediaSource(ClippingMediaSource(
            movieMediaSource,
            40 * 1000 * 1000,
            60 * 1000 * 1000)
        )
```

For every clipped media I get progress bar of 20 seconds and not of 60 seconds.
How can I get of 60 seconds?
and the player.duration returns 20 instead of 60",['question'],['marcbaechinger'],,3
11143,How to set the offset byte stream,open,2023-05-01 01:35:49,2023-05-03 12:38:55,,"
![image](https://user-images.githubusercontent.com/33193340/235388238-8add115b-50de-46bd-b964-8398b18eb401.png)


How to set the offset byte stream


I tried to implement it with request headers but it couldn't

```

 val dataSourceFactory: DataSource.Factory = DataSource.Factory {
            val factory = DefaultHttpDataSource.Factory()

            val dataSource = factory.createDataSource()

            dataSource.setRequestProperty(""Range"", ""bytes=0-1023"")

            dataSource;
        }
```


",['question'],['marcbaechinger'],,3
11142,Dev v2,closed,2023-04-29 23:29:53,2023-07-02 01:05:10,2023-05-02 17:26:44,Test,[],[],,1
11141,Dev v2,closed,2023-04-29 22:57:00,2023-06-29 01:05:22,2023-04-29 23:17:37,Helpfull,[],[],,0
11140,Inquiry about LocalMediaDrmCallback,closed,2023-04-29 13:16:43,2023-07-03 01:05:27,2023-05-03 07:14:41,"I'm trying to use LocalMediaDrmCallback for Widevine protected contents by explicitly providing decryption key. Is it possible to do so? I used this for Clearkey protected contents and it was working fine.

",['question'],['icbaker'],,10
11139,Video playback exception,closed,2023-04-27 03:00:00,2023-07-06 01:05:40,2023-05-06 08:59:25,"### Bug

Why I use ExoPlayer to play links: https://online-education.codemao.cn/228/codecamp/e7e744a1933747c5ada76ca79e7fced6.mp4 will be caton the first few seconds, while the player using the system play normally, Please help to provide reasons and solutions.","['bug', 'need more info']",['rohitjoins'],,3
11138,Some Android 10 devices has ANR,open,2023-04-26 08:56:19,2023-06-13 12:52:07,,"### Bug

android.os.BinderProxy.transactNative(Native Method)
android.os.BinderProxy.transact(BinderProxy.java:610)
android.media.IAudioService$Stub$Proxy.getStreamVolume(IAudioService.java:4565)
android.media.AudioManager.getStreamVolume(AudioManager.java:1210)
com.google.android.exoplayer2.StreamVolumeManager.getVolumeFromManager(StreamVolumeManager.java:1)
com.google.android.exoplayer2.StreamVolumeManager.<init>(StreamVolumeManager.java:8)
com.google.android.exoplayer2.SimpleExoPlayer.<init>(SimpleExoPlayer.java:60)
com.google.android.exoplayer2.SimpleExoPlayer$Builder.build(SimpleExoPlayer.java:3)
io.flutter.plugins.videoplayer.VideoPlayer.<init>(VideoPlayer.java:7)
io.flutter.plugins.videoplayer.VideoPlayerPlugin.create(VideoPlayerPlugin.java:16)",['bug'],['rohitjoins'],,3
11137,java.lang.NoClassDefFoundError: com.google.android.exoplayer2.ExoPlayer$Builder$$ExternalSyntheticLambda2,closed,2023-04-26 08:51:04,2023-06-27 01:05:23,2023-04-27 16:12:32,"### Bug

### NoClassDefFoundError

>I got an error that only occurs on Android versions 6.0 and 5.0. It looks like an anonymous inner class was not found. 
How can i solve this problem, please?
Running device version: 6.0.
Gradle version: 7.1.2.
Android studio version: flamingo(2022.2.1).
ExoPlayer version: 2.18.1.

```
java.lang.NoClassDefFoundError: com.google.android.exoplayer2.ExoPlayer$Builder$$ExternalSyntheticLambda2
at com.google.android.exoplayer2.ExoPlayer$Builder.<init>(ExoPlayer.java:528)
at tv.danmaku.ijk.media.exo2.IjkExo2MediaPlayer$1.run(IjkExo2MediaPlayer.java:396)
at android.os.Handler.handleCallback(Handler.java:739)
at android.os.Handler.dispatchMessage(Handler.java:95)
at android.os.Looper.loop(Looper.java:148)
at android.app.ActivityThread.main(ActivityThread.java:5417)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)
```",['duplicate'],[],,1
11136,How to start playing a live stream with an offset,closed,2023-04-26 07:54:42,2023-08-13 01:04:39,2023-06-13 12:29:37,"Hi,

I have a live stream with a 4 hours timeshift buffer. I need to start playing this stream with some offset from the live edge. The use case is to be able to start playing at the beginning of a show ; for example it's 10:00 and the show being currently broadcast started at 9:00, so I want ExoPlayer to start playing with a 1 hour offset from the live edge.

I saw this question https://github.com/google/ExoPlayer/issues/6149 but it's quite old and I think API changed. I also see the [LiveConfiguration.targetOffsetMs](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/MediaItem.LiveConfiguration.html#targetOffsetMs) property but it doesn't seem to work as ExoPlayer (2.18.1) starts playing at the live edge whenever I set a targetOffsetMs value or not.
I would like to give this offset at prepare time, to avoid waiting the `Player.STATE_READY` state and do a `seekTo(duration - offset)`.

So my question is: what is the best way to do it?
","['question', 'wont fix: not reproducible']",['rohitjoins'],,2
11135,Offline Playback of DRM content,closed,2023-04-26 06:44:45,2023-06-26 01:05:13,2023-04-26 13:23:08,"There ar
![26a504f4-a7d3-4285-9661-6e50a68f027d](https://user-images.githubusercontent.com/39764252/234491511-e92938d6-cfb0-4aaa-b5cc-3148f9855f2d.png)
e several examples that shows use of ExoPlayer’s DownloadService class to download content.

Our use case is to download the files(s) (including .mpd, .mp4 (audio & video)) using backend gRPC services and modify ExoPlayer’s media source Uri to point to a folder on Android device with these files to play the content.

I am not able to get this going with several attempt to use file Uri instead of Http Uri. A typical exception I see is attached with this text.

Can you point me to any source which plays a downloaded content from a custom folder on the device and not use ExoPlayer’s Download service to cache the content?",['question'],['icbaker'],,3
11134,onPlayerError not called when there is a SocketTimeOutError,closed,2023-04-25 10:49:27,2023-06-27 01:05:24,2023-04-27 11:03:37,"### Bug

Descriptiion: 

When there is an error (SocketTimeout) Using even logger I can see that onLoadError is called but onPlayerError is not called at all.

**Step to reproduce issue:** 

1. Open playback and observer that playback is working
2. Using charles proxy create a rule to force a timeout error
3. Observe that EventLogger is reporting the timeout but onPlayerError callback function is not being called. 

Exoplayer version: 2.18.4
Using drm license: yes
Protocl use: DASH
Content: Live


",['duplicate'],['icbaker'],,1
11133,ERROR_CODE_FAILED_RUNTIME_CHECK & ERROR_CODE_DECODER_INIT_FAILED,open,2023-04-21 11:54:19,2023-04-21 17:07:53,,"### Bug

I have a ViewPager2 + Fragment. Each Fragment has an ExoPlayer. There a pool for avoiding recreating ExoPlayer all the time. Everytime ViewPager2 recycle the fragment, i put the player into the pool for reusing. (player.stop() and player.clearMediaItems() will be invoked before get into the pool)

When scrolling the ViewPager2, sometimes the video failed to play with the ""ERROR_CODE_FAILED_RUNTIME_CHECK"" error. The detail log is the following log1. Then i release the player and create a new one, prepare it and play again, a new error occur (log2).

there is no problem with the video url. (it could be played for most cases)

Is there any good suggestion to avoid this happening?

the phone is HUAWEI Mate 10

android version: 8.1.0

- log1:
```
timeline [eventTime=72.64, mediaPos=0.00, window=0, periodCount=1, windowCount=1, reason=PLAYLIST_CHANGED
  period [?]
  window [?, seekable=false, dynamic=true]
]
mediaItem [eventTime=72.64, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]
state [eventTime=72.64, mediaPos=0.00, window=0, BUFFERING]
loading [eventTime=72.65, mediaPos=0.00, window=0, period=0, true]
timeline [eventTime=72.65, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
  period [?]
  window [?, seekable=false, dynamic=false]
]
timeline [eventTime=72.84, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
  period [91.07]
  window [91.07, seekable=true, dynamic=false]
]
surfaceSize [eventTime=77.56, mediaPos=0.30, window=0, period=0, 0, 0]
state [eventTime=72.34, mediaPos=0.77, window=0, period=0, IDLE]
timeline [eventTime=72.34, mediaPos=0.00, window=0, periodCount=0, windowCount=0, reason=PLAYLIST_CHANGED
]
positionDiscontinuity [eventTime=72.34, mediaPos=0.00, window=0, reason=REMOVE, PositionInfo:old [mediaItem=0, period=0, pos=766], PositionInfo:new [mediaItem=0, period=-1, pos=0]]
mediaItem [eventTime=72.34, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]
tracks [eventTime=72.34, mediaPos=0.00, window=0
]
playWhenReady [eventTime=73.69, mediaPos=0.00, window=0, period=0, true, USER_REQUEST]
isPlaying [eventTime=73.69, mediaPos=0.00, window=0, period=0, true]
videoEnabled [eventTime=72.88, mediaPos=0.00, window=0, period=0]
audioEnabled [eventTime=72.88, mediaPos=0.00, window=0, period=0]
tracks [eventTime=72.88, mediaPos=0.00, window=0, period=0
  group [
    [X] Track:0, id=1, mimeType=video/avc, codecs=avc1.64001F, res=360x640, fps=60.0, supported=YES
  ]
  group [
    [X] Track:0, id=2, mimeType=audio/mp4a-latm, bitrate=64060, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und, supported=YES
  ]
]
downstreamFormat [eventTime=72.89, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.64001F, res=360x640, fps=60.0]
videoDisabled [eventTime=72.36, mediaPos=0.00, window=0, period=0]
audioDisabled [eventTime=72.36, mediaPos=0.00, window=0, period=0]
surfaceSize [eventTime=72.89, mediaPos=0.00, window=0, period=0, 1039, 1848]
videoDecoderInitialized [eventTime=72.93, mediaPos=0.00, window=0, period=0, OMX.hisi.video.decoder.avc]
videoInputFormat [eventTime=72.93, mediaPos=0.00, window=0, period=0, id=1, mimeType=video/avc, codecs=avc1.64001F, res=360x640, fps=60.0]
downstreamFormat [eventTime=72.93, mediaPos=0.00, window=0, period=0, id=2, mimeType=audio/mp4a-latm, bitrate=64060, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und]
audioDecoderInitialized [eventTime=72.94, mediaPos=0.00, window=0, period=0, OMX.google.aac.decoder]
audioInputFormat [eventTime=72.94, mediaPos=0.00, window=0, period=0, id=2, mimeType=audio/mp4a-latm, bitrate=64060, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und]
state [eventTime=72.96, mediaPos=0.00, window=0, period=0, READY]
videoDecoderReleased [eventTime=72.45, mediaPos=0.00, window=0, period=0, OMX.hisi.video.decoder.avc]
audioDecoderReleased [eventTime=72.45, mediaPos=0.00, window=0, period=0, OMX.google.aac.decoder]
state [eventTime=72.99, mediaPos=0.00, window=0, period=0, BUFFERING]
videoSize [eventTime=73.00, mediaPos=0.00, window=0, period=0, 360, 640]
renderedFirstFrame [eventTime=73.00, mediaPos=0.00, window=0, period=0, Surface(name=android.graphics.SurfaceTexture@f271f04)  (appName =null) ( mSurfaceControllerIsValid =true) (mNativeObject  =76f87cd000)/@0x339ced]
surfaceSize [eventTime=73.01, mediaPos=0.00, window=0, period=0, 1080, 1920]
state [eventTime=73.01, mediaPos=0.00, window=0, period=0, READY]
loading [eventTime=73.06, mediaPos=0.00, window=0, period=0, false]
ClipPlayer.initView() set play listener
playWhenReady [eventTime=75.18, mediaPos=1.39, window=0, period=0, false, USER_REQUEST]
isPlaying [eventTime=75.18, mediaPos=1.39, window=0, period=0, false]
ClipPlayer.load() name=http://192.168.2.21:8083/movie/m3u8/25d72b1439/recommend.mp4 name=我是好人王
timeline [eventTime=73.89, mediaPos=0.00, window=0, periodCount=1, windowCount=1, reason=PLAYLIST_CHANGED
  period [?]
  window [?, seekable=false, dynamic=true]
]
mediaItem [eventTime=73.89, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]
state [eventTime=73.89, mediaPos=0.00, window=0, BUFFERING]
loading [eventTime=73.90, mediaPos=0.00, window=0, period=0, true]
timeline [eventTime=73.90, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
  period [?]
  window [?, seekable=false, dynamic=false]
]
timeline [eventTime=73.96, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
  period [116.40]
  window [116.40, seekable=true, dynamic=false]
]
videoEnabled [eventTime=73.97, mediaPos=0.00, window=0, period=0]
audioEnabled [eventTime=73.97, mediaPos=0.00, window=0, period=0]
tracks [eventTime=73.97, mediaPos=0.00, window=0, period=0
  group [
    [X] Track:0, id=2, mimeType=video/avc, codecs=avc1.640032, res=1080x1920, fps=30.0, supported=YES
  ]
  group [
    [X] Track:0, id=1, mimeType=audio/mp4a-latm, bitrate=64053, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und, supported=YES
  ]
]
downstreamFormat [eventTime=73.98, mediaPos=0.00, window=0, period=0, id=2, mimeType=video/avc, codecs=avc1.640032, res=1080x1920, fps=30.0]
surfaceSize [eventTime=79.02, mediaPos=0.24, window=0, period=0, 0, 0]
state [eventTime=79.29, mediaPos=0.30, window=0, period=0, IDLE]
timeline [eventTime=79.29, mediaPos=0.00, window=0, periodCount=0, windowCount=0, reason=PLAYLIST_CHANGED
]
positionDiscontinuity [eventTime=79.29, mediaPos=0.00, window=0, reason=REMOVE, PositionInfo:old [mediaItem=0, period=0, pos=300], PositionInfo:new [mediaItem=0, period=-1, pos=0]]
mediaItem [eventTime=79.29, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]
tracks [eventTime=79.29, mediaPos=0.00, window=0
]
playWhenReady [eventTime=74.58, mediaPos=0.00, window=0, period=0, true, USER_REQUEST]
isPlaying [eventTime=74.58, mediaPos=0.00, window=0, period=0, true]
videoDisabled [eventTime=79.30, mediaPos=0.00, window=0, period=0]
audioDisabled [eventTime=79.30, mediaPos=0.00, window=0, period=0]
surfaceSize [eventTime=74.08, mediaPos=0.00, window=0, period=0, 1038, 1848]
videoDecoderInitialized [eventTime=74.08, mediaPos=0.00, window=0, period=0, OMX.hisi.video.decoder.avc]
videoInputFormat [eventTime=74.08, mediaPos=0.00, window=0, period=0, id=2, mimeType=video/avc, codecs=avc1.640032, res=1080x1920, fps=30.0]
downstreamFormat [eventTime=74.08, mediaPos=0.00, window=0, period=0, id=1, mimeType=audio/mp4a-latm, bitrate=64053, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und]
audioDecoderInitialized [eventTime=74.11, mediaPos=0.00, window=0, period=0, OMX.google.aac.decoder]
audioInputFormat [eventTime=74.11, mediaPos=0.00, window=0, period=0, id=1, mimeType=audio/mp4a-latm, bitrate=64053, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und]
state [eventTime=74.13, mediaPos=0.00, window=0, period=0, READY]
videoDecoderReleased [eventTime=79.38, mediaPos=0.00, window=0, period=0, OMX.hisi.video.decoder.avc]
audioDecoderReleased [eventTime=79.38, mediaPos=0.00, window=0, period=0, OMX.google.aac.decoder]
videoDisabled [eventTime=74.19, mediaPos=0.00, window=0, period=0]
audioDisabled [eventTime=74.20, mediaPos=0.00, window=0, period=0]
videoDecoderReleased [eventTime=74.26, mediaPos=0.00, window=0, period=0, OMX.hisi.video.decoder.avc]
audioDecoderReleased [eventTime=74.26, mediaPos=0.00, window=0, period=0, OMX.google.aac.decoder]
playerFailed [eventTime=74.26, mediaPos=0.00, window=0, period=0, errorCode=ERROR_CODE_FAILED_RUNTIME_CHECK
  com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtime error
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:628)
      at android.os.Handler.dispatchMessage(Handler.java:105)
      at android.os.Looper.loop(Looper.java:166)
      at android.os.HandlerThread.run(HandlerThread.java:65)
  Caused by: java.lang.IllegalArgumentException
      at android.media.MediaCodec.native_setSurface(Native Method)
      at android.media.MediaCodec.setOutputSurface(MediaCodec.java:1975)
      at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.setOutputSurface(SynchronousMediaCodecAdapter.java:189)
      at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.setOutputSurfaceV23(MediaCodecVideoRenderer.java:1500)
      at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.setOutput(MediaCodecVideoRenderer.java:694)
      at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.handleMessage(MediaCodecVideoRenderer.java:632)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.deliverMessage(ExoPlayerImplInternal.java:1566)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.sendMessageToTarget(ExoPlayerImplInternal.java:1530)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.sendMessageInternal(ExoPlayerImplInternal.java:1505)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:533)
      at android.os.Handler.dispatchMessage(Handler.java:105) 
      at android.os.Looper.loop(Looper.java:166) 
      at android.os.HandlerThread.run(HandlerThread.java:65) 
```



ERROR_CODE_DECODER_INIT_FAILED



- log2:

```
 playWhenReady [eventTime=0.01, mediaPos=0.00, window=0, true, USER_REQUEST]
 surfaceSize [eventTime=0.02, mediaPos=0.00, window=0, 1080, 1848]
 timeline [eventTime=0.03, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
   period [?]
   window [?, seekable=false, dynamic=false]
 ]
 loading [eventTime=0.03, mediaPos=0.00, window=0, period=0, true]
 surfaceSize [eventTime=197.69, mediaPos=0.21, window=0, period=0, 1080, 1920]
 videoSize [eventTime=197.71, mediaPos=0.21, window=0, period=0, 360, 640]
 renderedFirstFrame [eventTime=197.71, mediaPos=0.21, window=0, period=0, Surface(name=android.graphics.SurfaceTexture@9216947)  (appName =null) ( mSurfaceControllerIsValid =true) (mNativeObject  =76d533c000)/@0x537a574]
 timeline [eventTime=0.11, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
   period [112.66]
   window [112.66, seekable=true, dynamic=false]
 ]
 videoEnabled [eventTime=0.12, mediaPos=0.00, window=0, period=0]
 audioEnabled [eventTime=0.12, mediaPos=0.00, window=0, period=0]
 tracks [eventTime=0.12, mediaPos=0.00, window=0, period=0
   group [
     [X] Track:0, id=2, mimeType=video/avc, codecs=avc1.64001F, res=480x854, fps=30.0, supported=YES
   ]
   group [
     [X] Track:0, id=1, mimeType=audio/mp4a-latm, bitrate=64058, codecs=mp4a.40.2, channels=2, sample_rate=44100, language=und, supported=YES
   ]
 ]
 downstreamFormat [eventTime=0.12, mediaPos=0.00, window=0, period=0, id=2, mimeType=video/avc, codecs=avc1.64001F, res=480x854, fps=30.0]
 videoDisabled [eventTime=0.30, mediaPos=0.00, window=0, period=0]
 audioDisabled [eventTime=0.30, mediaPos=0.00, window=0, period=0]
playerFailed [eventTime=0.31, mediaPos=0.00, window=0, period=0, errorCode=ERROR_CODE_DECODER_INIT_FAILED
  com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(2, null, null, video/avc, avc1.64001F, -1, null, [480, 854, 30.0], [-1, -1]), format_supported=YES
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:578)
      at android.os.Handler.dispatchMessage(Handler.java:105)
      at android.os.Looper.loop(Looper.java:166)
      at android.os.HandlerThread.run(HandlerThread.java:65)
  Caused by: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.hisi.video.decoder.avc, Format(2, null, null, video/avc, avc1.64001F, -1, null, [480, 854, 30.0], [-1, -1])
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1029)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:537)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1453)
      at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:917)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readSourceOmittingSampleData(MediaCodecRenderer.java:954)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:769)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
      at android.os.Handler.dispatchMessage(Handler.java:105) 
      at android.os.Looper.loop(Looper.java:166) 
      at android.os.HandlerThread.run(HandlerThread.java:65) 
  Caused by: java.lang.IllegalArgumentException
      at android.media.MediaCodec.native_configure(Native Method)
      at android.media.MediaCodec.configure(MediaCodec.java:1956)
      at android.media.MediaCodec.configure(MediaCodec.java:1885)
      at com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter$Factory.createAdapter(SynchronousMediaCodecAdapter.java:51)
      at com.google.android.exoplayer2.mediacodec.DefaultMediaCodecAdapterFactory.createAdapter(DefaultMediaCodecAdapterFactory.java:113)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.initCodec(MediaCodecRenderer.java:1099)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecWithFallback(MediaCodecRenderer.java:1010)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodecOrBypass(MediaCodecRenderer.java:537) 
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(MediaCodecRenderer.java:1453) 
      at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onInputFormatChanged(MediaCodecVideoRenderer.java:917) 
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readSourceOmittingSampleData(MediaCodecRenderer.java:954) 
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:769) 
      at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007) 
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502) 
      at android.os.Handler.dispatchMessage(Handler.java:105) 
      at android.os.Looper.loop(Looper.java:166) 
      at android.os.HandlerThread.run(HandlerThread.java:65) 
]
```


","['bug', 'needs triage']",['christosts'],,0
11132,Exoplayer stuck on buffering in Release build,closed,2023-04-20 18:10:59,2023-06-20 01:05:38,2023-04-20 18:56:49,"### Bug

I am facing a weird issue whenever I built release apk exoplayer stuck on buffering. But in debug it's working fine. I have tried everything but can't figured out what is the exact issue. Also if obfuscate debug with R8 it's work but same issue in Release. ","['bug', 'needs triage']",[],,1
11131,closed caption,closed,2023-04-20 09:40:12,2023-07-10 01:05:37,2023-05-10 10:11:37,"How do I determine the closed captions in a video?

The following is the test link,
http://devimages.apple.com.edgekey.net/streaming/examples/bipbop_16x9/bipbop_16x9_variant.m3u8


There are 8 subtitle tracks in the list and 2 hidden subtitles in the video stream,
In the subtitle track of the player, there is always a ""EIA-608"" track, and I cannot determine if it really exists


",['question'],['icbaker'],,5
11130,"When loading some HLS videos, the value of duration or currentPosition is displayed/processed incorrectly",closed,2023-04-19 17:16:38,2023-06-20 01:05:39,2023-04-20 08:50:12,"### Bug

When loading some HLS videos, the value of duration or currentPosition is displayed/processed incorrectly.

When rewinding with a timeline at or near the end, the position continues to increase after the Player.duration = Player.currentPosition.
Because of this, it is not possible to correctly track the status of playback,
because the STATE_ENDED is get after the currentPosition has finished incrementing.

Bug repeats on versions: 2.16.1 - 2.18.5
Bug repeats on devices: Pixel 4 XL API 33, Pixel 6 API 32, Pixel 4 XL API 31, Pixel 4 XL API 29.

Test video: https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8
Video duration = 14:48
Final currentPosition = 15:05 - 15:06

My demo app:

My MainActivity:

```
package com.example.exodemo

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import com.example.exodemo.databinding.ActivityMainBinding
import com.google.android.exoplayer2.ExoPlayer
import com.google.android.exoplayer2.MediaItem
import com.google.android.exoplayer2.Player
import com.google.android.exoplayer2.source.MediaSource
import com.google.android.exoplayer2.source.hls.HlsMediaSource
import com.google.android.exoplayer2.upstream.*
import com.google.android.exoplayer2.util.Util

class MainActivity : AppCompatActivity(), Player.Listener {

    private var mPlayer: ExoPlayer? = null
    private lateinit var binding: ActivityMainBinding
    private val url = ""https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)
    }

    private fun buildMediaSource(): MediaSource {
        val dataSourceFactory: DataSource.Factory = DefaultHttpDataSource.Factory()
        return HlsMediaSource.Factory(dataSourceFactory)
            .createMediaSource(MediaItem.fromUri(url))
    }

    private fun initPlayer() {
        mPlayer = ExoPlayer.Builder(this).build()
        binding.playerView.player = mPlayer
        mPlayer!!.playWhenReady = false
        mPlayer!!.setMediaSource(buildMediaSource())
        mPlayer!!.prepare()
    }

    override fun onStart() {
        super.onStart()
        if (Util.SDK_INT >= 24) {
            initPlayer()
        }
    }

    override fun onResume() {
        super.onResume()
        if (Util.SDK_INT < 24 || mPlayer == null) {
            initPlayer()
        }
    }

    override fun onPause() {
        super.onPause()
        if (Util.SDK_INT < 24) {
            releasePlayer()
        }
    }

    override fun onStop() {
        super.onStop()
        if (Util.SDK_INT >= 24) {
            releasePlayer()
        }
    }

    private fun releasePlayer() {
        if (mPlayer == null) {
            return
        }
        mPlayer!!.release()
        mPlayer = null
    }
}
```

My build.gradle(:app):

```
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.exodemo'
    compileSdk 33

    defaultConfig {
        applicationId ""com.example.exodemo""
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName ""1.0""

        testInstrumentationRunner ""androidx.test.runner.AndroidJUnitRunner""
    }

    buildFeatures{
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.exoplayer:exoplayer:2.18.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
```

My build.gradle(ExoDemo):

```
plugins {
    id 'com.android.application' version '7.3.1' apply false
    id 'com.android.library' version '7.3.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
}
```

My demo app using ExoPlayer2 on Google Drive: https://drive.google.com/file/d/1ilhc0UhFpuyEBj5_fu5i9Y4YFqVQBiBx/view?usp=share_link

Bug visualization(currentPosition > duration):
![Снимок экрана (92)](https://user-images.githubusercontent.com/101008349/233150068-df0e9ec2-3f92-430a-bdef-78540bc46744.png)
",['duplicate'],['christosts'],,1
11129,r2.18.6,closed,2023-04-19 09:18:16,2023-06-19 01:05:30,2023-04-19 17:08:26,,[],['rohitjoins'],,0
11128,  Fatal Exception: android.view.InflateException Binary XML file line #28: Binary XML file line #28: Error inflating class com.google.android.exoplayer2.ui.StyledPlayerView,closed,2023-04-19 02:23:14,2023-06-19 01:05:30,2023-04-19 09:08:34,"### Bug

Fatal Exception: android.view.InflateException
Binary XML file line #28: Binary XML file line #28: Error inflating class com.google.android.exoplayer2.ui.StyledPlayerView

release version crash!!

What proguard settings do you need?

Caused by android.content.res.Resources$NotFoundException
Font resource ID #0x7f090000 could not be retrieved.

playerview is ok!
but crash in StyledPlayerView ",['duplicate'],['icbaker'],,1
11127,Dts direct passthrough contri,closed,2023-04-18 10:02:46,2023-06-18 01:05:11,2023-04-18 12:58:58,"This adds DTS Audio Support for Direct Passthrough playback. This is required for Tunnel mode playback on Android TVs that supports tunnel mode playback (e.g. MTK and Realtek based TVs). Test streams will be provided during the review if required.
Thanks.",[],[],,1
11126,Add Direct Passthrough Playback Support For DTS Audio.,closed,2023-04-18 09:49:51,2023-06-18 01:05:12,2023-04-18 10:00:33,"This adds DTS Audio Support for Direct Passthrough playback. This is required for Tunnel mode playback on Android TVs that supports tunnel mode playback (e.g. MTK and Realtek based TVs). Test streams will be provided during the review if required.
Thanks.",[],[],,0
11125,play live mp4 video exception,open,2023-04-18 08:51:25,2023-07-04 15:37:54,,"### Bug

An exception occurred while playing MP4, which only appeared on some videos, and this is a video that can be played normally using other methods.
exception:
 E/LoadTask: Unexpected exception loading stream
      java.lang.ArrayIndexOutOfBoundsException: length=157; index=157
        at com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte(ParsableByteArray.java:233)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseVideoSampleEntry(AtomParsers.java:1203)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseStsd(AtomParsers.java:949)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseTrak(AtomParsers.java:308)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseTraks(AtomParsers.java:130)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processMoovAtom(Mp4Extractor.java:483)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processAtomEnded(Mp4Extractor.java:442)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readAtomPayload(Mp4Extractor.java:424)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.read(Mp4Extractor.java:242)
        at com.google.android.exoplayer2.source.BundledExtractorsAdapter.read(BundledExtractorsAdapter.java:127)
        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1047)
        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
        at java.lang.Thread.run(Thread.java:764)

E/ExoPlayerImplInternal: Playback error
      com.google.android.exoplayer2.ExoPlaybackException: Source error
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:624)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:600)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:207)
        at android.os.HandlerThread.run(HandlerThread.java:65)
     Caused by: com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException: Unexpected ArrayIndexOutOfBoundsException: length=157; index=157
        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:430)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
        at java.lang.Thread.run(Thread.java:764)
     Caused by: java.lang.ArrayIndexOutOfBoundsException: length=157; index=157
        at com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte(ParsableByteArray.java:233)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseVideoSampleEntry(AtomParsers.java:1203)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseStsd(AtomParsers.java:949)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseTrak(AtomParsers.java:308)
        at com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseTraks(AtomParsers.java:130)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processMoovAtom(Mp4Extractor.java:483)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processAtomEnded(Mp4Extractor.java:442)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readAtomPayload(Mp4Extractor.java:424)
        at com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.read(Mp4Extractor.java:242)
        at com.google.android.exoplayer2.source.BundledExtractorsAdapter.read(BundledExtractorsAdapter.java:127)
        at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1047)
        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) 
        at java.lang.Thread.run(Thread.java:764) 


",['bug'],['rohitjoins'],,6
11124,Propagate bitrate from MP3 files into Format (maybe only CBR ones?),open,2023-04-18 05:02:26,2023-04-25 10:12:04,,"### Bug

```txt
D/CCodecConfig(10713): no c2 equivalents for log-session-id
D/CCodecConfig(10713): no c2 equivalents for flags
D/CCodecConfig(10713): config failed => CORRUPTED
D/CCodecConfig(10713): c2 config diff is   c2::u32 raw.sample-rate.value = 48000
W/Codec2Client(10713): query -- param skipped: index = 1107298332.
D/CCodec  (10713): client requested max input size 4096, which is smaller than what component recommended (8192); overriding with component recommendation.
W/CCodec  (10713): This behavior is subject to change. It is recommended that app developers double check whether the requested max input size is in reasonable range.
D/CCodec  (10713): setup formats input: AMessage(what = 0x00000000) = {
D/CCodec  (10713):   int32_t bitrate = 64000
D/CCodec  (10713):   int32_t channel-count = 2
D/CCodec  (10713):   int32_t max-input-size = 8192
D/CCodec  (10713):   string mime = ""audio/mpeg""
D/CCodec  (10713):   int32_t sample-rate = 48000
D/CCodec  (10713): }
D/CCodec  (10713): setup formats output: AMessage(what = 0x00000000) = {
D/CCodec  (10713):   int32_t channel-count = 2
D/CCodec  (10713):   string mime = ""audio/raw""
D/CCodec  (10713):   int32_t sample-rate = 48000
D/CCodec  (10713): }
I/CCodecConfig(10713): query failed after returning 7 values (BAD_INDEX)
D/MediaCodec(10713): keep callback message for reclaim
W/Codec2Client(10713): query -- param skipped: index = 1342179345.
W/Codec2Client(10713): query -- param skipped: index = 2415921170.
D/C2Store (10713): Using ION
D/CCodecBufferChannel(10713): [c2.android.mp3.decoder#865] Created input block pool with allocatorID 16 => poolID 17 - OK (0)
I/CCodecBufferChannel(10713): [c2.android.mp3.decoder#865] Created output block pool with allocatorID 16 => poolID 451 - OK
D/CCodecBufferChannel(10713): [c2.android.mp3.decoder#865] Configured output block pool ids 451 => OK
E/ion     (10713): ioctl c0044901 failed with code -1: Invalid argument
D/MediaCodec(10713): keep callback message for reclaim
I/CCodecConfig(10713): query failed after returning 7 values (BAD_INDEX)
W/Codec2Client(10713): query -- param skipped: index = 1342179345.
W/Codec2Client(10713): query -- param skipped: index = 2415921170.
D/AudioTrack(10713): getTimestamp_l(6997): device stall time corrected using current time 466586944835654
D/BufferPoolAccessor2.0(10713): bufferpool2 0x7351c28368 : 5(40960 size) total buffers - 0(0 size) used buffers - 138/143 (recycle/alloc) - 5/276 (fetch/transfer)
```

You can clearly see this line: `int32_t bitrate = 64000`.","['enhancement', 'low priority']",['icbaker'],,15
11123,Add a method to resolve the shuffled position from the Timeline,closed,2023-04-15 18:53:15,2023-06-19 01:05:31,2023-04-19 11:57:34,"Currently one has too loop through the Timeline, to figure out to which shuffle position an MediaItem at a given index resolves to:


```
    fun getCurrentShuffleIndex(): Int {
        val timeline = controller?.currentTimeline!!
        val currentMediaItemIndex = controller?.currentMediaItemIndex ?: return -1
        var windowIndex = timeline.getFirstWindowIndex(true)
        var count = 0
        while (windowIndex != C.INDEX_UNSET) {
            count++
            windowIndex = timeline.getNextWindowIndex(
                windowIndex, REPEAT_MODE_OFF,true
            )
            if (windowIndex == currentMediaItemIndex) return count
        }

        return -1
  }
```

It would be great if Timeline would have a method like getShuffledPositionOf(index: Int): Int","['enhancement', 'needs triage']",['christosts'],,1
11122,Update translations,closed,2023-04-15 16:16:54,2023-06-19 01:05:32,2023-04-19 11:58:52,Fix the wrong translation.,[],[],,1
11121,Can't play video dash on Samsung S23 Ultra,closed,2023-04-15 14:38:24,2023-08-29 01:05:06,2023-06-29 01:05:24,"### Bug

My app can play video dash from all devicee except s23 ultra.

I have debug show error 
2023-04-15 21:34:12.563 30736-777/? E/ExoPlayerImplInternal: Playback error
      UnknownHostException (no network)

It is error of s23 ultra or exoplayer ?

",['closed-by-bot'],['christosts'],,6
11120,MP4 download HttpDataSource,closed,2023-04-14 08:24:12,2023-06-18 01:05:13,2023-04-18 10:55:20,"### Bug

I've been trying to download MP4 file via `OkHttpDataSource` but it downloads only the chunks that have been played by the player. The download process correctly with other DataSource such as `DefaultHttpDataSource` and `CronetDataSource`

I have a repository which shows the issue: https://github.com/yoobi/exoplayer-kotlin/tree/issue/okhttp_download_mp4/downloadvideo

When using `OkHttpDataSource` to download HLS video there is no issue, but when it comes to MP4 you need to play the video to progress in the downloads.",['bug: in dependency'],['icbaker'],,12
11119,Do I need AdsManager?,closed,2023-04-13 22:55:00,2023-07-16 01:05:14,2023-05-16 01:05:30,"Currently I am using Ima extension and using ImaAdsLodar instead of AdsLoader instance. Therefore I can not set onAdsLoadedListener because ImaAdsLoder does not have. Thus I can not initialize adsManager object. My question is, Do I need to create adsManager object or it belongs to imaAdsLoader and I do not need to create again and reach it?
Thanks for help,
","['question', 'closed-by-bot']",['icbaker'],,5
11118,Is there a way to play flv live stream with wrong header information?,closed,2023-04-13 15:47:02,2023-06-15 01:05:37,2023-04-15 10:44:22," I need to play the flv stream, but the audio and video flag of the FLV stream header is wrong. The flag is set yes for audio and video,but actually there is only video, and I can't modify the stream. I saw [this answer](https://github.com/google/ExoPlayer/issues/6719#issuecomment-562042710), Exoplayer decodes flv using the FlvExtractor.java -> readFlvHeader() method to determine whether there are audio or video tracks, can FLV decoding be applied to my situation without modifying the source code?

When I use Exoplayer to play the stream, the screen is always black and no error log is printed out.


![2023-04-13 190027](https://user-images.githubusercontent.com/11442821/231809809-ff94f337-0762-43ec-8ad9-bd425834d96f.png)


[demo.flv.zip](https://github.com/google/ExoPlayer/files/11223813/demo.flv.zip)
",['question'],['icbaker'],,1
11117,Show combined seekbar for all media items in playlist?,closed,2023-04-13 11:41:47,2023-06-24 01:05:05,2023-04-24 17:03:38,"I am playing 4 media items back to back and using the default player

`


    private fun media1(): MediaItem {
        return MediaItem.Builder()
            .setUri(""content1"")
            .setMimeType(MimeTypes.APPLICATION_MP4)
            .build()
     }
    
    private fun media2(): MediaItem {
        return MediaItem.Builder()
            .setUri(content2)
            .setMimeType(MimeTypes.APPLICATION_M3U8)
            .build()
    }

    private fun media3(): MediaItem {
        return MediaItem.Builder()
            .setUri(content3)
            .setMimeType(MimeTypes.APPLICATION_MP4)
            .build()
    }

    private fun media4(): MediaItem {
        return MediaItem.Builder()
            .setUri(content4)
            .setMimeType(MimeTypes.APPLICATION_M3U8)
            .build()
    }`

The items are played indivually back to back but I see seek bar for each item rather than a combined one.

`    player = ExoPlayer.Builder(this).build()
        player.addMediaItem(media1())
        player.addMediaItem(media2())
        player.addMediaItem(media3())
        player.addMediaItem(media4())`
Let's say each media item is of 2 minutes so a total of 8 minutes of content playback.
The seekbar shows 2 minutes for whenever media changes rather than of 8 minutes?
Is there anything or I need implement a custom one?",['question'],['icbaker'],,2
11116,InsufficientCapacityException: Buffer too small (4177920 < 4845595),closed,2023-04-13 09:30:43,2023-06-23 01:05:25,2023-04-23 10:32:06,"When I try to play a 4K video with the following format on the rk3566 platform, I get a ""buffer too small"" error log which sometimes prevents playback. However, after seeing an ""ACodec onOutputFormatChanged"" log, the video can play normally. How can I solve this issue?

<img width=""471"" alt=""image"" src=""https://user-images.githubusercontent.com/16680840/231716065-2a288784-4c1e-41cc-8c9c-4d93d6cfcddd.png"">

2023-03-16 04:32:40.134 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 5601850)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:40.265 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 5164653)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:40.431 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 5296570)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:40.450 30475-30494 com.okra.video          com.okra.video                       I  Background concurrent copying GC freed 40304(2535KB) AllocSpace objects, 16(1152KB) LOS objects, 43% free, 31MB/55MB, paused 139us total 139.309ms
2023-03-16 04:32:40.586 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 5203666)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:40.840 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 5223140)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:40.983 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 5310493)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:41.135 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 5138638)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:41.282 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 4845595)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:41.454 30475-31261 MediaCodecVideoRenderer com.okra.video                       E  Video codec error
                                                                                                      com.google.android.exoplayer2.decoder.DecoderInputBuffer$InsufficientCapacityException: Buffer too small (4177920 < 4464248)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.createReplacementByteBuffer(DecoderInputBuffer.java:241)
                                                                                                          at com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(DecoderInputBuffer.java:192)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readSampleData(SampleDataQueue.java:292)
                                                                                                          at com.google.android.exoplayer2.source.SampleDataQueue.readToBuffer(SampleDataQueue.java:130)
                                                                                                          at com.google.android.exoplayer2.source.SampleQueue.read(SampleQueue.java:435)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod.readData(ProgressiveMediaPeriod.java:487)
                                                                                                          at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl.readData(ProgressiveMediaPeriod.java:945)
                                                                                                          at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1227)
                                                                                                          at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:776)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:1007)
                                                                                                          at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:502)
                                                                                                          at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                          at android.os.Looper.loop(Looper.java:223)
                                                                                                          at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-16 04:32:41.474 30475-30494 com.okra.video          com.okra.video                       I  Background concurrent copying GC freed 84(32KB) AllocSpace objects, 0(0B) LOS objects, 20% free, 94MB/118MB, paused 152us total 103.317ms
2023-03-16 04:32:41.730 30475-31293 ACodec                  com.okra.video                       W  [OMX.rk.video_decoder.avc] BAD CODEC: Output format changed unexpectedly from (diff) AMessage(what = 0x00000000) = {
                                                                                                          int32_t color-standard = 6
                                                                                                          int32_t android._dataspace = 281411584
                                                                                                        } to (diff) AMessage(what = 0x00000000) = {
                                                                                                          int32_t color-standard = 1
                                                                                                          int32_t android._dataspace = 260
                                                                                                        }
2023-03-16 04:32:41.743 30475-30475 EventLogger             com.okra.video                       D  videoSize [eventTime=2.60, mediaPos=0.00, window=0, period=0, 3840, 2160]
2023-03-16 04:32:41.750 30475-30475 EventLogger             com.okra.video                       D  renderedFirstFrame [eventTime=2.61, mediaPos=0.00, window=0, period=0, Surface(name=null)/@0x686ef32]
2023-03-16 04:32:41.782 30475-31261 AudioTrack              com.okra.video                       D  getTimestamp_l(21): device stall time corrected using current time 6823977190221
2023-03-16 04:32:41.804 30475-31261 AudioTrack              com.okra.video                       W  getTimestamp_l(21): retrograde timestamp time corrected, 6823862271793 < 6823987274597
2023-03-16 04:32:41.811 30475-30475 EventLogger             com.okra.video                       D  state [eventTime=2.66, mediaPos=0.02, window=0, period=0, READY]
2023-03-16 04:32:41.816 30475-30475 EventLogger             com.okra.video                       D  isPlaying [eventTime=2.67, mediaPos=0.02, window=0, period=0, true]
2023-03-16 04:32:42.407 30475-30475 FragmentNavigator       com.okra.video                       I  Ignoring popBackStack() call: FragmentManager has already saved its state
2023-03-16 04:32:42.407 30475-30475 chatty                  com.okra.video                       I  uid=1000(system) com.okra.video identical 2 lines
2023-03-16 04:32:42.407 30475-30475 FragmentNavigator       com.okra.video                       I  Ignoring popBackStack() call: FragmentManager has already saved its state
2023-03-16 04:32:42.439 30475-30475 TAG34                   com.okra.video                       I  mediaFragment onDestroy
2023-03-16 04:32:42.473 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=3.33, mediaPos=0.62, window=0, period=0, false]
2023-03-16 04:32:42.496 30475-30494 com.okra.video          com.okra.video                       I  Background concurrent copying GC freed 551(102KB) AllocSpace objects, 0(0B) LOS objects, 13% free, 153MB/177MB, paused 412us total 110.207ms
2023-03-16 04:32:42.609 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=3.47, mediaPos=0.75, window=0, period=0, true]
2023-03-16 04:32:42.633 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=3.49, mediaPos=0.77, window=0, period=0, false]
2023-03-16 04:32:42.818 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=3.68, mediaPos=0.95, window=0, period=0, true]
2023-03-16 04:32:42.840 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=3.70, mediaPos=0.97, window=0, period=0, false]
2023-03-16 04:32:42.892 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=3.75, mediaPos=1.02, window=0, period=0, true]
2023-03-16 04:32:42.984 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=3.84, mediaPos=1.11, window=0, period=0, false]
2023-03-16 04:32:43.258 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.12, mediaPos=1.39, window=0, period=0, true]
2023-03-16 04:32:43.283 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.14, mediaPos=1.41, window=0, period=0, false]
2023-03-16 04:32:43.524 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.38, mediaPos=1.65, window=0, period=0, true]
2023-03-16 04:32:43.546 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.41, mediaPos=1.67, window=0, period=0, false]
2023-03-16 04:32:43.720 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.58, mediaPos=1.85, window=0, period=0, true]
2023-03-16 04:32:43.741 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.60, mediaPos=1.87, window=0, period=0, false]
2023-03-16 04:32:43.858 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.72, mediaPos=1.99, window=0, period=0, true]
2023-03-16 04:32:43.942 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.80, mediaPos=2.07, window=0, period=0, false]
2023-03-16 04:32:44.028 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.89, mediaPos=2.15, window=0, period=0, true]
2023-03-16 04:32:44.039 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=4.90, mediaPos=2.17, window=0, period=0, false]
2023-03-16 04:32:44.487 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=5.35, mediaPos=2.62, window=0, period=0, true]
2023-03-16 04:32:44.509 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=5.37, mediaPos=2.64, window=0, period=0, false]
2023-03-16 04:32:44.725 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=5.58, mediaPos=2.85, window=0, period=0, true]
2023-03-16 04:32:44.745 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=5.60, mediaPos=2.87, window=0, period=0, false]
2023-03-16 04:32:44.823 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=5.68, mediaPos=2.95, window=0, period=0, true]
2023-03-16 04:32:44.887 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=5.75, mediaPos=3.01, window=0, period=0, false]
2023-03-16 04:32:45.253 30475-30475 EventLogger             com.okra.video                       D  loading [eventTime=6.11, mediaPos=3.38, window=0, period=0, true]","['need more info', 'bug: device specific']",['christosts'],,6
11115,How to switch FfmpegAudioRenderer and MediaCodecAudioRenderer by play hls(m3u8) ?,closed,2023-04-13 06:34:49,2023-06-13 01:05:40,2023-04-13 08:34:34,"
I used exoPlayer (with ffmpeg extension open) to play a link to my m3u8 like this . I found that ExoPlayer always uses FfmpegAudioDecoder and cannot switch to MediaCodecAudioRenderer?

#EXTM3U
#EXT-X-VERSION:7
#EXT-X-STREAM-INF:BANDWIDTH=128000,CODECS=""mp4a.40.34""
000_00000.m3u8

#EXT-X-STREAM-INF:BANDWIDTH=320000,CODECS=""mp4a.40.34""
001_00000.m3u8

#EXT-X-STREAM-INF:BANDWIDTH=999000,CODECS=""mp4a.40.34""
002_00000.m3u8

#EXT-X-STREAM-INF:BANDWIDTH=1000000,CODECS=""flac""
003_00000.m3u8

",['duplicate'],['icbaker'],,1
11114,problem,closed,2023-04-13 02:52:32,2023-07-03 01:05:27,2023-05-03 08:58:49,"
https://www14.mp4upload.com:282/d/qwxzunpcz3b4quuotkqa4pkijfr7mkwfu7b5wj3padrcjqywm4eaglra/video.mp4
This link is not working for me.
Although I added his own reference.",['question'],['icbaker'],,4
11113,Help needed with playing *.mov file,closed,2023-04-11 20:38:42,2023-06-12 01:05:36,2023-04-12 07:12:55,"_Hi there, I've read all the information in your issue tracker and readme files. I tried different solutions but I can't play `*.mov` files like the attached one._ 

Please, help to find out if there is a way to play it via ExoPlayer maybe using some custom decoders or custom setup.
I was able to play mov files downloaded from the internet but not attached one.

[Video examples (google drive).](https://drive.google.com/drive/folders/1HGfhe0z6nR9MoO1AXWAX9G_nYvcfTA3f?usp=sharing) 

I'm using your demo project (latest `dev-v2 branch`) to attempt playing the video. I have a feeling that problem is in color profile yuv422p10le (there is one video in examples with converted color profile to yuv420 and it works). Maybe you will see what is wrong with the video (color profile, bitrate etc...) and why video track is not available in ExoPlayer. You have such a nice player but I can't use it without .mov files support. Thanks

[log_only_audio.txt](https://github.com/androidx/media/files/11186054/log_only_audio.txt)
[log_not_supported.txt](https://github.com/androidx/media/files/11186056/log_not_supported.txt)
[Libgav1VideoRenderer.txt](https://github.com/androidx/media/files/11186169/Libgav1VideoRenderer.txt)

[bugreport-zeus_eea-TKQ1.220807.001-2023-04-10-15-13-08.zip](https://github.com/androidx/media/files/11190698/bugreport-zeus_eea-TKQ1.220807.001-2023-04-10-15-13-08.zip)

Thanks in advance! _Sorry for creating issue here_ ¯\_(ツ)_/¯
",['duplicate'],['icbaker'],,1
11112,DASH download huge amount of request,open,2023-04-11 10:08:49,2023-04-24 11:25:37,,"When downloading DASH file I'm getting a tons of network request, requesting only one segment at a time, is this a normal behaviour ? Is it possible to load larger segment instead of one every 200 ms ?
I'm using `HttpDataSource.Factory`

Here is the network inspector:
<img width=""1250"" alt=""Screenshot 2023-04-11 at 12 08 29"" src=""https://user-images.githubusercontent.com/17434735/231128908-5f3906c0-121c-481b-8053-63b14a674e49.png"">
",['question'],['marcbaechinger'],,6
11111,How can I parse dash format data if it comes in json format and not in xml?,closed,2023-04-10 08:18:53,2023-06-24 01:05:05,2023-04-24 17:03:43,"```[
  {
    ""fragUrlTemplate"": ""frag-high-%%id%%.dash"",
    ""jidxUrl"": ""stream-high.jidx"",
    ""codecs"": ""video/mp4; codecs\u003d\""avc1.4D4020,mp4a.40.2\"""",
    ""headerUrl"": ""stream-high.hdr"",
    ""name"": ""high"",
    ""video"": {
      ""width"": 1280,
      ""height"": 720
    },
    ""bitrate"": 3315791
  },
  {
    ""fragUrlTemplate"": ""frag-low-%%id%%.dash"",
    ""jidxUrl"": ""stream-low.jidx"",
    ""codecs"": ""video/mp4; codecs\u003d\""avc1.4D401F,mp4a.40.2\"""",
    ""headerUrl"": ""stream-low.hdr"",
    ""name"": ""low"",
    ""video"": {
      ""width"": 640,
      ""height"": 360
    },
    ""bitrate"": 865212
  },
  {
    ""fragUrlTemplate"": ""frag-medium-%%id%%.dash"",
    ""jidxUrl"": ""stream-medium.jidx"",
    ""codecs"": ""video/mp4; codecs\u003d\""avc1.4D401F,mp4a.40.2\"""",
    ""headerUrl"": ""stream-medium.hdr"",
    ""name"": ""medium"",
    ""video"": {
      ""width"": 852,
      ""height"": 480
    },
    ""bitrate"": 1525113
  },
  {
    ""fragUrlTemplate"": ""frag-lowest-%%id%%.dash"",
    ""jidxUrl"": ""stream-lowest.jidx"",
    ""codecs"": ""video/mp4; codecs\u003d\""avc1.4D401E,mp4a.40.2\"""",
    ""headerUrl"": ""stream-lowest.hdr"",
    ""name"": ""lowest"",
    ""video"": {
      ""width"": 428,
      ""height"": 240
    },
    ""bitrate"": 405563
  },
  {
    ""fragUrlTemplate"": ""frag-fullhd-%%id%%.dash"",
    ""jidxUrl"": ""stream-fullhd.jidx"",
    ""codecs"": ""video/mp4; codecs\u003d\""avc1.64002A,mp4a.40.2\"""",
    ""headerUrl"": ""stream-fullhd.hdr"",
    ""name"": ""fullhd"",
    ""video"": {
      ""width"": 1920,
      ""height"": 1080
    },
    ""bitrate"": 15112203
  }
]",['question'],['icbaker'],,2
11110,Error inflating Player view ,closed,2023-04-10 07:28:06,2023-06-11 01:05:10,2023-04-11 17:01:57,"### Bug
Exo Player version 2.18.5

I m facing bug in PlayerControlView line # 422 

![image](https://user-images.githubusercontent.com/56867915/230848630-2742ade1-e73f-47cf-9cd8-f29afb14acef.png)

while inflating R.layout.exo_player_control_view line # 64

![image](https://user-images.githubusercontent.com/56867915/230848869-bae8073f-98ed-4f10-a706-d01ccbd22e97.png)

after style code review. I found some mistake in ExoStyledControls.Button.Bottom.VR (@drawable/exo_styled_controls_vr)

![image](https://user-images.githubusercontent.com/56867915/230849110-ba37923f-d144-42d1-bc9c-37666b90e132.png)

these drawables are in drawable-v4 folder

![image](https://user-images.githubusercontent.com/56867915/230849500-303bb936-bbfb-4cb0-a4b8-a256f0b4b549.png) 

**move these icon to simple drawable folder will solve this issue.**



InflateException: Binary XML file line #21: Error inflating class androidx.media3.ui.PlayerView

Caused by android.view.InflateException: Binary XML file line #64: Error inflating class ImageButton
       at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:763)
       at android.view.LayoutInflater.rInflate(LayoutInflater.java:806)
       at android.view.LayoutInflater.rInflate(LayoutInflater.java:809)
       at android.view.LayoutInflater.rInflate(LayoutInflater.java:809)
       at android.view.LayoutInflater.inflate(LayoutInflater.java:479)
       at android.view.LayoutInflater.inflate(LayoutInflater.java:414)
       at android.view.LayoutInflater.inflate(LayoutInflater.java:365)
       at androidx.media3.ui.PlayerControlView.<init>(PlayerControlView.java:422)
       at androidx.media3.ui.PlayerView.<init>(PlayerView.java:455)
       at androidx.media3.ui.PlayerView.<init>(PlayerView.java:276)
       at java.lang.reflect.Constructor.newInstance(Constructor.java)
       at java.lang.reflect.Constructor.newInstance(Constructor.java:288)
       at android.view.LayoutInflater.createView(LayoutInflater.java:607)
       at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:743)
       at android.view.LayoutInflater.rInflate(LayoutInflater.java:806)
       at android.view.LayoutInflater.inflate(LayoutInflater.java:504)
       at android.view.LayoutInflater.inflate(LayoutInflater.java:414)
       
       
![image](https://user-images.githubusercontent.com/56867915/230849638-dc1a14ad-0ea4-4993-9562-fb081ecbc8e0.png)
       
![image](https://user-images.githubusercontent.com/56867915/230848367-7e73742a-f8f1-478a-8821-726b9b589c0b.png)
",['duplicate'],['icbaker'],,1
11107,"Exoplayer Downloading Media, DefaultHTTPDataSource is crashing the app",closed,2023-04-09 05:18:44,2023-06-09 01:05:46,2023-04-09 18:25:24,"**Exoplayer 2.16.0**

I'm using DownloadService from Exoplayer to download HLS videos. https://exoplayer.dev/downloading-media.html

The links I'm supplying are pre-authorized links for downloading HLS videos. Sometimes I'm seeing an app crash on 401. Stack below:

```
Exception com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 401
  at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open (SourceFile:47)
  at com.google.android.exoplayer2.upstream.DefaultDataSource.open (SourceFile:21)
  at com.google.android.exoplayer2.upstream.StatsDataSource.open (SourceFile:3)
  at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened (SourceFile:2)
  at com.google.android.exoplayer2.upstream.DataSourceInputStream.open
  at com.google.android.exoplayer2.upstream.ParsingLoadable.load (SourceFile:9)
  at com.google.android.exoplayer2.upstream.Loader$LoadTask.run (SourceFile:6)
  at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1167)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:641)
  at java.lang.Thread.run (Thread.java:764)
```

I tried to reproduce this by giving expired links. The exoplayer downloader is handling it gracefully. I'm confused now where to look ? What could be the possible reason ?

Here's the implemenatation for DownloadManager, where I'm giving Executor and DataSource:

```kotlin
private fun getManager(  context: Context,     databaseProvider: ExoDatabaseProvider,     simpleCache: SimpleCache,     downloadListener: OPDownloadListener,     threadPoolSize: Int ): DownloadManager 
{    
           val manager = DownloadManager(  context,  DefaultDownloadIndex(databaseProvider), DefaultDownloaderFactory(   
                              CacheDataSource.Factory()  .setCache(simpleCache)                 
                                                              .setCacheKeyFactory(OPDownloadCacheKeyFactory())                 
                                                            .setUpstreamDataSourceFactory(getHttpDataSourceFactory(context)),             
                                                               Executors.newFixedThreadPool(threadPoolSize) ))

manager.addListener(downloadListener)
manager.maxParallelDownloads = MAX_PARALLEL_DOWNLOADS 
return manager
```

I was not expecting the crash, and if it is, it should happen every time.
","['question', 'needs triage']",[],,2
11106,Dash file parse exception,closed,2023-04-07 14:28:18,2023-06-10 01:05:16,2023-04-10 08:19:51,,"['question', 'needs triage']",[],,0
11105,Fix skipShortTermRefPicSets in ts/H265Reader,closed,2023-04-07 10:35:14,2023-06-11 01:05:11,2023-04-11 16:55:19,"This PR try to resolve issue androidx/media#303

The attached [media file](https://github.com/androidx/media/files/11178000/h265_playback_failed.zip) can be played by ffplay, but cause ExoPlayer throw exception during parse the SPS header from `skipShortTermRefPicSets`. 

`skipShortTermRefPicSets` is a simplified version which only used for parse SPS. The full version see H.265/HEVC 7.3.7. and [FFmpeg code](https://github.com/FFmpeg/FFmpeg/blob/master/libavcodec/hevc_ps.c#L144) and [HM code](https://vcgit.hhi.fraunhofer.de/jvet/HM/-/blob/master/source/Lib/TLibDecoder/TDecCAVLC.cpp#L106) . 

There are two bugs (or over-simplified) in the function `skipShortTermRefPicSets`, which cause this issue:

1.  Should read `use_delta_flag[j]` when `used_by_curr_pic_flag[j]` is 0. 
2.  `NumDeltaPocs` in each RefPicSet(RPS) maybe different, `previousNumDeltaPocs`  needs to be updated for predicted RPS too.

Although each RPS always predict from previous one, but the number of deltaPocs of current RPS depends on the values of `use_delta_flag[j]` and `used_by_curr_pic_flag[j]`. Currently `previousNumDeltaPocs`  only updated for non-predicted RPS.

",[],[],,2
11104,Does ExoPlayer support RTMPS protocol ?,closed,2023-04-07 08:44:24,2023-07-09 01:05:18,2023-05-09 01:05:25,"Hi everyone,

I want to ask if, like RTMP support, ExoPlayer also supports RTMPS protocol ?

Thanks in advance.
","['question', 'closed-by-bot']",['icbaker'],,3
11103,My CustomMediaCodecSelector does not blacklist H265,closed,2023-04-05 11:26:26,2023-06-06 01:05:33,2023-04-05 11:29:05,"I am trying to use a rtsp stream. the Stream has H264 and H265 Encoding. I need to force use the H264 over H265, because my sprop-vps parameters are not set in H265. My selector should not select the H265 Format. But the code is not being executed properly. This is my Selector:
 ```
class H264MediaCodecSelector : MediaCodecSelector {
    override fun getDecoderInfos(
        mimeType: String,
        requiresSecureDecoder: Boolean,
        requiresTunnelingDecoder: Boolean
    ): MutableList<MediaCodecInfo> {
        Log.d(""H264MediaCodecSelector"", ""getDecoderInfos called"")

        val codecInfoList = MediaCodecUtil.getDecoderInfos(mimeType, requiresSecureDecoder, requiresTunnelingDecoder)
        val filteredCodecInfo = mutableListOf<MediaCodecInfo>()
        for (codecInfo in codecInfoList) {
            if (!blacklistedCodec(codecInfo.name.lowercase(Locale.US))){
                filteredCodecInfo.add(codecInfo)
            }
        }

        return filteredCodecInfo
    }


    private fun blacklistedCodec(codecName : String) : Boolean{
        if (codecName.contains(MimeTypes.VIDEO_H265)){
            return true
        }
        return false
    }

}
```
 
 I am calling the selector here:
 
 `val player =exoPlayer.Builder(context).setRenderersFactory(DefaultRenderersFactory(context).setMediaCodecSelector(H264MediaCodecSelector())).build()`",['duplicate'],['icbaker'],,1
11102,"Exoplayer playing but nothing on surfaceView, only last frame when it ends sometimes",closed,2023-04-05 11:15:43,2023-07-09 01:05:19,2023-05-09 01:05:29,"Hi,

 i am using 2.18.5 exoplayer and it runs on all our devices ok except on one...  
I get the callback that video is playing but surface is empty all the time. The only thing i sometimes see is the end frame of the video when closing the fragment. In which direction should i look? Any ideas.

thank you for the help in advance!
","['question', 'closed-by-bot']",['christosts'],,3
11101,how to make exoplayer2 use H264 codec instead of H265 in Kotlin Android?,closed,2023-04-05 09:06:26,2023-06-06 01:05:33,2023-04-05 11:29:12,"I am trying o create a rtsp stream with the exoplayer2 (release 2.18.5). And i am trying to force the player to use H264. It does not work with the MimeType, because the player overwrites it somehow and uses H265 instead. I think i have to request the codec format before or i have to edit the response body in order to get the codec H264.

resonse.body of the RTSP Stream:

```
...
m=video 0 RTP/AVP 35
a=rtpmap:35 H264/90000
a=rtpmap:102 H265/90000
...
```
this is the code for the exoplayer setup:
```
val url = cameraInfo.cameraURLScheme
val player = ExoPlayer.Builder(context).build()

        // Build the media items.
        val mediaItem = MediaItem.Builder().setMimeType(MimeTypes.VIDEO_H264)
            .setUri(url)
            .build()
    
        val mediaSource = RtspMediaSource.Factory().createMediaSource(mediaItem)
    
        // Add the media items to be played.
        player.addMediaSource(mediaSource)
        // Prepare the player.
        player.prepare()
        // Start the playback.
        player.play()
```
Sidenote: I cannot use the H265 because it does not have the sprop-vps parameter

I have already tried to set the Mimetype and i debugged it and the mediaEncoder was still H265. i get the followig exception

`Caused by: java.io.IOException: java.lang.IllegalArgumentException: missing sprop-vps parameter`

because it uses H265 Format.",['duplicate'],['icbaker'],,1
11100,Crash when add library ExoPlayer 2.17.1,closed,2023-04-05 07:13:45,2023-06-06 01:05:34,2023-04-06 02:35:38,"### Bug

I recently create feature for video using ExoPlayer 2.17.0 , but in my older feature it suddenly crash using this library implementation 'com.devbrackets.android:exomedia:4.3.0' . Do you have any suggestion about this?, cuz im kinda struggling with it and don't know how to fix it, maybe this is a stupid question but if you can please help me.","['bug', 'needs triage']",[],,0
11099,"There is no sound when playing a .webm file, suspected to be a sampling rate issue",closed,2023-04-05 03:29:53,2023-07-09 01:05:19,2023-05-09 01:05:35,"There is no sound when playing a .webm file, suspected to be a sampling rate issue,
The ffmpeg parsing sampling rate is 48KHZ, while the exolayer displays 24KHZ

```
  Metadata:
    COMPATIBLE_BRANDS: 3gp43gp53g2a
    MAJOR_BRAND     : 3gp4
    MINOR_VERSION   : 512
    ENCODER         : Lavf58.29.100
  Duration: 00:03:32.57, start: -0.003000, bitrate: 2044 kb/s
  Stream #0:0(eng): Video: vp9 (Profile 0), yuv420p(tv), 1280x720, SAR 1:1 DAR 16:9, 32 fps, 32 tbr, 1k tbn, 1k tbc (default)
    Metadata:
      HANDLER_NAME    : vide
      ENCODER         : Lavc58.54.100 libvpx-vp9
      DURATION        : 00:03:32.569000000
  Stream #0:1(eng): Audio: opus, 48000 Hz, stereo, fltp (default)
    Metadata:
      HANDLER_NAME    : soun
      ENCODER         : Lavc58.54.100 libopus
      DURATION        : 00:03:32.562000000
```

```
 D/ExoPlayer: tracks [eventTime=0.09, mediaPos=0.00, window=0, period=0
 D/ExoPlayer:   group [
 D/ExoPlayer:     [X] Track:0, id=1, mimeType=video/x-vnd.on2.vp9, res=1280x720, language=en, selectionFlags=[default], supported=YES
 D/ExoPlayer:   ]
 D/ExoPlayer:   group [
 D/ExoPlayer:     [X] Track:0, id=2, mimeType=audio/opus, channels=2, sample_rate=24000, language=en, selectionFlags=[default], supported=YES
 D/ExoPlayer:   ]
 D/ExoPlayer: ]
```","['question', 'closed-by-bot']",['icbaker'],,4
11098,There is no sound when playing a .webm file,closed,2023-04-05 03:13:08,2023-06-06 01:05:34,2023-04-05 03:33:48,"### Bug

There is no sound when playing a .webm file, suspected to be a sampling rate issue, 
The ffmpeg parsing sampling rate is 48KHZ, while the exolayer displays 24KHZ


```Input #0, matroska,webm, from './qq.webm':
  Metadata:
    COMPATIBLE_BRANDS: 3gp43gp53g2a
    MAJOR_BRAND     : 3gp4
    MINOR_VERSION   : 512
    ENCODER         : Lavf58.29.100
  Duration: 00:03:32.57, start: -0.003000, bitrate: 2044 kb/s
  Stream #0:0(eng): Video: vp9 (Profile 0), yuv420p(tv), 1280x720, SAR 1:1 DAR 16:9, 32 fps, 32 tbr, 1k tbn, 1k tbc (default)
    Metadata:
      HANDLER_NAME    : vide
      ENCODER         : Lavc58.54.100 libvpx-vp9
      DURATION        : 00:03:32.569000000
  Stream #0:1(eng): Audio: opus, 48000 Hz, stereo, fltp (default)
    Metadata:
      HANDLER_NAME    : soun
      ENCODER         : Lavc58.54.100 libopus
      DURATION        : 00:03:32.562000000
```
```
 D/ExoPlayer: tracks [eventTime=0.09, mediaPos=0.00, window=0, period=0
 D/ExoPlayer:   group [
 D/ExoPlayer:     [X] Track:0, id=1, mimeType=video/x-vnd.on2.vp9, res=1280x720, language=en, selectionFlags=[default], supported=YES
 D/ExoPlayer:   ]
 D/ExoPlayer:   group [
 D/ExoPlayer:     [X] Track:0, id=2, mimeType=audio/opus, channels=2, sample_rate=24000, language=en, selectionFlags=[default], supported=YES
 D/ExoPlayer:   ]
 D/ExoPlayer: ]
```","['bug', 'needs triage']",[],,0
11097,How to get pcm data during video playing?,closed,2023-04-04 06:07:20,2023-06-04 01:05:04,2023-04-04 09:10:36,How to get pcm data during video playing? The exoplayer version used is 2.18.5.,['question'],['tonihei'],,2
11096,Firestick 4k max (files with hdr10+ and dolby vision profile 8.1),open,2023-04-04 04:01:40,2023-08-03 06:41:17,,"### Bug

 issue with hdr10+.

I have a tcl c825 and firestick 4k max

on the firestick players cannot play this media:

General
Unique ID : 287260790794359083915345060219622240757 (0xD81C6A775E611494CE0759D557FFB1F5)
Complete name : G:\Downloads\Filmes\Cocaine Bear\Cocaine Bear - Get in line..mkv
Format : Matroska
Format version : Version 4
File size : 16.7 GiB
Duration : 1 h 35 min
Overall bit rate : 25.0 Mb/s
Frame rate : 23.976 FPS
Encoded date : 2023-03-14 13:49:23 UTC
Writing application : mkvmerge v73.0.0 ('25 or 6 to 4') 64-bit
Writing library : libebml v1.4.4 + libmatroska v1.7.1

Video
ID : 1
Format : HEVC
Format/Info : High Efficiency Video Coding
Format profile : Main 10@L5@High
HDR format : Dolby Vision, Version 1.0, dvhe.08.06, BL+RPU, HDR10 compatible / SMPTE ST 2094 App 4, Version 1, HDR10+ Profile B compatible
Codec ID : V_MPEGH/ISO/HEVC
Duration : 1 h 35 min
Bit rate : 24.3 Mb/s
Width : 3 836 pixels
Height : 1 602 pixels
Display aspect ratio : 2.40:1
Frame rate mode : Constant
Frame rate : 23.976 FPS
Color space : YUV
Chroma subsampling : 4:2:0 (Type 2)
Bit depth : 10 bits
Bits/(Pixel*Frame) : 0.165
Stream size : 16.2 GiB (97%)
Language : English (US)
Default : Yes
Forced : Yes
Color range : Limited
Color primaries : BT.2020
Transfer characteristics : PQ
Matrix coefficients : BT.2020 non-constant
Mastering display color primaries : Display P3
Mastering display luminance : min: 0.0050 cd/m2, max: 4000 cd/m2
Maximum Content Light Level : 461 cd/m2
Maximum Frame-Average Light Level : 305 cd/m2

Audio
ID : 2
Format : E-AC-3 JOC
Format/Info : Enhanced AC-3 with Joint Object Coding
Commercial name : Dolby Digital Plus with Dolby Atmos
Codec ID : A_EAC3
Duration : 1 h 35 min
Bit rate mode : Constant
Bit rate : 768 kb/s
Channel(s) : 6 channels
Channel layout : L R C LFE Ls Rs
Sampling rate : 48.0 kHz
Frame rate : 31.250 FPS (1536 SPF)
Compression mode : Lossy
Stream size : 525 MiB (3%)
Language : English (US)
Service kind : Complete Main
Default : Yes
Forced : Yes
Complexity index : 16
Number of dynamic objects : 15
Bed channel count : 1 channel
Bed channel configuration : LFE

This happend on all mkv files that have dolby vision 8.1 /hdr10+

Kodi solution to disable hdr10+ fix the issue, without this i have full black screen or duplicate image ([see here](https://preview.redd.it/vt2p4ee0c2oa1.jpeg?width=4032&format=pjpg&auto=webp&v=enabled&s=606052d50a1bf4922cf1951cc532a63c737beeca))

Also TV it's self can play without any issue, just have issue when using firestick","['bug: device specific', 'needs triage']",['tonihei'],,17
11095,subtitle support format list,closed,2023-04-03 14:05:24,2023-06-03 01:05:04,2023-04-03 15:04:47,"Hi, What type of subtitle is supported, is there some list? thanks",['question'],['icbaker'],,1
11094,Effect module: support setting effects to concat media items,open,2023-04-03 09:45:11,2023-04-04 06:15:12,,"1. Is there a way to adding different effects for each media item when playback concat media items? 
2. Is there a way to adding effects for single media item with clip time(start time ~ end time)?",['enhancement'],['claincly'],,2
11093,Exoplayer:com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException,closed,2023-04-03 04:52:23,2023-07-03 01:05:28,2023-05-03 01:05:36,"### Bug

Hi , few devices of OS version 8 in android Tv devices are facing the issue 
com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: Decoder init failed: OMX.broadcom.video_decoder.secure, Format(6, null, null, video/avc, avc1.64001e, 967648, null, [854, 480, 25.0], [-1, -1])","['bug: device specific', 'closed-by-bot']",['tonihei'],,4
11092,Detect if ExoPlayer instance is used by any PlayerView,closed,2023-04-02 12:36:06,2023-07-20 01:05:05,2023-07-20 01:05:03,"I am currently developing a library that utilizes Exo Player. The library's service can receive a merging source that includes both audio and video files. To optimize data loading, I intend to implement a feature that checks whether the ExoPlayer instance is connected to any PlayerView. If it is, I will set the track selection to use video streams, otherwise only audio.

My question is: is this feature feasible with the current version of Exo Player?","['question', 'closed-by-bot']",['tonihei'],,5
11091,Pre-Cache videos for exoplaye2 latest version in java,open,2023-03-31 12:48:34,2023-04-07 05:31:50,,"Hello sir,
Actually I searched a lot for precache of videos in recyclerview in java so that user does not need to wait.I found CacheWriter we can use but did not get proper documentation in java.

I used cachedatasource factory to cache video but first time user need to wait to play video but next time it plays from cache but i want first time also play from cache.

how I can acheive this?
","['question', 'needs triage']",['marcbaechinger'],,1
11090,Wrong timestamp from `getCurrentPosition()` when using HLS,open,2023-03-30 15:10:00,2023-05-17 06:04:44,,"### Bug

I am using ExoPlayer to show an HLS video. If I pause the video, and request the timestamp with getCurrentPosition, it gives me a value that around ~100ms before what is actually being shown in the video player (around 2 frames of the video I am using). I am comparing this to the frames extracted using ffmpeg, and comparing the timestamp reported for each frame by ffmpeg.

For the sake of comparison, I am running the exact same expereriment using AVPlayer on iOS. There, the timestamp that it gives matches the frame I extract with ffmpeg.

An alternative way to execute the experiment and get to the same result. Pick any frame using ffmpeg, look the timestamp of the frame. Open the video with ExoPlayer and call seekTo to that position. The same thing will happen, the frame that will be shown is around ~2 frames (I say around 2 since I've seen 1,2 and 3 frames of difference during my tests) after the one seen with ffmpeg.","['bug', 'needs triage']",['gabrielgarciagava'],,4
11089,Support H.265,open,2023-03-29 09:09:51,2023-05-17 21:43:31,,"Does ExoPlayer support H.265 (a.k.a HEVC) ?

Currently, if I play a RTSP/RTMP H.264 stream, ExoPlayer has no problem.
But when I play a RTSP/RTMP H.265 stream, ExoPlayer reports an error:

**missing sprop-vps parameter**

```
E/ExoPlayerImplInternal: Playback error
      com.google.android.exoplayer2.ExoPlaybackException: Source error
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:644)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:620)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loopOnce(Looper.java:201)
        at android.os.Looper.loop(Looper.java:288)
        at android.os.HandlerThread.run(HandlerThread.java:67)
     Caused by: java.io.IOException: java.lang.IllegalArgumentException: missing sprop-vps parameter
        at com.google.android.exoplayer2.source.rtsp.RtspMediaPeriod$InternalListener.onSessionTimelineRequestFailed(RtspMediaPeriod.java:664)
        at com.google.android.exoplayer2.source.rtsp.RtspClient.dispatchRtspError(RtspClient.java:317)
        at com.google.android.exoplayer2.source.rtsp.RtspClient.access$700(RtspClient.java:75)
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspResponse(RtspClient.java:656)
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspMessage(RtspClient.java:507)
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.lambda$onRtspMessageReceived$0$com-google-android-exoplayer2-source-rtsp-RtspClient$MessageListener(RtspClient.java:500)
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener$$ExternalSyntheticLambda0.run(Unknown Source:4)
        at android.os.Handler.handleCallback(Handler.java:942)
        at android.os.Handler.dispatchMessage(Handler.java:99)
        at android.os.Looper.loopOnce(Looper.java:201) 
        at android.os.Looper.loop(Looper.java:288) 
        at android.os.HandlerThread.run(HandlerThread.java:67) 
     Caused by: com.google.android.exoplayer2.source.rtsp.RtspMediaSource$RtspPlaybackException: java.lang.IllegalArgumentException: missing sprop-vps parameter
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspResponse(RtspClient.java:656) 
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspMessage(RtspClient.java:507) 
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.lambda$onRtspMessageReceived$0$com-google-android-exoplayer2-source-rtsp-RtspClient$MessageListener(RtspClient.java:500) 
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener$$ExternalSyntheticLambda0.run(Unknown Source:4) 
        at android.os.Handler.handleCallback(Handler.java:942) 
        at android.os.Handler.dispatchMessage(Handler.java:99) 
        at android.os.Looper.loopOnce(Looper.java:201) 
        at android.os.Looper.loop(Looper.java:288) 
        at android.os.HandlerThread.run(HandlerThread.java:67) 
     Caused by: java.lang.IllegalArgumentException: missing sprop-vps parameter
        at com.google.android.exoplayer2.util.Assertions.checkArgument(Assertions.java:54)
        at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.processH265FmtpAttribute(RtspMediaTrack.java:421)
        at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.generatePayloadFormat(RtspMediaTrack.java:266)
        at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.<init>(RtspMediaTrack.java:162)
        at com.google.android.exoplayer2.source.rtsp.RtspClient.buildTrackList(RtspClient.java:347)
        at com.google.android.exoplayer2.source.rtsp.RtspClient.access$1700(RtspClient.java:75)
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.onDescribeResponseReceived(RtspClient.java:690)
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspResponse(RtspClient.java:598)
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspMessage(RtspClient.java:507) 
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.lambda$onRtspMessageReceived$0$com-google-android-exoplayer2-source-rtsp-RtspClient$MessageListener(RtspClient.java:500) 
        at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener$$ExternalSyntheticLambda0.run(Unknown Source:4) 
        at android.os.Handler.handleCallback(Handler.java:942) 
        at android.os.Handler.dispatchMessage(Handler.java:99) 
        at android.os.Looper.loopOnce(Looper.java:201) 
        at android.os.Looper.loop(Looper.java:288) 
        at android.os.HandlerThread.run(HandlerThread.java:67) 
E/EventLogger: playerFailed [eventTime=0.07, mediaPos=0.00, window=0, period=0, errorCode=ERROR_CODE_IO_UNSPECIFIED
```",['enhancement'],['microkatz'],,6
11088,[IMA] DRM license request occurs during ad preroll,closed,2023-03-29 08:27:11,2023-06-01 01:05:22,2023-03-29 11:16:25,"I notice ExoPlayer starts downloading content and performs the corresponding DRM request when the IMA preroll ad is playing.

While the content loading is not a problem for me, I'm more concerned about the DRM license request happening before the content is actually (about to be) played because our streaming server uses the DRM request to count play events for our statistics.

It seems `AdsMediaSource.prepareSourceInternal()` is responsible for this behaviour as mentioned in [this issue](https://github.com/google/ExoPlayer/issues/10719). Do you know if there is any way to delay the DRM request to occur only when the content is about to be played?",['question'],['icbaker'],,2
11087,How to notify volumeChange events to OM SDK,closed,2023-03-28 17:18:15,2023-07-02 01:05:11,2023-05-02 01:05:39,"Hi,

I use Exoplayer IMA Extension v2.18.1 to custom a ad player with a  Mute/Unmute button

I used charles to check IAB ad event and found Exoplayer IMA could not  notify volumeChange events to OM SDK .

How to notify volumeChange events to OM SDK?
","['question', 'closed-by-bot']",['tonihei'],,3
11086,"Exoplayer throws IllegalStateException, moves to idle state and doesn't recover when a http request takes long time (>3 seconds) for HLS lives stream",closed,2023-03-27 13:21:41,2023-07-17 01:05:38,2023-07-17 01:05:35,"Hi,

We are using Exoplayer version 2.9.6 for running an HLS-based live stream. We are seeing an issue where if an HTTP call for fetching a particular video segment takes more time (>2-3 seconds), the player is moving to IDLE state and never recovering automatically. Thus, causing the video to freeze for our end users. Looking for any inputs which can help resolve this issue.

Steps to reproduce:
* Intercept the HTTPS call for a particular video segment (which will be generated in the future) and variant. We are using Charles proxy (breakpoint settings feature) for the same.
* Return 200 responses after a manual delay of a few seconds

Log summary: 
1. index.m3u8 and segments till 8096.ts are fetched successfully for variant 
2. Since the request for 8100 is intercepted, the playback state changes to buffering
3. Player throws an Illegal state exception
4. Playback state changes to idle and doesn't recover at all

Detailed log:
```
2023-03-27 17:03:54.137 26679-31169 Response Received :     com.livestream.android                 D  Id : 125
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 219
                                                                                                    Time Taken : 120
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/index.m3u8
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@6c66572 
2023-03-27 17:03:55.085 26679-31168 Response Received :     com.livestream.android                 D  Id : 126
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 263576
                                                                                                    Time Taken : 205
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/8096.ts
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@29166be 
2023-03-27 17:03:55.656 26679-27291 CCodecBuffers           com.livestream.android                 D  [c2.android.aac.decoder#474:1D-Input.Impl[N]] codec released a buffer owned by client (index 0)
2023-03-27 17:03:56.059 26679-31170 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af7a0aba8 : 4(8388608 size) total buffers - 4(8388608 size) used buffers - 0/4 (recycle/alloc) - 5/804 (fetch/transfer)
2023-03-27 17:03:56.295 26679-31173 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af79ebf18 : 5(40960 size) total buffers - 5(40960 size) used buffers - 1/7 (recycle/alloc) - 6/1166 (fetch/transfer)
2023-03-27 17:03:57.196 26679-31168 Response Received :     com.livestream.android                 D  Id : 127
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 215260
                                                                                                    Time Taken : 289
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/8097.ts
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@32c3704 
2023-03-27 17:03:57.306 26679-31169 Response Received :     com.livestream.android                 D  Id : 128
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 219
                                                                                                    Time Taken : 164
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/index.m3u8
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@3aed4ed 
2023-03-27 17:03:59.341 26679-31168 Response Received :     com.livestream.android                 D  Id : 129
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 314524
                                                                                                    Time Taken : 437
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/8098.ts
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@430d2e9 
2023-03-27 17:04:00.437 26679-31169 Response Received :     com.livestream.android                 D  Id : 130
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 221
                                                                                                    Time Taken : 122
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/index.m3u8
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@5bab4a5 
2023-03-27 17:04:01.278 26679-31168 Response Received :     com.livestream.android                 D  Id : 131
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 257748
                                                                                                    Time Taken : 365
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/8099.ts
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@946f621 
2023-03-27 17:04:01.460 26679-31170 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af7a0aba8 : 4(8388608 size) total buffers - 4(8388608 size) used buffers - 0/4 (recycle/alloc) - 5/966 (fetch/transfer)
2023-03-27 17:04:01.733 26679-31173 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af79ebf18 : 5(40960 size) total buffers - 5(40960 size) used buffers - 1/7 (recycle/alloc) - 6/1400 (fetch/transfer)
2023-03-27 17:04:03.572 26679-31169 Response Received :     com.livestream.android                 D  Id : 133
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 224
                                                                                                    Time Taken : 129
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/index.m3u8
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@9274859 
2023-03-27 17:04:03.704 26679-26679 FkVideoAna...csListener com.livestream.android                 D  [main]  onPlayerStateChanged currentPlaybackPositionMs: 7816 totalBufferedDurationMs: 242 playWhenReady:true playbackState:2
2023-03-27 17:04:06.727 26679-31169 Response Received :     com.livestream.android                 D  Id : 134
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 224
                                                                                                    Time Taken : 143
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/index.m3u8
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@653a7b8 
2023-03-27 17:04:09.129 26679-27288 CCodec                  com.livestream.android                 W  previous call to queue exceeded timeout
2023-03-27 17:04:09.131 26679-31170 MediaCodec              com.livestream.android                 E  Codec reported err 0x80000000, actionCode 0, while in state 6
2023-03-27 17:04:09.133 26679-31170 SurfaceUtils            com.livestream.android                 D  disconnecting from surface 0xb400007b979a19e0, reason disconnectFromSurface
2023-03-27 17:04:09.134 26679-31170 CCodecBufferChannel     com.livestream.android                 D  [c2.android.avc.decoder#351] MediaCodec discarded an unknown buffer
2023-03-27 17:04:09.135 26679-31170 chatty                  com.livestream.android                 I  uid=10197(com.livestream.android) MediaCodec_loop identical 2 lines
2023-03-27 17:04:09.136 26679-31170 CCodecBufferChannel     com.livestream.android                 D  [c2.android.avc.decoder#351] MediaCodec discarded an unknown buffer
2023-03-27 17:04:09.142 26679-27269 ExoPlayerImplInternal   com.livestream.android                 E  Internal runtime error.
                                                                                                    java.lang.IllegalStateException
                                                                                                    	at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
                                                                                                    	at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:3452)
                                                                                                    	at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:1287)
                                                                                                    	at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:663)
                                                                                                    	at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:529)
                                                                                                    	at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:300)
                                                                                                    	at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                    	at android.os.Looper.loop(Looper.java:223)
                                                                                                    	at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-27 17:04:09.145 26679-27269 ExoPlayerImplInternal   com.livestream.android                 E  Stop failed.
                                                                                                    java.lang.IllegalStateException
                                                                                                    	at android.media.MediaCodec.native_stop(Native Method)
                                                                                                    	at android.media.MediaCodec.stop(MediaCodec.java:2251)
                                                                                                    	at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.releaseCodec(MediaCodecRenderer.java:608)
                                                                                                    	at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.releaseCodec(MediaCodecVideoRenderer.java:508)
                                                                                                    	at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onDisabled(MediaCodecRenderer.java:562)
                                                                                                    	at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onDisabled(MediaCodecVideoRenderer.java:377)
                                                                                                    	at com.google.android.exoplayer2.BaseRenderer.disable(BaseRenderer.java:153)
                                                                                                    	at com.google.android.exoplayer2.ExoPlayerImplInternal.disableRenderer(ExoPlayerImplInternal.java:976)
                                                                                                    	at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:764)
                                                                                                    	at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:735)
                                                                                                    	at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:355)
                                                                                                    	at android.os.Handler.dispatchMessage(Handler.java:102)
                                                                                                    	at android.os.Looper.loop(Looper.java:223)
                                                                                                    	at android.os.HandlerThread.run(HandlerThread.java:67)
2023-03-27 17:04:09.145 26679-31171 hw-BpHwBinder           com.livestream.android                 I  onLastStrongRef automatically unlinking death recipients
2023-03-27 17:04:09.152 26679-31171 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af7a0aba8 : 0(0 size) total buffers - 0(0 size) used buffers - 0/4 (recycle/alloc) - 5/1021 (fetch/transfer)
2023-03-27 17:04:09.157   339-379   BufferQueueProducer     pid-339                              E  [SurfaceView - com.livestream.android/com.livestream.android.activity.HomeFragmentHolderActivity#0](id:153000001be,api:0,p:-1,c:339) detachBuffer: BufferQueue has no connected producer
2023-03-27 17:04:09.165 26679-31173 CCodecBufferChannel     com.livestream.android                 D  [c2.android.aac.decoder#474] MediaCodec discarded an unknown buffer
2023-03-27 17:04:09.167 26679-31173 chatty                  com.livestream.android                 I  uid=10197(com.livestream.android) MediaCodec_loop identical 6 lines
2023-03-27 17:04:09.167 26679-31173 CCodecBufferChannel     com.livestream.android                 D  [c2.android.aac.decoder#474] MediaCodec discarded an unknown buffer
2023-03-27 17:04:09.175 26679-26679 CrashLoggerUtils        com.livestream.android                 D  [main] [logCustomEvents] video_Health_event_dropped
2023-03-27 17:04:09.176 26679-31173 hw-BpHwBinder           com.livestream.android                 I  onLastStrongRef automatically unlinking death recipients
2023-03-27 17:04:09.177 26679-31173 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af79ebf18 : 0(0 size) total buffers - 0(0 size) used buffers - 1/7 (recycle/alloc) - 6/1484 (fetch/transfer)
2023-03-27 17:04:09.178 26679-26679 FkVideoAna...csListener com.livestream.android                 D  [main]  onPlayerStateChanged currentPlaybackPositionMs: 5825 totalBufferedDurationMs: 0 playWhenReady:true playbackState:1
2023-03-27 17:04:10.452 26679-31168 Response Received :     com.livestream.android                 D  Id : 132
                                                                                                    Method : GET
                                                                                                    Host : livestreampoc.akamaized.net
                                                                                                    StatusCode : 200
                                                                                                    Request Size : -1
                                                                                                    Response Size : 222968
                                                                                                    Time Taken : 7542
                                                                                                    Url : https://livestreampoc.akamaized.net/hls/live/2097897/8tsgca/1280/8100.ts
                                                                                                    Request Body : null
                                                                                                    Response Body : okhttp3.internal.http.RealResponseBody@42cdcf7 
2023-03-27 17:04:14.161 26679-27290 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af7a0aba8 : 0(0 size) total buffers - 0(0 size) used buffers - 0/4 (recycle/alloc) - 5/1021 (fetch/transfer)
2023-03-27 17:04:14.162 26679-27290 BufferPoolAccessor2.0   com.livestream.android                 D  evictor expired: 1, evicted: 1
2023-03-27 17:04:15.164 26679-27290 BufferPoolAccessor2.0   com.livestream.android                 D  bufferpool2 0xb400007af79ebf18 : 0(0 size) total buffers - 0(0 size) used buffers - 1/7 (recycle/alloc) - 6/1484 (fetch/transfer)
2023-03-27 17:04:15.164 26679-27290 BufferPoolAccessor2.0   com.livestream.android                 D  evictor expired: 1, evicted: 1
```

","['question', 'closed-by-bot']",['tianyif'],,4
11085,throwExceptionIfDeadLineIsReached,closed,2023-03-27 06:24:24,2023-06-01 01:05:23,2023-03-27 08:09:29,"Hello, we have recently updated our application to Exoplayer 2.18.4 and since then, our apps have started crashing with the following exception:

```
java.lang.VerifyError: kotlin/UInt$$ExternalSyntheticBackport0
        at com.google.android.exoplayer2.audio.DefaultAudioSink$PendingExceptionHolder.throwExceptionIfDeadlineIsReached(DefaultAudioSink.java:2259)
        at com.google.android.exoplayer2.audio.DefaultAudioSink.handleBuffer(DefaultAudioSink.java:933)
        at com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(MediaCodecAudioRenderer.java:706)        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:1905)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:792)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)
        at android.os.Handler.dispatchMessage(Handler.java:95)
        at android.os.Looper.loop(Looper.java:137)
        at android.os.HandlerThread.run(HandlerThread.java:60)
```

We ran into this error while doing monkey tests, and I can't seem to replicate this issue by hand, so I am not entirely sure when exactly it occurs. I don't understand why this happens. Do you have any ideas on why this exception occurs and offer any potential fixes? The frequency of these crashes makes them hard to ignore. Thanks in advance.",['duplicate'],['icbaker'],,1
11084,How to flip the video left-right without using TextureView.,closed,2023-03-27 04:51:07,2023-06-01 01:05:23,2023-03-29 07:24:53,"> If you can't use TextureView, it's also possible to set a rotation when configuring the MediaCodec, which you could do by subclassing MediaCodecVideoRenderer and passing your subclass via a custom RenderersFactory when building the player.

[#8099](https://github.com/google/ExoPlayer/issues/8099#issuecomment-715262463) the above exchange, is it possible to inherit from MediaCodecVideoRenderer and implement left-right reversal of video?

If possible, it would be helpful if you could be more specific in your implementation.
",['question'],['christosts'],,3
11083,MediaPlayerService: MediaPlayerService::getOMX,closed,2023-03-25 11:46:04,2023-06-25 01:05:09,2023-04-25 01:05:51,"**Please do not file new issues in this repository.**

All new questions should be filed in the
[Media3 issue tracker](https://github.com/androidx/media/issues/new?template=question.md).

We will continue to update and reply to existing issues in this repository and
will keep existing feature requests active.
03-25 15:01:09.421 26823 32433 I MediaPlayerService: MediaPlayerService::getOMX
03-25 15:01:09.422 28360  1484 I OMXClient: MuxOMX ctor
03-25 15:01:09.422 28360  1484 I ACodec  : onAllocateComponent:6752 mSoftCodecPref:0 componentName:OMX.google.mp3.decoder
03-25 15:01:09.422 28360  1484 I ACodec  : onAllocateComponent:6783 mSoftCodecPref:0 componentName:OMX.google.mp3.decoder
03-25 15:01:09.423   339  1004 I OMXMaster: makeComponentInstance(OMX.google.mp3.decoder) in mediacodec process
03-25 15:01:09.425   339 21241 E OMXNodeInstance: setConfig(153005e:google.mp3.decoder, ConfigPriority(0x6f800002)) ERROR: Undefined(0x80001001)
03-25 15:01:09.425 28360  1484 I ACodec  : codec does not support config priority (err -2147483648)
03-25 15:01:09.445 28360 28395 D mali_winsys: EGLint new_window_surface(egl_winsys_display *, void *, EGLSurface, EGLConfig, egl_winsys_surface **, egl_color_buffer_format *, EGLBoolean) returns 0x3000
03-25 15:01:09.453 28360 28381 D AudioTrack: Client defaulted notificationFrames to 3740 for frameCount 11220","['question', 'needs triage', 'closed-by-bot']",['loveleopard'],,4
11082,DAI tag set custom headers only on live,open,2023-03-24 22:02:11,2023-04-09 18:22:27,,"Hello,

In my aplication i'm using DAI tag and i want to intercept headers and add some custom headers only when playing live ; When ads rolling no custom headers.

I use OkHttpClient and on addNetworkInterceptor or addInterceptor i can set those custom headers but i can not figure out when i'm live and when ads are playing. But if neccesary i can change it

I don't receive any stream segment specific on 
`chain.request().url.pathSegments` 

On both cases ( live / ads ) i receive on every intercept same manifest url

Only on transfer listeners i can se with specific urls when exoplayer user our live mp4 segments or google when playing ads

I need to set custom headers only for live ( mp4 ) request before.
How can i make this verification before each request?

Thanks","['question', 'needs triage']",['marcbaechinger'],,1
11081,Got error after updated to exoplayer 2.18.5,closed,2023-03-23 14:43:38,2023-06-06 01:05:35,2023-04-05 10:27:35,"this code is from exoplayer 2.11.4:

```java
private void setSelectedSubtitle(com.google.android.exoplayer2.source.MediaSource mediaSource, String url) {
        MergingMediaSource mergedSource;
        if (url != null) {
            Uri subtitleUri = Uri.parse(url);

            Format subtitleFormat = Format.createTextSampleFormat(
                    null, // An identifier for the track. May be null.
                    MimeTypes.TEXT_VTT, // The mime type. Must be set correctly.
                    Format.NO_VALUE, // Selection flags for the track.
                    ""en""); // The subtitle language. May be null.

            DefaultDataSourceFactory dataSourceFactory = new DefaultDataSourceFactory(PlayerActivity.this,
                    Util.getUserAgent(PlayerActivity.this, CLASS_NAME), new DefaultBandwidthMeter());


            com.google.android.exoplayer2.source.MediaSource subtitleSource = new SingleSampleMediaSource
                    .Factory(dataSourceFactory)
                    .createMediaSource(subtitleUri, subtitleFormat, C.TIME_UNSET);


            mergedSource = new MergingMediaSource(mediaSource, subtitleSource);
            player.prepare(mergedSource, false, false);
            player.setPlayWhenReady(true);
            //resumePlayer();

        } else {
            Toast.makeText(PlayerActivity.this, ""there is no subtitle"", Toast.LENGTH_SHORT).show();
        }
    }
```

when i update exoplayer to 2.18.5 and i modified code into this:

```java
private void setSelectedSubtitle(MediaSource mediaSource, String url) {
        MergingMediaSource mergedSource;
        if (url != null) {
            Uri subtitleUri = Uri.parse(url);

            Format subtitleFormat = new Format.Builder()
                    .setId(/* id= */ null)
                    .setLabel(/* label= */ null)
                    .setLanguage(/* language= */ ""en"")
                    .setSelectionFlags(/* selectionFlags= */ 0)
                    .setSampleMimeType(MimeTypes.TEXT_VTT)
                    .build();

            DataSource.Factory dataSourceFactory = new DefaultHttpDataSource.Factory();

            MediaItem.SubtitleConfiguration subtitleConfig = new MediaItem.SubtitleConfiguration.Builder(subtitleUri)
                    .setMimeType(MimeTypes.TEXT_VTT)
                    .setLanguage(""en"")
                    .build();

            MediaItem mediaItem = new MediaItem.Builder()
                    .setUri(url)
                    .setSubtitleConfigurations(Collections.singletonList(subtitleConfig))
                    .build();

            MediaSource subtitleSource = new ProgressiveMediaSource.Factory(dataSourceFactory)
                    .createMediaSource(mediaItem);

            mergedSource = new MergingMediaSource(mediaSource, subtitleSource);
            DefaultRenderersFactory renderersFactory = new DefaultRenderersFactory(this)
                    .setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_ON);
            //player = new SimpleExoPlayer.Builder(this).build();
            //player = new SimpleExoPlayer.Builder(this).build();
           // player = (SimpleExoPlayer) new ExoPlayer.Builder(this).build();
            ExoPlayer player = new ExoPlayer.Builder(this).build();
            player.setMediaSource(mergedSource); //this line 475
            player.prepare();
            player.setPlayWhenReady(true);
        } else {
            Toast.makeText(this, ""There is no subtitle"", Toast.LENGTH_SHORT).show();
        }
    }
```

subtitle not working. when i select subtitle in player, that subtitle not showing and i got this error on logcat:

```
Access denied finding property ""vendor.display-size""
eglMakeCurrent: 0xdfe5d8c0: ver 3 0 (tinfo 0xeb040e80)
Window handle Window{7c6745d u0 com.mana.magic/com.mana.magic.view.PlayerActivity} has no registered input channel
Playback error
  com.google.android.exoplayer2.ExoPlaybackException: Source error
	  at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:644)
	  at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:614)
	  at android.os.Handler.dispatchMessage(Handler.java:103)
	  at android.os.Looper.loop(Looper.java:214)
	  at android.os.HandlerThread.run(HandlerThread.java:67)
  Caused by: com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor) could read the stream.
	  at com.google.android.exoplayer2.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:92)
	  at com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1017)
	  at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:412)
	  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	  at java.lang.Thread.run(Thread.java:919)
```

Anyone know what's wrong with this?
",['question'],['icbaker'],,5
11080,How to add friendly obstructions to Exoplayer IMA Extension,closed,2023-03-22 07:51:02,2023-06-01 01:05:24,2023-03-23 13:35:13,"Hi,

I use Exoplayer IMA Extension v2.18.1 to custom a ad player.

I used charles to check IAB ad event and found some obstructions view.

How to add friendly obstructions view to Exoplayer IMA Extension ?",['question'],['tonihei'],,1
11079,Shows black screen when app is resumed after video is done playing,closed,2023-03-21 10:42:43,2023-06-26 01:05:14,2023-04-26 12:14:03,"### ExoPlayer Version

2.18.4

### Devices that reproduce the issue

* Xiaomi Pad5
* Android 13


### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

1.Play video until complete.
2. switch app back and front for several times.
3. show blackscreen sometimes.
To see the effect more clearly, I changed a new video url that last frame is not black。

### Expected result

screen resumes with the last frame.

### Actual result

sometimes black screen.

### Media

[ee](https://user-images.githubusercontent.com/18483100/226581611-440a50bf-5d9d-4b95-bb1b-c1d25484064c.mp4)

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['microkatz'],,5
11078,Why Exoplayer stops after buffering without any Error throwing onPlaybackError()?,closed,2023-03-20 07:52:02,2023-07-04 01:05:30,2023-05-04 01:05:35,"This case is very simple when there is low network connectivity and some buddy is listening to long episodes in Podcasts when after some time exoplayer buffers and stops without throwing any error.

Can you please help me out, on how to track this by using any callback because I am not getting any error onPlaybackError()?

Exoplayer Version: 2.16.0","['question', 'closed-by-bot']",['icbaker'],,10
11077,ExoPlayer Can't Run Redirect Script,open,2023-03-19 20:35:37,2023-04-09 18:21:37,,"Hello, I can't run Script ExoPlayer, when I add the link, it gives 403 Error, but when I try to download, there is no problem. Which codes will I change the player?

URL
https://disk.swixtream.info/https://disk.yandex.com.tr/i/LA0tT6ctyx1JAA","['question', 'needs triage']",['microkatz'],,0
11076,Add DTS-LBR and DTS:X support in MPEG2-TS extractor,closed,2023-03-18 03:20:17,2023-06-01 01:05:24,2023-03-22 09:41:20,"Added below mentioned features.
- Support for extracting DTS LBR(DTS Express) and DTS UHD Profile 2(DTS:X) descriptor ID from PSI PMT
- The DTSReader class is updated for extracting a DTS LBR. 
- Newly added DTSUhdReader class for extracting DTS UHD frame.
- The DTSUtil class is updated to parse the DTS LBR or DTS UHD frame and report the format information.

Feature request: https://github.com/google/ExoPlayer/issues/11075",[],['rohitjoins'],,5
11075,Add DTS-LBR and DTS:X support in MPEG2-TS extractor,open,2023-03-18 03:12:24,2023-04-27 16:15:32,,"### Use case description

- Add support for extracting DTS LBR(DTS Express) and DTS UHD Profile 2(DTS:X) descriptor ID
  from PSI PMT
- Update the DTSReader class for extracting a DTS LBR or DTS UHD frame from the raw bitstream.
- Update the DTSUtil class to parse the DTS LBR or DTS UHD frame and report the format information.

Specification Docs:

1. ETSI EN 300 468 V1.17.1: Digital Video Broadcasting (DVB); Specification for Service Information (SI) in DVB systems EUROPEAN STANDARD
   Details of DVB descriptors for DTS LBR, and DTS UHD streams are available in this document.
2. ETSI TS 102 114 V1.6.1 (2019-08): DTS Coherent Acoustics; Core and Extensions with Additional Profiles
   Details of synchronization and format extraction of DTS Core(CA), and DTS LBR(DTS-HD with only Extension Sub-stream) are available in this document.
3. ETSI TS 103 491 V1.2.1 (2019-05): DTS-UHD Audio Format; Delivery of Channels, Objects and Ambisonic Sound Fields
    Details of synchronization and format extraction of DTS UHD stream are available in this document.

### Proposed Solution
Pull request for this feature update - https://github.com/androidx/media/pull/275



",['enhancement'],['rohitjoins'],,0
