number,title,state,created_at,updated_at,closed_at,body,labels,assignees,milestone,comments
10972,Is it possible to cache a frame and starts decode from it instead of decoding from the nearest I frame?,closed,2023-02-09 07:51:26,2023-04-22 01:05:18,2023-02-20 16:16:40,"I want to improve the seek time of so that when users scrub the seek bar they'll have smooth preview of the video just like IOS media player or the Samsung gallery app.

I'm using `seekTo` to implement this feature but it's pretty slow if the frame is far from the I frame. My video is usually a short video of 2 - 4 seconds so it has only 1 or 2 I frames at most. 1 at the start and 1 close to the end of the video.

So I was wondering if I can cache some decoded frame and feed it into the decoder and start decode from there. If this can be done it would greatly improve the seek time.",['question'],['christosts'],,6
10971,Presumed incompatibility Authentication Hikvision & Foscam RTSP URL's,closed,2023-02-08 13:35:21,2023-04-17 01:05:41,2023-02-15 10:35:57,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Samsung Android 10 Note8

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps


    Create new solution
    Prove to yourself that the specific given model of the Foscam and/or Hikvision camera is up and running with any other validation method (for example vlc or a previous xamarin forms project)
    Set the mediaelement source as the proven working rtsp url with authentication (use specific hikvision and foscam models)
    Run your Android app (debug or release)
    Check the log for the above fatal app crash


### Expected result

Handles auth headers well and doesnt crash the app

### Actual result

Crashes the app at current time with following error:

""
[AndroidRuntime] FATAL EXCEPTION: ExoPlayer:Playback
[AndroidRuntime] Process: com.solid.HomeCon, PID: 18345
[AndroidRuntime] java.lang.IllegalArgumentException
[AndroidRuntime] at com.google.android.exoplayer2.util.Assertions.checkArgument(Assertions.java:39)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.generatePayloadFormat(RtspMediaTrack.java:260)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspMediaTrack.(RtspMediaTrack.java:161)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspClient.buildTrackList(RtspClient.java:347)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspClient.access$1700(RtspClient.java:75)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.onDescribeResponseReceived(RtspClient.java:690)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspResponse(RtspClient.java:598)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.handleRtspMessage(RtspClient.java:507)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener.lambda$onRtspMessageReceived$0$com-google-android-exoplayer2-source-rtsp-RtspClient$MessageListener(RtspClient.java:500)
[AndroidRuntime] at com.google.android.exoplayer2.source.rtsp.RtspClient$MessageListener$$ExternalSyntheticLambda0.run(Unknown Source:4)
[AndroidRuntime] at android.os.Handler.handleCallback(Handler.java:883)
[AndroidRuntime] at android.os.Handler.dispatchMessage(Handler.java:100)
[AndroidRuntime] at android.os.Looper.loop(Looper.java:237)
[AndroidRuntime] at android.os.HandlerThread.run(HandlerThread.java:67)
[m.solid.HomeCo] 0xebadde09 skipped times: 0
[libc] exiting due to SIG_DFL handler for signal 11""

Hikvision IP camera model HWI-D140H x 3 works great without any problems (rtsp://user:pswd@ip:554/ch1/sub/live)
Hikvision Doorbell camera model DS-KD8003-IME1 x1 crashes the app (maui toolkit rtsp://user:pswd@ip:554/ch1/sub/live works both in vlc win and xamarin forms)
Foscam IP camera model R4M x 1 crashes the app (maui toolkit rtsp://user:pswd@ip:88/ch1/sub/live, works both in vlc win and xamarin forms)
Foscam IP camera model R4M-B x 1 crashes the app (maui toolkit rtsp://user:pswd@ip:88/ch1/sub/live, works both in vlc win and xamarin forms)


### Media

https://1drv.ms/u/s!AqVY9RkzgdHIrRJpCfa_rIgyBW7A?e=8oxTBc (maui toolkit with Exoplayer implementation)

Exoplayer issue that has been started initially in Maui toolkit github repo https://github.com/CommunityToolkit/Maui/issues/972

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['microkatz'],,6
10970,NetworkTypeObserver doesn't update it's initial value after creation,closed,2023-02-08 09:02:13,2023-06-04 01:05:09,2023-04-04 08:32:11,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Pixel 6 running Android 13

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

No

### Reproduction steps

Can't find a real auto-quality dash-vp9 video in demo app - it always asks to choose quality before playback start.

The issue is in adaptive quality selection - due to initially low bandwidth, player choose low quality at the start of playback.

### Expected result

Video starts with good quality, accordingly to actual network bandwidth. 


### Actual result

Video starts with bad quality, because of low initial bandwidth

I investigated the issue, and it seems like `NetworkTypeObserver#Receiver#onReceive `method doesn't get called after registering broadcast receiver (even later, 'asynchronously'). 

Seems like `NetworkTypeObservers`' internal impl expects sticky behavior from BroadcastReceiver (so it would receive last network type after receiver registering) - but actually it doesn't work this way.

Moreover, https://developer.android.com/reference/android/net/ConnectivityManager#CONNECTIVITY_ACTION is deprecated and Google advices to use `NetworkCallback` or/and direct call to `ConnectivityManager#requestBandwidthUpdate()` to force-receive current network state and it's bandwidth. 

### Media

Not applicable

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug: in platform'],['tonihei'],,1
10969,Closed-captions (WebVTT) subtitles won't show up for HLS live-stream,closed,2023-02-08 08:18:08,2023-07-08 01:05:16,2023-05-08 06:57:33,"Hello!

I'm investigating a issue where a HLS live-stream closed-captions subtitle (WebVTT) track is selectable and available, but won't show any subs. It seems to be the same problem with both HLS + DAI and HLS without DAI.

Same stream with subtitles works OK for Shaka Player (Web).

**I've sent a link to a HLS (DAI) live-stream privately by email where there are CC subtitles available, but only for certain content.**


When trying to find the root cause I found something of interest where the Cues are filtered out in step 3. of this flow:

1. subtitle.getCues(positionUs), presentationTimeUs) 
[TextRenderer.java#L260](https://github.com/google/ExoPlayer/blob/3a654c1f54e19f261e717282fe42168b38d7e96c/library/core/src/main/java/com/google/android/exoplayer2/text/TextRenderer.java#L260)

2. Assertions.checkNotNull(subtitle).getCues(timeUs - subsampleOffsetUs)
[SubtitleOutputBuffer.java#L63](https://github.com/google/ExoPlayer/blob/3a654c1f54e19f261e717282fe42168b38d7e96c/library/extractor/src/main/java/com/google/android/exoplayer2/text/SubtitleOutputBuffer.java#L63)

3. if ((cueTimesUs[i * 2] <= timeUs) && (timeUs < cueTimesUs[i * 2 + 1]))
[WebvttSubtitle.java#L72](https://github.com/google/ExoPlayer/blob/3a654c1f54e19f261e717282fe42168b38d7e96c/library/extractor/src/main/java/com/google/android/exoplayer2/text/webvtt/WebvttSubtitle.java#L72)

I noticed that in step 2. of the flow, the subsampleOffsetUs might be wrong.
Example:
timeUs = 1000084419695
subsampleOffsetUs = -1638780233473066

This leading to step 3. will give values like:
if ((cueTimesUs[i * 2] <= timeUs) && (timeUs < cueTimesUs[i * 2 + 1]))
if ((57244202000  <= 1639780317892761) && (1639780317892761< 57245002000))


My questions are:
- What affects the value of subsampleOffsetUs and where is it set originally?
- Do you have any ideas what could be the issue here?

Thanks for the help.
","['question', 'bad media']",['icbaker'],,12
10968,Dev v2 dlb/oss/contribution 01,closed,2023-02-07 23:16:15,2023-08-01 01:05:08,2023-06-01 12:49:05,,[],['tianyif'],,7
10967,Is it possible set interval between MediaItems,closed,2023-02-07 15:11:56,2023-04-12 01:06:06,2023-02-10 08:09:35,"Hi
I have list of media items and i need set interval between media items like below image:
![mediaItems](https://user-images.githubusercontent.com/20900080/217283761-4672b67e-cde0-4817-a7ff-9043516cd399.png)
when stop box1 set 6 second interval and play box 2 , ...

is it possible?",['question'],['marcbaechinger'],,2
10966,Our application reported error: com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtåime error,closed,2023-02-06 10:04:53,2023-05-07 01:05:05,2023-03-07 02:06:42,"### ExoPlayer Version

2.17.1

### Devices that reproduce the issue

SHARK PRS-A0 android11
The above is the device that has the problem, but this problem is an occasional problem, not a certain one. We have not been able to reproduce this problem manually.

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Not tested

### Reproduction steps

We have not found a regularity for this problem.

### Expected result

play normal,unexpected runtåime error will not appear.

### Actual result

we found error
com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtime error
com.google.android.exoplayer2.g2.d(Unknown Source:8)
com.google.android.exoplayer2.f0.invoke(Unknown Source:2)
com.google.android.exoplayer2.util.s$c.a(Unknown Source:17)
com.google.android.exoplayer2.util.s.a(Unknown Source:16)
com.google.android.exoplayer2.util.a.run(Unknown Source:6)
com.google.android.exoplayer2.util.s.a(Unknown Source:66)
com.google.android.exoplayer2.util.s.b(Unknown Source:3)
com.google.android.exoplayer2.g2.release(Unknown Source:152)
com.google.android.exoplayer2.l3.release(Unknown Source:5)

### Media

All videos cannot be played after this issue occurs

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['needs triage', 'closed-by-bot']",['tianyif'],,3
10965,Some bmp ts can't play,closed,2023-02-06 03:55:22,2023-04-18 01:05:50,2023-02-16 19:36:37,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

* Samsung Galaxy S10+

### Devices that do not reproduce the issue

None

### Reproducible in the demo app?

Yes

### Reproduction steps

Play hls url
1. http://t.grelighting.cn/m3u8/djVxNWlDcUE5U3RDMnNXTUNqQlJ2NVFHdkptWnp0dWQ=.m3u8
2. http://t.grelighting.cn/m3u8/L3RKU1R4MGVQUkdSNjB3cFVHVjJZRDRUTkcxUWpVQzg=.m3u8

### Expected result

1. can play
2. can play

### Actual result

1. can play
2. can't play

### Media

1. http://t.grelighting.cn/m3u8/djVxNWlDcUE5U3RDMnNXTUNqQlJ2NVFHdkptWnp0dWQ=.m3u8
2. http://t.grelighting.cn/m3u8/L3RKU1R4MGVQUkdSNjB3cFVHVjJZRDRUTkcxUWpVQzg=.m3u8

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bad media'],['tianyif'],,2
10964,Playing M4A produces a lot of sequential onTimelineChanged events with the reason SOURCE_UPDATE,open,2023-02-05 02:02:59,2023-02-22 18:32:06,,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

All devices and emulators.

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

Play the attached file in the demo app.

### Expected result

Exoplayer doesn't produces so many heavy events sequentially.

### Actual result

Exoplayer produces many `onTimelineChanged` events which finally triggers heavy `PlayerNotificationManager#startOrUpdateNotification` and `MediaSessionConnector.ComponentListener#onEvents` (`TimelineQueueNavigator#publishFloatingQueueWindow`, `MediaSessionConnector#invalidateMediaSessionMetadata` and `MediaSessionConnector#invalidateMediaSessionPlaybackState`).
Because of this my app freezes for 5-15 seconds or even crashes at start of playing attached m4a.
Demo app doesn't freeze (because doesn't has a notification and media session connection), but also generates many events.

![image](https://user-images.githubusercontent.com/49683084/220690101-d8e6eb2f-2306-4e61-8ca7-9a3ec2034c2c.png)
![image](https://user-images.githubusercontent.com/49683084/220690379-16c04994-391f-4139-9ef0-3160f9bae315.png)

I did a little digging and got the following:
- Log of the EventLogger:
```
2023-02-05 02:40:22.261 29007-29007 EventLogger    D  timeline [eventTime=12.61, mediaPos=0.00, window=0, periodCount=1, windowCount=1, reason=PLAYLIST_CHANGED
2023-02-05 02:40:22.261 29007-29007 EventLogger    D    period [?]
2023-02-05 02:40:22.261 29007-29007 EventLogger    D    window [?, seekable=false, dynamic=true]
2023-02-05 02:40:22.261 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.261 29007-29007 EventLogger    D  mediaItem [eventTime=12.61, mediaPos=0.00, window=0, reason=PLAYLIST_CHANGED]
2023-02-05 02:40:22.263 29007-29007 EventLogger    D  state [eventTime=12.62, mediaPos=0.00, window=0, BUFFERING]
2023-02-05 02:40:22.268 29007-29007 EventLogger    D  playWhenReady [eventTime=12.62, mediaPos=0.00, window=0, true, USER_REQUEST]
2023-02-05 02:40:22.295 29007-29007 EventLogger    D  timeline [eventTime=12.65, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.295 29007-29007 EventLogger    D    period [?]
2023-02-05 02:40:22.295 29007-29007 EventLogger    D    window [?, seekable=false, dynamic=false]
2023-02-05 02:40:22.295 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.297 29007-29007 EventLogger    D  loading [eventTime=12.65, mediaPos=0.00, window=0, period=0, true]
2023-02-05 02:40:22.311 29007-29007 EventLogger    D  timeline [eventTime=12.66, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.311 29007-29007 EventLogger    D    period [1.00]
2023-02-05 02:40:22.311 29007-29007 EventLogger    D    window [1.00, seekable=true, dynamic=false]
2023-02-05 02:40:22.311 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.332 29007-29007 EventLogger    D  audioEnabled [eventTime=12.69, mediaPos=0.00, window=0, period=0]
2023-02-05 02:40:22.334 29007-29007 EventLogger    D  tracks [eventTime=12.69, mediaPos=0.00, window=0, period=0
2023-02-05 02:40:22.334 29007-29007 EventLogger    D    group [
2023-02-05 02:40:22.334 29007-29007 EventLogger    D      [X] Track:0, id=1, mimeType=audio/mp4a-latm, bitrate=256000, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=und, supported=YES
2023-02-05 02:40:22.334 29007-29007 EventLogger    D    ]
2023-02-05 02:40:22.334 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.334 29007-29007 EventLogger    D  downstreamFormat [eventTime=12.69, mediaPos=0.00, window=0, period=0, id=1, mimeType=audio/mp4a-latm, bitrate=256000, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=und]
2023-02-05 02:40:22.454 29007-29007 EventLogger    D  audioDecoderInitialized [eventTime=12.81, mediaPos=0.00, window=0, period=0, c2.android.aac.decoder]
2023-02-05 02:40:22.455 29007-29007 EventLogger    D  audioInputFormat [eventTime=12.81, mediaPos=0.00, window=0, period=0, id=1, mimeType=audio/mp4a-latm, bitrate=256000, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=und]
2023-02-05 02:40:22.468 29007-29007 EventLogger    D  state [eventTime=12.82, mediaPos=0.00, window=0, period=0, READY]
2023-02-05 02:40:22.468 29007-29007 EventLogger    D  isPlaying [eventTime=12.82, mediaPos=0.00, window=0, period=0, true]
2023-02-05 02:40:22.469 29007-29007 EventLogger    D  timeline [eventTime=12.82, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.469 29007-29007 EventLogger    D    period [32.00]
2023-02-05 02:40:22.469 29007-29007 EventLogger    D    window [32.00, seekable=true, dynamic=false]
2023-02-05 02:40:22.470 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.546 29007-29007 EventLogger    D  timeline [eventTime=12.90, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.546 29007-29007 EventLogger    D    period [33.00]
2023-02-05 02:40:22.546 29007-29007 EventLogger    D    window [33.00, seekable=true, dynamic=false]
2023-02-05 02:40:22.546 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.591 29007-29007 EventLogger    D  timeline [eventTime=12.94, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.591 29007-29007 EventLogger    D    period [34.01]
2023-02-05 02:40:22.591 29007-29007 EventLogger    D    window [34.01, seekable=true, dynamic=false]
2023-02-05 02:40:22.591 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.634 29007-29007 EventLogger    D  timeline [eventTime=12.99, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.634 29007-29007 EventLogger    D    period [35.01]
2023-02-05 02:40:22.634 29007-29007 EventLogger    D    window [35.01, seekable=true, dynamic=false]
2023-02-05 02:40:22.634 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.699 29007-29007 EventLogger    D  timeline [eventTime=13.05, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.699 29007-29007 EventLogger    D    period [36.01]
2023-02-05 02:40:22.699 29007-29007 EventLogger    D    window [36.01, seekable=true, dynamic=false]
2023-02-05 02:40:22.699 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.755 29007-29007 EventLogger    D  timeline [eventTime=13.11, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.755 29007-29007 EventLogger    D    period [37.01]
2023-02-05 02:40:22.756 29007-29007 EventLogger    D    window [37.01, seekable=true, dynamic=false]
2023-02-05 02:40:22.756 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.791 29007-29007 EventLogger    D  timeline [eventTime=13.15, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.791 29007-29007 EventLogger    D    period [38.02]
2023-02-05 02:40:22.791 29007-29007 EventLogger    D    window [38.02, seekable=true, dynamic=false]
2023-02-05 02:40:22.791 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.827 29007-29007 EventLogger    D  timeline [eventTime=13.18, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.827 29007-29007 EventLogger    D    period [39.02]
2023-02-05 02:40:22.827 29007-29007 EventLogger    D    window [39.02, seekable=true, dynamic=false]
2023-02-05 02:40:22.827 29007-29007 EventLogger    D  ]
2023-02-05 02:40:22.856 29007-29007 EventLogger    D  timeline [eventTime=13.21, mediaPos=0.00, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:22.857 29007-29007 EventLogger    D    period [40.00]
2023-02-05 02:40:22.857 29007-29007 EventLogger    D    window [40.00, seekable=true, dynamic=false]
2023-02-05 02:40:22.857 29007-29007 EventLogger    D  ]

...

2023-02-05 02:40:27.077 29007-29007 EventLogger    D  timeline [eventTime=17.43, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.078 29007-29007 EventLogger    D    period [181.01]
2023-02-05 02:40:27.078 29007-29007 EventLogger    D    window [181.01, seekable=true, dynamic=false]
2023-02-05 02:40:27.078 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.106 29007-29007 EventLogger    D  timeline [eventTime=17.46, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.106 29007-29007 EventLogger    D    period [182.02]
2023-02-05 02:40:27.106 29007-29007 EventLogger    D    window [182.02, seekable=true, dynamic=false]
2023-02-05 02:40:27.106 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.198 29007-29007 EventLogger    D  timeline [eventTime=17.55, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.198 29007-29007 EventLogger    D    period [183.02]
2023-02-05 02:40:27.198 29007-29007 EventLogger    D    window [183.02, seekable=true, dynamic=false]
2023-02-05 02:40:27.198 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.252 29007-29007 EventLogger    D  timeline [eventTime=17.61, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.252 29007-29007 EventLogger    D    period [184.00]
2023-02-05 02:40:27.252 29007-29007 EventLogger    D    window [184.00, seekable=true, dynamic=false]
2023-02-05 02:40:27.252 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.313 29007-29007 EventLogger    D  timeline [eventTime=17.67, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.313 29007-29007 EventLogger    D    period [185.00]
2023-02-05 02:40:27.313 29007-29007 EventLogger    D    window [185.00, seekable=true, dynamic=false]
2023-02-05 02:40:27.313 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.370 29007-29007 EventLogger    D  timeline [eventTime=17.72, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.370 29007-29007 EventLogger    D    period [186.01]
2023-02-05 02:40:27.370 29007-29007 EventLogger    D    window [186.01, seekable=true, dynamic=false]
2023-02-05 02:40:27.370 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.435 29007-29007 EventLogger    D  timeline [eventTime=17.79, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.435 29007-29007 EventLogger    D    period [187.01]
2023-02-05 02:40:27.435 29007-29007 EventLogger    D    window [187.01, seekable=true, dynamic=false]
2023-02-05 02:40:27.435 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.466 29007-29007 EventLogger    D  timeline [eventTime=17.82, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.466 29007-29007 EventLogger    D    period [188.01]
2023-02-05 02:40:27.466 29007-29007 EventLogger    D    window [188.01, seekable=true, dynamic=false]
2023-02-05 02:40:27.466 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.521 29007-29007 EventLogger    D  timeline [eventTime=17.87, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.521 29007-29007 EventLogger    D    period [189.01]
2023-02-05 02:40:27.521 29007-29007 EventLogger    D    window [189.01, seekable=true, dynamic=false]
2023-02-05 02:40:27.521 29007-29007 EventLogger    D  ]
2023-02-05 02:40:27.552 29007-29007 EventLogger    D  timeline [eventTime=17.91, mediaPos=0.09, window=0, period=0, periodCount=1, windowCount=1, reason=SOURCE_UPDATE
2023-02-05 02:40:27.552 29007-29007 EventLogger    D    period [190.02]
2023-02-05 02:40:27.552 29007-29007 EventLogger    D    window [190.02, seekable=true, dynamic=false]
2023-02-05 02:40:27.552 29007-29007 EventLogger    D  ]
```
- Previous events were generated because of `extractorOutput.seekMap(parseSidx(...))` on every `sidx` frame in `FragmentedMp4Extractor#onLeafAtomRead`.
Log:
```
ChunkIndex(length=1, sizes=[32179], offsets=[793], timeUs=[0], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[33349], offsets=[33024], timeUs=[1002666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32581], offsets=[66425], timeUs=[2005333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32744], offsets=[99058], timeUs=[3008000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[33090], offsets=[131854], timeUs=[4010666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32217], offsets=[164996], timeUs=[5013333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[33071], offsets=[197265], timeUs=[6016000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[32502], offsets=[230388], timeUs=[7018666], durationsUs=[981334])
ChunkIndex(length=1, sizes=[32012], offsets=[262942], timeUs=[8000000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[33702], offsets=[295006], timeUs=[9002666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32580], offsets=[328760], timeUs=[10005333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32256], offsets=[361392], timeUs=[11008000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[33226], offsets=[393700], timeUs=[12010666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32406], offsets=[426978], timeUs=[13013333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[33037], offsets=[459436], timeUs=[14016000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[32585], offsets=[492525], timeUs=[15018666], durationsUs=[981334])
ChunkIndex(length=1, sizes=[31998], offsets=[525162], timeUs=[16000000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[32982], offsets=[557212], timeUs=[17002666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[33203], offsets=[590246], timeUs=[18005333], durationsUs=[1002667])
...
ChunkIndex(length=1, sizes=[32476], offsets=[1562542], timeUs=[48000000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[32649], offsets=[1595070], timeUs=[49002666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32527], offsets=[1627771], timeUs=[50005333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32471], offsets=[1660350], timeUs=[51008000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[32979], offsets=[1692873], timeUs=[52010666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32806], offsets=[1725904], timeUs=[53013333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[33041], offsets=[1758762], timeUs=[54016000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[31672], offsets=[1791855], timeUs=[55018666], durationsUs=[981334])
ChunkIndex(length=1, sizes=[32266], offsets=[1823579], timeUs=[56000000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[32511], offsets=[1855897], timeUs=[57002666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32148], offsets=[1888460], timeUs=[58005333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32166], offsets=[1920660], timeUs=[59008000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[33088], offsets=[1952878], timeUs=[60010666], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[33134], offsets=[1986018], timeUs=[61013333], durationsUs=[1002667])
ChunkIndex(length=1, sizes=[32524], offsets=[2019204], timeUs=[62016000], durationsUs=[1002666])
ChunkIndex(length=1, sizes=[32108], offsets=[2051780], timeUs=[63018666], durationsUs=[981334])
ChunkIndex(length=1, sizes=[32840], offsets=[2083940], timeUs=[64000000], durationsUs=[1002666])
```
- The only difference between timelines is the value of `Timeline.window.durationUs`.

I don't know, maybe my media is corrupted or it's exoplayer bug, but how I can avoid this events spam or at least throttle it?
Media is not under my control, so the only way is to fix the client side.

### Media

[media.zip](https://github.com/google/ExoPlayer/files/10610069/media.zip)


### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['bug', 'needs triage']",['rohitjoins'],,1
10963,How can I play media with delay ?,open,2023-02-04 22:48:51,2023-02-06 18:49:31,,"I want to give delay ms to media source when creating it.
Is it possible ?
I need to define the delay when setting up the player.

```kotlin
val audioSource = mediaSource.createMediaSource(MediaItem.fromUri(audioUri))
audioPlayer.setMediaSource(audioSource) // -> Can I add delay to here ?
```

Or is there an empty media source that I can define the duration of?

For this:

```kotlin
ConcatenatingMediaSource(1SecondEmptySource(), MySource())
```

",['question'],['marcbaechinger'],,1
10962,AudioManager API usage in ExoPlayer,closed,2023-02-03 18:50:02,2023-04-11 01:05:56,2023-02-09 10:56:28,"Want to start a discussion around usage of the AudioManager API in the exoplayer.
We are seeing a number of new ANR's related to the component that is new in the exoplayer 2.16.1 - `StreamingVolumeManager`.

After an investigation we find some minor issues in the component and we have some suggestions to how it's usage could be improved.

We want to get your thoughts on that.

1. You are using internal platform API to listen to volume changes that might behave differently on different devices.
Not sure how it behaves on your's - I'm getting 5 broadcasts of the volume change on every volume button click on my `OnePlus85g`. 
As a result player makes 10 calls to the AudioManager (1 to get volume and 1 to get mute state).
You might think it is fast, but in fact those calls are IPC calls that getting result from the process responsible for the AudioSystem.

When you have more than one player instantiated (we might have up to 6) every player does 10 calls on it's player control thread.

We know that on some devices this calls might cause ANR's, so they potentially could block the player thread either.

We are going to try following changes in our fork of exoplayer:
- filter out broadcasts by the stream type in the StreamingVolumeManager
- Extract the AudioManager interface and provide default implementation as part of ExoPlayer initialization
- Use AudioManager to manipulate with audio.
- Provide a way to override the instance of the player's AudioManager though the ExoPlayer builder

In our internal implementation of builder we:
- Will make sure it accesses the AudioManager API from the single thread (always main for simplicity on first iteration). Part of problems might be coming from accessing the API from multiple different threads.
- Will update the cached values from broadcasts (use values provided in the broadcast instead of re-requesting the values.)
- We will share an instance between different players

Want to get your thoughts on that.

To me an opportunity to have your player control thread hang is scary.
I don't think you have any monitor for that in place at the moment or do you?
I don't think any metric we have will be able to detect such a hang at the moment.

","['question', 'needs triage']",['tianyif'],,3
10961,MediaCodecVideoRenderer: Video codec error,closed,2023-02-03 08:06:04,2023-04-25 01:05:49,2023-02-23 12:01:40,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

It's only a problem on certain devices（A car device.）

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Not tested

### Reproduction steps

load the url, and the video cannot play.
https://vdse.bdstatic.com//b5ecb1f9b09e3997e9a9105249b373e2?authorization=bce-auth-v1%2F40f207e648424f47b2e3dfbb1014b1a5%2F2017-05-11T09%3A02%3A31Z%2F-1%2F%2Fa81395d4876e3b5804da397f8bd6ab7b1207c7f61d50490587c3e991887a3291

### Expected result

plays successful.

### Actual result

02-03 11:41:33.889  2043  2043 W /system/bin/hw/android.hidl.allocator@1.0-service: ashmem_create_region(32768) returning hidl_memory(0xf9f24a22b330, 32768)
02-03 11:41:33.909  2280  6624 E OMXNodeInstance: emptyBuffer(0xea6736c34740:RENESAS.DECODER.H264, 0x2 [6291456@0xea67161fc000 (0..+2087) f=10 ts=290000 fc=-1]) ERROR: InvalidState(0x8000100a)
02-03 11:41:33.909  8540  8783 E ACodec  : signalError(omxError 0x80001001, internalError -2147483648)
02-03 11:41:33.909  8540  8782 E MediaCodec: Codec reported err 0x80001001, actionCode 0, while in state 6
02-03 11:41:33.909  8540  8783 E ACodec  : [OMX.RENESAS.VIDEO.DECODER.H264] ERROR(0x8000100a)
02-03 11:41:33.910  8540  8783 E ACodec  : signalError(omxError 0x8000100a, internalError -2147483648)
02-03 11:41:33.913  8540  8782 D SurfaceUtils: disconnecting from surface 0xe433da17d010, reason disconnectFromSurface
02-03 11:41:33.914  8540  8782 E MediaCodec: Codec reported err 0x8000100a, actionCode 0, while in state 0
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer: Video codec error
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:   java.lang.IllegalStateException
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2632)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at com.google.android.exoplayer2.mediacodec.t.j(Unknown Source:4)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.f0(Unknown Source:44)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.t(Unknown Source:71)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at com.google.android.exoplayer2.j1.o(Unknown Source:91)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at com.google.android.exoplayer2.j1.handleMessage(Unknown Source:208)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at android.os.Handler.dispatchMessage(Handler.java:102)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at android.os.Looper.loop(Looper.java:164)
02-03 11:41:33.915  8540  8763 E MediaCodecVideoRenderer:       at android.os.HandlerThread.run(HandlerThread.java:65)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal: Playback error
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:   com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.64001E, -1, null, [640, 360, 30.000227], [-1, -1]), format_supported=YES
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.j1.handleMessage(Unknown Source:301)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at android.os.Handler.dispatchMessage(Handler.java:102)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at android.os.Looper.loop(Looper.java:164)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at android.os.HandlerThread.run(HandlerThread.java:65)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:   Caused by: com.google.android.exoplayer2.video.MediaCodecVideoDecoderException: Decoder failed: OMX.RENESAS.VIDEO.DECODER.H264
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.video.q.a0(Unknown Source:4)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.t(Unknown Source:149)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.j1.o(Unknown Source:91)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.j1.handleMessage(Unknown Source:208)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       ... 3 more
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:   Caused by: java.lang.IllegalStateException
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2632)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.t.j(Unknown Source:4)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.f0(Unknown Source:44)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.t(Unknown Source:71)
02-03 11:41:33.918  8540  8763 E ExoPlayerImplInternal:       ... 5 more
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal: Disable failed.
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:   java.lang.IllegalStateException
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at android.media.MediaCodec.native_flush(Native Method)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at android.media.MediaCodec.flush(MediaCodec.java:2114)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.t.flush(Unknown Source:2)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.m0(Unknown Source:2)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.o0(Unknown Source:32)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.F(Unknown Source:24)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.video.q.F(Unknown Source:17)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.x0.f(Unknown Source:25)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.j1.n(Unknown Source:15)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.j1.o0(Unknown Source:33)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.j1.k1(Unknown Source:12)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at com.google.android.exoplayer2.j1.handleMessage(Unknown Source:344)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at android.os.Handler.dispatchMessage(Handler.java:102)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at android.os.Looper.loop(Looper.java:164)
02-03 11:41:33.919  8540  8763 E ExoPlayerImplInternal:       at android.os.HandlerThread.run(HandlerThread.java:65)
02-03 11:41:33.925  2280  2624 E OMXNodeInstance: sendCommand(0xea6736c34740:RENESAS.DECODER.H264, StateSet(0), Idle(2)) ERROR: InvalidState(0x8000100a)
02-03 11:41:33.954  3614  3666 D FaceID_comm: map_type_data_callback map_type: 0  map_type_size:0  result:0

### Media

https://vdse.bdstatic.com//b5ecb1f9b09e3997e9a9105249b373e2?authorization=bce-auth-v1%2F40f207e648424f47b2e3dfbb1014b1a5%2F2017-05-11T09%3A02%3A31Z%2F-1%2F%2Fa81395d4876e3b5804da397f8bd6ab7b1207c7f61d50490587c3e991887a3291

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['bug', 'needs triage']",['microkatz'],,5
10960,Stream crash when selecting textTrack in TTML format ,closed,2023-02-02 11:40:07,2023-04-04 01:05:53,2023-02-02 15:26:51,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Probably any device.

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

I'm using DASH with widevine DRM.

1.  Play stream (which contains text track in ttml format)
2.  Select ttml text track

The issue is not 100% reproducible. Sometimes it takes a few minutes until the crash occurs. 

### Expected result

The stream continues playing. The text track is successfully selected.

### Actual result

Stream crashes. 

`E/EventLogger: playerFailed [6.88]
    com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtime error
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:621)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:193)
        at android.os.HandlerThread.run(HandlerThread.java:65)
     Caused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=-1
        at com.google.android.exoplayer2.text.ttml.TtmlSubtitle.getEventTime(TtmlSubtitle.java:62)
        at com.google.android.exoplayer2.text.SubtitleOutputBuffer.getEventTime(SubtitleOutputBuffer.java:53)
        at com.google.android.exoplayer2.text.TextRenderer.getCurrentEventTimeUs(TextRenderer.java:426)
        at com.google.android.exoplayer2.text.TextRenderer.render(TextRenderer.java:259)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)
        at android.os.Handler.dispatchMessage(Handler.java:102) 
        at android.os.Looper.loop(Looper.java:193) 
        at android.os.HandlerThread.run(HandlerThread.java:65) `
                                                                                                   	
The issue is not present in the 2.18.1 version. I was checking the demo app with our content which caused the same crash with an identical stacktrace.

### Media

I will send a sample by email.

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['duplicate'],['icbaker'],,1
10959,Handle SQLiteDatabaseLockedException in CachedContentIndex,closed,2023-02-02 11:02:57,2023-05-09 14:21:19,2023-02-14 18:07:21,"SQLiteException is not caught and converted to IOException when trying to access `databaseProvider.getReadableDatabase()`. Hence exoplayer is not handling this cache related exception and crashing. Similar exception is properly handled [here](https://github.com/google/ExoPlayer/blob/dev-v2/library/datasource/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheFileMetadataIndex.java#L117).

**Stacktrace:**
```
android.database.sqlite.SQLiteDatabaseLockedException: database is locked (code 5)
	at android.database.sqlite.SQLiteConnection.nativeExecuteForLong()(SQLiteConnection.java:-2)
	at android.database.sqlite.SQLiteConnection.executeForLong()(SQLiteConnection.java:598)
	at android.database.sqlite.SQLiteSession.executeForLong()(SQLiteSession.java:652)
	at android.database.sqlite.SQLiteStatement.simpleQueryForLong()(SQLiteStatement.java:107)
	at android.database.DatabaseUtils.longForQuery()(DatabaseUtils.java:825)
	at android.database.DatabaseUtils.longForQuery()(DatabaseUtils.java:813)
	at android.database.sqlite.SQLiteDatabase.getVersion()(SQLiteDatabase.java:864)
	at android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked()(SQLiteOpenHelper.java:241)
	at android.database.sqlite.SQLiteOpenHelper.getReadableDatabase()(SQLiteOpenHelper.java:187)
	at com.google.android.exoplayer2.upstream.cache.CachedContentIndex$DatabaseStorage.exists()(CachedContentIndex.java:2)
	at com.google.android.exoplayer2.upstream.cache.CachedContentIndex.initialize()(CachedContentIndex.java:4)
	at com.google.android.exoplayer2.upstream.cache.SimpleCache.initialize()(SimpleCache.java:13)
	at com.google.android.exoplayer2.upstream.cache.SimpleCache.access$000()(SimpleCache.java:1)
	at com.google.android.exoplayer2.upstream.cache.SimpleCache$1.run()(SimpleCache.java:3)
```

This particular crash happens a lot in firetv specifically incomparison to Android tv and mobile.",[],['microkatz'],,0
10958,How can I merge video and audio with different repeat modes ?,closed,2023-02-02 00:06:05,2023-04-08 01:05:04,2023-02-06 10:52:05,"```kotlin
val audioSource = ProgressiveMediaSource.Factory(dataSource)
                    .createMediaSource(MediaItem.fromUri(audioUri))
 val videoSource = ProgressiveMediaSource.Factory(dataSource)
                    .createMediaSource(MediaItem.fromUri(videoUri))
val mergingMediaSource = MergingMediaSource(videoSource, audioSource)
```

My player's repeat mode is `REPEAT_MODE_ONE`.
I want to play video with infinite loop but audio with a single loop. 

Like `LoopingMediaSource`.

But it deprecated.

How can I do this?",['question'],['microkatz'],,2
10957,video processing,closed,2023-02-01 17:55:01,2023-04-15 01:05:08,2023-02-13 14:37:10,"Hi. I want to ask a question regarding video processing.

Is there any way for decoding two videos at some time? 

The use case is simple: Imagine you have a video and you want to add overlay video.

I couldn't find the answer to this.

Thanks.",['question'],['andrewlewis'],,1
10956,Can we fix this NoSuchMethodError if the version is different?,closed,2023-02-01 14:12:49,2023-04-04 01:05:54,2023-02-02 13:11:10,"Hi, I have one question im using JWplayer(EXoplayer version 2.18.0) and BrightCove(Exoplayer version 2.17.1). I create two frame one for JWplayer and one for BrightCove. But only one player working at a time. 
If i setup these version im getting this issue
java.lang.NoSuchMethodError: No virtual method setDrmSessionManager(Lcom/google/android/exoplayer2/drm/DrmSessionManager;)Lcom/google/android/exoplayer2/source/hls/HlsMediaSource$Factory; in class Lcom/google/android/exoplayer2/source/hls/HlsMediaSource$Factory; or its super classes (declaration of 'com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory' appears in /data/app/~~v_vIfy6_Ax302ZGA7l7dVg==/com.newscorp.newstand-TsBEGYLMoDv45z12qECXHA==/base.apk!classes32.dex)   
 

",['question'],['microkatz'],,3
10955,Why does getCurrentPosition enforce the accessor thread rule?,closed,2023-02-01 11:26:52,2023-04-09 01:05:13,2023-02-07 15:45:32,"I have a use case where I am building a library which lays an abstraction layer on top of ExoPlayer for simplicity, including things such as managing an internal thread which is the one used to control ExoPlayer, allowing calls to the library to occur on any thread as we internally switch them to run on the thread required by ExoPlayer.

Speaking of this pattern specifically, it's fine to have operations such as playing or pausing be asynchronous, but querying the current position is a bit awkward: while it'd be theoretically possible to make it also asynchronous so that current position is emitted as an event as a result of a query made on an ""unknown"" thread that is then switched to ExoPlayer's, it sort of beats the point of simplicity and, unnecessarily at that, because getCurrentPosition is read-only so to speak, so I don't see why it needs to happen on ExoPlayer's control thread.

Note that I've found [this somewhat related issue](https://github.com/google/ExoPlayer/issues/7775), but I don't want to use ExoPlayer's UI so `progressUpdateListener` doesn't work for me and I really don't want to be polling the position in order to be able to provide it synchronously.",['question'],['microkatz'],,2
10954,HLS infinite buffering on concrete link,closed,2023-01-31 16:17:08,2023-06-01 01:05:29,2023-03-20 12:51:11,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Android TV Emulator API 28
Android TV Emulator API 33
Nvidia Shield TV (Android 10)
Sony Bravia 4K (Android 11)
MAG500 (Android 10)
MAG425A (Android 9)
OnePlus 10 PRO (Android 13)
OnePlus 8T (Android 12)


### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

1. Add the attached link to the demo app and force the media type of HLS
2. Play the link

### Expected result

The video plays after buffering OR video plays without sound OR the error because of MPEG2 audio tracks

### Actual result

Infinite buffering in the custom app and error after long buffering in the demo app.

### Media

https://edge.simplware.pro/eurosport/index.m3u8?token=mud6TFfRrDO9cMORqGJJ5060fgHxS0UCU8ubKTeU6nLDseVyDe

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['question'],['tianyif'],,8
10953,"There is noise when playing compressed format wav file. (Audio: pcm_f32le ([3][0][0][0] / 0x0003), 48000 Hz, 5.1, flt)",open,2023-01-31 04:54:35,2023-04-04 01:10:06,,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Seems to be device independent.
It can reproduce on 
AndroidStudio AVD Android13 x86_64.

### Devices that do not reproduce the issue

No.

### Reproducible in the demo app?

Yes

### Reproduction steps

``` kotlin
val ep = ExoPlayer.Builder(this).build()
ep.setMediaItem(MediaItem.fromUri(File(wavFile).toUri()))
ep.prepare()
ep.play()
```

### Expected result

The media plays successfully without harsh noise.

### Actual result

No error happen. Just play some harsh noise.

### Media

[1_オープニング.zip](https://github.com/google/ExoPlayer/files/10542910/1_.zip)


### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['microkatz'],,0
10952,Notification forward Backward button not visible in Android 13,closed,2023-01-30 18:26:48,2023-04-01 01:05:27,2023-01-30 18:54:09,"### ExoPlayer Version

2.16.0

### Devices that reproduce the issue

Android 13

### Devices that do not reproduce the issue

Android 12

### Reproducible in the demo app?

Yes

### Reproduction steps

Play any song and than check the notification

### Expected result

Forward and Backward button have to be shown. 

### Actual result

Notification buttons shows similar like other version. I already use UAMP demo. where i enable these property but its not working. 
 notificationManager.setUseRewindAction(true)
        notificationManager.setUseFastForwardAction(true)


### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['question'],['marcbaechinger'],,1
10950,Exoplayer does not scale video properly in HLS ,closed,2023-01-28 18:08:48,2023-06-11 01:05:13,2023-04-11 01:06:07,"am using the latest version of exoplayer(2.18.2), am trying to scale  video(HLS) as the track or quality changes to a higher resolution but the videos does not get scaled properly when the track changes, I can't see anything like changing the resolution when the track changes on the documentation. I noticed the video scale properly when I set InitialBitrateEstimate(Integer.MAX_VALUE), but by default settings, when it changes track, it doesn't scale properly..","['question', 'closed-by-bot']",['tianyif'],,6
10949,Request to open up configurability for Segment download collapsing,closed,2023-01-27 18:27:26,2023-05-06 01:05:05,2023-03-06 19:16:42,"When filing a feature request:
-----------------------
Replace the content in the sections below.

### [REQUIRED] Use case description
We are using Exoplayer's Dash Downloader to download our long form audio only content and we see a large degradation in download speeds. Our segment sizes are already set to 20 seconds and our content can be up to 154 hours long. 

We saw that Exoplayer already collapses adjacent segments together to optimize the amount of network chattiness on the wire. https://github.com/google/ExoPlayer/commit/c8e7ecd36794e4030ff1d0a56d25e5e0e6e0a216. As our segment sizes are already 20s long this collapsing doesn't kick in.

Based on our testing, bumping up this number to something much higher like 2000, or 3000 gives us the speed ups we need. 

### Proposed solution
We are requesting Exoplayer to make the segment size collapsing configurable via a parameter into the SegmentDownloader instead of a hardcoded value:

private static final long MAX_MERGED_SEGMENT_START_TIME_DIFF_US = 20 * C.MICROS_PER_SECOND;

This can continue to be the default value, but clients can override it with their own values so it works in each of their contexts. (I understand this value was probably selected for video use cases in mind only).

### Alternatives considered
Alternatively we can add logic on the server side to dynamically manipulate the segment sizes if Android is trying to download the stream, but this will reduce our cache hit ratios, add special logic to our infrastructure to work around this limitation, and potentially impact stall rates and latency with streaming while we download the stream.
",['enhancement'],['marcbaechinger'],,12
10948,Drm session Error. Response code: 500,closed,2023-01-27 12:37:51,2023-06-24 01:05:06,2023-04-24 17:04:01,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

STB rockchip 3229 running Android 5.1

### Devices that do not reproduce the issue

STB s905w2 running Android 11

### Reproducible in the demo app?

Yes

### Reproduction steps

Hello! STB rockchip 3229 running Android 5.1 has Widevine L3.
Drm info app show me the following information:

CleakKey CDM
Vendor: Google
Version: 1.0

Widevine CDM

Vendor: Google
Version: 1.0
Max HDCP Level Supported: Unprotected
Current HDCP Level: Unprotected
System ID: 4445
Security Level: L3

I want to play protected dash video:

```json
{
""license_server"":""https://api.amediateka.tech/drm-wrapper/proxy/wv/?pX=CF83A2"",
""src"":""https://s91084.cdn.ngenix.net/streamer/ver2/dash/widevine/df60ae0c-4b61-44ab-8a9f-561d801d2e34/x264/auto/aac-all/manifest.mpd?t=1674821406&h=ma%2F0EvolPExEYw%2Fpza+w0A==
}
```

with next code:

```java
MediaItem.Builder mediaItemBuilder = new MediaItem.Builder( );
mediaItemBuilder.setUri( Uri.parse( src ) );
mediaItemBuilder.setDrmLicenseUri( Uri.parse( licenseServer ) );
mediaItemBuilder.setDrmUuid( Util.getDrmUuid( ""widevine"" ) );
exoplayer.setMediaItem( mediaItemBuilder.build( ) );
```
but playback crashes.

In exoplayer demo app same error, but other test dash video works correctly.

On other STB device s905w2 Android 11 video plays correctly.

Drm Info:
ClearKey CDM

Vendor: Google
Version: 1.2
Max DHCP Level Supported: No digital output
Current HDCP Level: None

Widevine CDM

Vendor: Google
Version: 16.0.0
Max HDCP Level Supported: None
Current HDCP Level: None
System ID: 8158
Security Level: L3
Max Number of Sessions: 15
OEM Crypto Api Version 15


### Expected result

The media plays succesfully

### Actual result

Playback crashes with the following stacktrace:
```
I/WVCdm   (  178): CdmEngine::OpenSession
I/WVCdm   (  178): Level3 Library Dec 11 2014 16:13:16
W/WVCdm   (  178): Could not read /data/mediadrm/IDM1000/ay64.dat2: No such file or directory
W/WVCdm   (  178): Could not load liboemcrypto.so. Falling Back to L3.  dlopen failed: library ""liboemcrypto.so"" not found
I/WVCdm   (  178): CdmEngine::QueryKeyControlInfo
W/WVCdm   (  178): BufferReader::Read<T> : Failure during parse: Not enough bytes (4)
W/WVCdm   (  178): CdmEngine::ExtractWidevinePssh: Unable to read PSSH atom size
W/WVCdm   (  178): BufferReader::Read<T> : Failure during parse: Not enough bytes (4)
W/WVCdm   (  178): CdmEngine::ExtractWidevinePssh: Unable to read PSSH atom size
I/WVCdm   (  178): CdmEngine::GenerateKeyRequest
D/WVCdm   (  178): PrepareKeyRequest: nonce=387651927
```

```
E/DefaultDrmSession( 3676): DRM session error
E/DefaultDrmSession( 3676):   com.google.android.exoplayer2.drm.MediaDrmCallbackException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 500
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:200)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executeKeyRequest(HttpMediaDrmCallback.java:159)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler.handleMessage(DefaultDrmSession.java:623)
E/DefaultDrmSession( 3676):       at android.os.Handler.dispatchMessage(Handler.java:102)
E/DefaultDrmSession( 3676):       at android.os.Looper.loop(Looper.java:135)
E/DefaultDrmSession( 3676):       at android.os.HandlerThread.run(HandlerThread.java:61)
E/DefaultDrmSession( 3676):   Caused by: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 500
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:404)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:99)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:79)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:73)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.util.Util.toByteArray(Util.java:183)
E/DefaultDrmSession( 3676):       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:183)
E/DefaultDrmSession( 3676):       ... 5 more
E/ExoPlayerImplInternal( 3676): Playback error
E/ExoPlayerImplInternal( 3676):   com.google.android.exoplayer2.ExoPlaybackException: Source error
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:632)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:586)
E/ExoPlayerImplInternal( 3676):       at android.os.Handler.dispatchMessage(Handler.java:98)
E/ExoPlayerImplInternal( 3676):       at android.os.Looper.loop(Looper.java:135)
E/ExoPlayerImplInternal( 3676):       at android.os.HandlerThread.run(HandlerThread.java:61)
E/ExoPlayerImplInternal( 3676):   Caused by: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: com.google.android.exoplayer2.drm.MediaDrmCallbackException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 500
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.DefaultDrmSession.onError(DefaultDrmSession.java:544)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeysError(DefaultDrmSession.java:534)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.DefaultDrmSession.onKeyResponse(DefaultDrmSession.java:497)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.DefaultDrmSession.access$100(DefaultDrmSession.java:61)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler.handleMessage(DefaultDrmSession.java:584)
E/ExoPlayerImplInternal( 3676):       at android.os.Handler.dispatchMessage(Handler.java:102)
E/ExoPlayerImplInternal( 3676):       ... 2 more
E/ExoPlayerImplInternal( 3676):   Caused by: com.google.android.exoplayer2.drm.MediaDrmCallbackException: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 500
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:200)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executeKeyRequest(HttpMediaDrmCallback.java:159)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler.handleMessage(DefaultDrmSession.java:623)
E/ExoPlayerImplInternal( 3676):       ... 3 more
E/ExoPlayerImplInternal( 3676):   Caused by: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 500
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:404)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:99)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:79)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.upstream.DataSourceInputStream.read(DataSourceInputStream.java:73)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.util.Util.toByteArray(Util.java:183)
E/ExoPlayerImplInternal( 3676):       at com.google.android.exoplayer2.drm.HttpMediaDrmCallback.executePost(HttpMediaDrmCallback.java:183)
E/ExoPlayerImplInternal( 3676):       ... 5 more
```

### Media

```
{
""license_server"":""https://api.amediateka.tech/drm-wrapper/proxy/wv/?pX=CF83A2"",
""src"":""https://s91084.cdn.ngenix.net/streamer/ver2/dash/widevine/df60ae0c-4b61-44ab-8a9f-561d801d2e34/x264/auto/aac-all/manifest.mpd?t=1674821406&h=ma%2F0EvolPExEYw%2Fpza+w0A==
}
```

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['question'],['icbaker'],,5
10947,Session Exception : Failed to get provision request (-2014) Playback Error,closed,2023-01-27 09:33:19,2023-04-10 01:05:35,2023-02-08 05:04:44,"
![MicrosoftTeams-image (2)](https://user-images.githubusercontent.com/105206700/215053866-35297f9d-2de2-4d78-96f2-b34fe36a6ca8.png)

Can someone help me in understanding the reason behind this error?
","['question', 'need more info', 'bug: in platform drm']",['rrfrias'],,5
10946,RtspMediaSource with not available RTSP stream will block whole ExoPlayer,closed,2023-01-26 14:49:34,2023-03-29 01:06:41,2023-01-27 11:58:54,"Hello,
I try to implement a player which mixes local video files in playlist with public RTSP streams for my project.
I found that if RTSP Server is not accesible (dead) - Exoplayer will lock whole play thread even at playing an earlier local MP4 file in playlist.

It will finally, after about 2 minutes, fire ExoPlaybackException

I cannot find a timeout option to setup.
```
var mediaSourceRTSP =
    RtspMediaSource.Factory()
        .setForceUseRtpTcp(true)
        .setTimeoutMs(3000)
        .createMediaSource(newMediaItem)
```

And the Exception which fires about 2 minutes later:

```
E/ExoPlayerImplInternal: Playback error
      com.google.android.exoplayer2.ExoPlaybackException: Source error
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:637)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:613)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:223)
        at android.os.HandlerThread.run(HandlerThread.java:67)
     Caused by: java.net.ConnectException: failed to connect to /11.201.0.110 (port 11035) from /:: (port 58066): connect failed: ETIMEDOUT (Connection timed out)
        at libcore.io.IoBridge.connect(IoBridge.java:142)
        at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:142)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:390)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436)
        at java.net.Socket.connect(Socket.java:621)
        at java.net.Socket.connect(Socket.java:570)
        at java.net.Socket.<init>(Socket.java:450)
        at java.net.Socket.<init>(Socket.java:218)
        at javax.net.DefaultSocketFactory.createSocket(SocketFactory.java:279)
        at com.google.android.exoplayer2.source.rtsp.RtspClient.getSocket(RtspClient.java:304)
        at com.google.android.exoplayer2.source.rtsp.RtspClient.start(RtspClient.java:198)
        at com.google.android.exoplayer2.source.rtsp.RtspMediaPeriod.prepare(RtspMediaPeriod.java:158)
        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145)
        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod(ExoPlayerImplInternal.java:1981)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.updatePeriods(ExoPlayerImplInternal.java:1961)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:961)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)
        at android.os.Handler.dispatchMessage(Handler.java:102) 
        at android.os.Looper.loop(Looper.java:223) 
        at android.os.HandlerThread.run(HandlerThread.java:67) 
     Caused by: android.system.ErrnoException: connect failed: ETIMEDOUT (Connection timed out)
        at libcore.io.Linux.connect(Native Method)
        at libcore.io.ForwardingOs.connect(ForwardingOs.java:94)
        at libcore.io.BlockGuardOs.connect(BlockGuardOs.java:138)
        at libcore.io.ForwardingOs.connect(ForwardingOs.java:94)
        at libcore.io.IoBridge.connectErrno(IoBridge.java:156)
        at libcore.io.IoBridge.connect(IoBridge.java:134)
        at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:142) 
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:390) 
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:230) 
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:212) 
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:436) 
        at java.net.Socket.connect(Socket.java:621) 
        at java.net.Socket.connect(Socket.java:570) 
        at java.net.Socket.<init>(Socket.java:450) 
        at java.net.Socket.<init>(Socket.java:218) 
        at javax.net.DefaultSocketFactory.createSocket(SocketFactory.java:279) 
        at com.google.android.exoplayer2.source.rtsp.RtspClient.getSocket(RtspClient.java:304) 
        at com.google.android.exoplayer2.source.rtsp.RtspClient.start(RtspClient.java:198) 
        at com.google.android.exoplayer2.source.rtsp.RtspMediaPeriod.prepare(RtspMediaPeriod.java:158) 
        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145) 
        at com.google.android.exoplayer2.source.MaskingMediaPeriod.prepare(MaskingMediaPeriod.java:145) 
        at com.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod(ExoPlayerImplInternal.java:1981) 
        at com.google.android.exoplayer2.ExoPlayerImplInternal.updatePeriods(ExoPlayerImplInternal.java:1961) 
        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:961) 
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495) 
        at android.os.Handler.dispatchMessage(Handler.java:102) 
        at android.os.Looper.loop(Looper.java:223) 
        at android.os.HandlerThread.run(HandlerThread.java:67) 
```",['question'],['claincly'],,4
10945,How to get downloaded duration of Dash content?,open,2023-01-25 20:44:26,2023-01-26 15:47:03,,"Hi ExoPlayer team,

ExoPlayer version using: 2.15.1

We are following https://exoplayer.dev/downloading-media.html to download Mpeg-Dash content. We are using SimpleCache+CacheDataSource+DashDownloader to download the Dash content and hand over the CacheDataSource to ExoPlayer to do the playback. 

We are able to download and playback of the item at the same time before the audio item is fully downloaded. And we can get the **""full duration""** of the item from ExoPlayer, and can get the **""bytesDownloaded""** from the DashDownloader callback. However, we don't find a way to get the **""downloaded duration""**

For example, say there is an audio file which is 10 minutes duration and the size is 100MB. When 60MB is downloaded and I try to play it, I would like to be able to get a **""download duration""** like 6 minutes into the audio.

Would like to know is there any API from the ExoPlayer library I can get this number?

Thanks,
Jianxing
",['question'],['marcbaechinger'],,3
10944,RTSP: can't open stream from OBS,open,2023-01-25 20:31:27,2023-01-26 14:06:36,,"ExoPlayer can't open RTSP stream from OBS Studio with ""OBS-RTSP Server"" plugin. Nothing happens, only these http headers appears in logcat:
```
RtspClient: OPTIONS rtsp://192.168.1.10:8554/live RTSP/1.0
RtspClient: User-Agent: ExoPlayerLib/2.18.2
RtspClient: CSeq: 0
RtspClient: 
RtspClient: RTSP/1.0 200 OK
RtspClient: CSeq: 0
RtspClient: Public: OPTIONS, DESCRIBE, SETUP, TEARDOWN, PLAY
RtspClient: DESCRIBE rtsp://192.168.1.10:8554/live RTSP/1.0
RtspClient: User-Agent: ExoPlayerLib/2.18.2
RtspClient: CSeq: 1
RtspClient: 
```

Can it be related to headers issue? (https://github.com/google/ExoPlayer/issues/10919)

VLC player opens the steam OK on desktop player and Android devices (both real device and emulator).

Repro:
Run OBS Studio 29.0.0 with OBS-RTSP Server plugin
https://github.com/iamscottxu/obs-rtspserver/releases
I'm using [v3.0.0-beta3](https://github.com/iamscottxu/obs-rtspserver/releases/tag/v3.0.0-beta3) which is required for OBS 29 on macOS.
I think stable version [2.3.0](https://github.com/iamscottxu/obs-rtspserver/releases/tag/v2.3.0) with previous versions of OBS will do same.

Run OBS, add anything to sources (I'm using macOS screen capture)
Set encoding in Settings - Output (I'm using H264 Hardware encoder, rescale to 720p, 5000 Kbps CBR, high profile)
Open Tools - RTSP Server, disable Multicast, press Start.

Try to open rtsp://192.168.1.10:8554/live in ExoPlayer (replace IP-address to yours):

```
ExoPlayer.Builder(requireContext())
            .build()
            .apply {
                val mediaSource = RtspMediaSource.Factory()
                    .setDebugLoggingEnabled(true)
                    //.setForceUseRtpTcp(true)
                    .createMediaSource(MediaItem.fromUri(""rtsp://192.168.1.10:8554/live""))

                addListener(playerListener)

                setVideoTextureView(view?.findViewById(R.id.live_texture_view))
                setMediaSource(mediaSource)
                prepare()
                play()
            }
```

Checked on Emulator running Android 11 (API 30) arm64-v8a and Tinkerboard S running Android 7 with ExoPlayer library 2.18.2",['question'],['claincly'],,2
10943,Transforming HLS Live to MP4 Fails,open,2023-01-25 18:18:51,2023-02-15 16:27:06,,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

It happens in all different devices and Android Version that we tested

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

1. modify `demos/transformer/build.gradle` and add the following line at line 83:
```
implementation project(modulePrefix + 'library-hls'),
```
2. Add an example HLS Live Stream URL to the Transformer Demo.
 a) add the following HLS Live Stream URL at  aline 91:
  ```
  ""https://dh4wkqcyy8768.cloudfront.net/live_500.m3u8"",
  ```
b) Add the title for the above URL at line 107:
  ```
  ""Test Record Live Stream - OneTV"",
  ```
Here is a link to our fork of the main repo with the changes: https://github.com/dev-onetv/ExoPlayer/commits/release-v2

Now build and run the demo-transformer app using Android Studio, and transforming the added URL.

The first 1-2 minutes of Live Stream video is saved as MP4, but then it fails.


### Expected result

Our use case to be able to record live stream and the Transformer seems to be ideal for this use case. Thus, we can avoid using FFMEG which takes a large size to record from HLS live Stream.

It appears that Transformer fails because the player speed is higher and when it reaches the end of Live Play list, it fails.

We would be very grateful if you could kindly let us now how we can probably reduces the transform speed and how to gracefully stop the transformation after the desired time, thus the MP4 output file is correctly written and playable.

### Actual result

Transform after 1-2 minutes crashes with the following log:

```
I/MPEG4Writer: MOOV atom was written to the file
D/MPEG4Writer: release()
D/MPEG4Writer: ftruncate mPreAllocateFileEndOffset:6957350 mOffset:6950200 mMdatEndOffset:6938606 diff:7150
D/MPEG4Writer: MP4WtrCtrlHlpLooper stopped
D/MPEG4Writer: Top 5 write durations(microseconds): #1:2620 #2:2697 #3:2912 #4:3245 #5:3305
D/MPEG4Writer: reset()
D/MPEG4Writer: Audio track stopping. Stop source
E/MPEG4Writer: Stop() called but track is not started or stopped
D/MPEG4Writer: Video track stopping. Stop source
E/MPEG4Writer: Stop() called but track is not started or stopped
D/CompatibilityChangeReporter: Compat change id reported: 147798919; UID 10157; state: ENABLED
E/TransformerActivity: Transformation error
      com.google.android.exoplayer2.transformer.TransformationException: Muxer error
        at com.google.android.exoplayer2.transformer.MuxerWrapper.lambda$resetAbortTimer$0$com-google-android-exoplayer2-transformer-MuxerWrapper(MuxerWrapper.java:315)
        at com.google.android.exoplayer2.transformer.MuxerWrapper$$ExternalSyntheticLambda0.run(Unknown Source:4)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:462)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
        at java.lang.Thread.run(Thread.java:923)
     Caused by: java.lang.IllegalStateException: No output sample written in the last 3000 milliseconds. Aborting transformation.
        at com.google.android.exoplayer2.transformer.MuxerWrapper.lambda$resetAbortTimer$0$com-google-android-exoplayer2-transformer-MuxerWrapper(MuxerWrapper.java:314)
        at com.google.android.exoplayer2.transformer.MuxerWrapper$$ExternalSyntheticLambda0.run(Unknown Source:4) 
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:462) 
        at java.util.concurrent.FutureTask.run(FutureTask.java:266) 
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:301) 
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641) 
        at java.lang.Thread.run(Thread.java:923) 
``` 

### Media

Here is an example HLS Live Stream URL:  https://dh4wkqcyy8768.cloudfront.net/live_500.m3u8

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['enhancement'],['andrewlewis'],,8
10942,ServerSideAdInsertionMediaSource.SharedMediaPeriod sometimes crashes on seek.,closed,2023-01-24 12:47:17,2023-06-06 01:05:36,2023-04-05 22:12:23,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Probably any device. I used Samsung Galaxy S10 (Android 12) and Google TV HD (Android 11) for development.

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

I have a multi-period DASH asset which maps the ad periods using `ServerSideAdInsertionMediaSource`.
1. start the stream
2. wait for the initial periods marked as ads to play
3. seek forward to hit the next ad break

The issue does not reproduce in 100% of cases, but hopping between start and a position after mid-rolls will eventually crash the player. 

### Expected result

The player doesn't crash. The active ad before the seek target is playing and once complete the content playback continues from the target seek position.

### Actual result

The player crashes with: 
```
playerFailed [eventTime=132.00, mediaPos=0.00, window=0, period=3, adGroup=0, ad=0, errorCode=ERROR_CODE_UNSPECIFIED
  com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtime error
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:621)
      at android.os.Handler.dispatchMessage(Handler.java:102)
      at android.os.Looper.loopOnce(Looper.java:226)
      at android.os.Looper.loop(Looper.java:313)
      at android.os.HandlerThread.run(HandlerThread.java:67)
  Caused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=0
      at com.google.android.exoplayer2.source.ads.ServerSideAdInsertionMediaSource$SharedMediaPeriod.onDownstreamFormatChanged(ServerSideAdInsertionMediaSource.java:910)
      at com.google.android.exoplayer2.source.ads.ServerSideAdInsertionMediaSource.onDownstreamFormatChanged(ServerSideAdInsertionMediaSource.java:535)
      at com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher.lambda$downstreamFormatChanged$5$com-google-android-exoplayer2-source-MediaSourceEventListener$EventDispatcher(MediaSourceEventListener.java:471)
      at com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher$$ExternalSyntheticLambda4.run(Unknown Source:6)
      at com.google.android.exoplayer2.util.Util.postOrRun(Util.java:604)
      at com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher.downstreamFormatChanged(MediaSourceEventListener.java:469)
      at com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher.downstreamFormatChanged(MediaSourceEventListener.java:454)
      at com.google.android.exoplayer2.source.chunk.ChunkSampleStream.maybeNotifyPrimaryTrackFormatChanged(ChunkSampleStream.java:752)
      at com.google.android.exoplayer2.source.chunk.ChunkSampleStream.maybeNotifyPrimaryTrackFormatChanged(ChunkSampleStream.java:744)
      at com.google.android.exoplayer2.source.chunk.ChunkSampleStream.readData(ChunkSampleStream.java:390)
      at com.google.android.exoplayer2.source.ads.ServerSideAdInsertionMediaSource$SharedMediaPeriod.readData(ServerSideAdInsertionMediaSource.java:871)
      at com.google.android.exoplayer2.source.ads.ServerSideAdInsertionMediaSource$SampleStreamImpl.readData(ServerSideAdInsertionMediaSource.java:1230)
      at com.google.android.exoplayer2.BaseRenderer.readSource(BaseRenderer.java:425)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readSourceOmittingSampleData(MediaCodecRenderer.java:961)
      at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:779)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)
      at android.os.Handler.dispatchMessage(Handler.java:102) 
      at android.os.Looper.loopOnce(Looper.java:226) 
      at android.os.Looper.loop(Looper.java:313) 
      at android.os.HandlerThread.run(HandlerThread.java:67) 
```

The fix might be as simple as adding the condition to the if statement in `onDownstreamFormatChanged(
        MediaPeriodImpl, MediaLoadData)`, so that the operation doesn't execute if the length is invalid. Though this might be only healing the symptoms.  
```
if (streamIndex != C.INDEX_UNSET && mediaPeriod.hasNotifiedDownstreamFormatChange.length > streamIndex)
```

### Media

I will send a sample and a patch with my `ServerSideAdInsertionMediaSource` implementation by email. The samples are tagged for issue [10940](https://github.com/google/ExoPlayer/issues/10940)

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['marcbaechinger'],,2
10941,Playback starts from a negative position with multi-period DASH,closed,2023-01-24 12:47:13,2023-06-04 01:05:10,2023-04-04 08:32:06,"### ExoPlayer Version

2.18.1

### Devices that reproduce the issue

Probably any device. I used Samsung Galaxy S10 (Android 12) and Google TV HD (Android 11) for development.

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

I haven't tested all versions in between, but the issue could not be reproduced on version 2.14.1.

Reproduced using a multi-period DASH (example sent by e-mail).
When checking `player.getCurrentPosition()` after the player has prepared, the first value is -21.

It seems more than coincidental that the negative offset is -21ms as this represents a (floored) duration of a single frame of audio (21.667mS - hence why a pair of priming frames make 43ms, which is the difference between expected and actual segment duration for the first segment).

### Expected result

Playback starts at 0

### Actual result

Playback starts at -21 (when using `onPlaybackStateChanged` to read currentPosition, sometimes this is not visible, but should happen often enough).

### Media

I will send a sample by email. The samples are tagged for issue [10940](https://github.com/google/ExoPlayer/issues/10940)

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['tonihei'],,6
10940,Crash when selecting subtitle in multi-period DASH.,closed,2023-01-24 12:47:06,2023-03-26 01:05:16,2023-01-24 13:27:53,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Probably any device. I used Samsung Galaxy S10 (Android 12) and Google TV HD (Android 11) for development.

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

This issue was **could not** be reproduced in version 2.18.1.

When trying to select the text track, the application crashes (reproducible at about 95% rate).

Steps to reproduce with the sample app:
1. Load an mpd which has multiple `<Period>`s and a ttml track.
2. Start the stream
3. Select the text track from the `CC` menu at the bottom or `Select Tracks` > `Text` on the top.

### Expected result

The video plays with the selected subtitle showing.

### Actual result

The app crashes with `ArrayIndexOutOfBoundsException` in `TtmlSubtitle`: 
```
Playback error
  com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtime error
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:621)
      at android.os.Handler.dispatchMessage(Handler.java:102)
      at android.os.Looper.loopOnce(Looper.java:226)
      at android.os.Looper.loop(Looper.java:313)
      at android.os.HandlerThread.run(HandlerThread.java:67)
  Caused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=-1
      at com.google.android.exoplayer2.text.ttml.TtmlSubtitle.getEventTime(TtmlSubtitle.java:62)
      at com.google.android.exoplayer2.text.SubtitleOutputBuffer.getEventTime(SubtitleOutputBuffer.java:53)
      at com.google.android.exoplayer2.text.TextRenderer.getCurrentEventTimeUs(TextRenderer.java:426)
      at com.google.android.exoplayer2.text.TextRenderer.render(TextRenderer.java:259)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)
      at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)
      at android.os.Handler.dispatchMessage(Handler.java:102) 
      at android.os.Looper.loopOnce(Looper.java:226) 
      at android.os.Looper.loop(Looper.java:313) 
      at android.os.HandlerThread.run(HandlerThread.java:67) 
```

### Media

I will send a sample by email.

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['duplicate'],['icbaker'],,1
10939,Incorrect AdMarkers are being highlighted - MidRoll Ad Replays,open,2023-01-23 15:00:04,2023-02-17 20:37:44,,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

- Samsung Galaxy Tab S5e (OS11) 
- Samsung Galaxy A13 5G (OS12)

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Not tested

### Reproduction steps

1. Launch video
2. Scrub past two midroll pods
3. User must watch at least one
4. Scrub back between the first and second midroll pod
5. Watch midroll pod (since first midroll marker still active)
6. Close player and relaunch/resume same episode
7. Confirm first and second midroll markers are inactive
8. Scrub ahead past third midroll - watch midroll ads - third midroll marker becomes inactive
9. Scrub back in front of third midroll pod - keep an eye on 2nd and 3rd midroll markers.
     - The 2nd or 3rd midroll marker may become active again
     - If 2nd midroll marker becomes active again, a midroll will play again, but starting at Ad 2/4
10. If content just continues to play, continue to Step 10
11. Close player again and relaunch

I will share the video of what is actually happening on [dev.exoplayer@gmail.com](mailto:dev.exoplayer@gmail.com).

### Expected result

The video should resume properly with the proper ad marker highlighted.

### Actual result

Incorrect mid-roll markers are becoming active.

### Media

I will share the video on [dev.exoplayer@gmail.com](mailto:dev.exoplayer@gmail.com).

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['bug', 'needs triage']",['marcbaechinger'],,4
10938,Next button in notification not visible even adding the setUseNextAction true,closed,2023-01-20 16:04:14,2023-04-01 01:05:28,2023-01-30 19:01:19,"### ExoPlayer Version

2.14.2

### Devices that reproduce the issue

 Hi im facing the issue in Exoplayer Notification.  Right Button is not showing. I also enable the property true for right button but its not working. Please let me know if this is version issue or anything else.
 
Device-  Pixel 5 Api 30

### Devices that do not reproduce the issue

Device-  Pixel 5 Api 30

### Reproducible in the demo app?

Yes

### Reproduction steps

Play the song and than lock the device and than you will see right button is not showing

### Expected result

Right Button have to visible

### Actual result

Right button not visible

### Media


### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['question'],['marcbaechinger'],,2
10937,Dolby Atmos Stream not playing for Device supporting Dolby Atmos,open,2023-01-20 09:02:19,2023-08-15 11:51:25,,"### ExoPlayer Version

2.18.0

### Devices that reproduce the issue

Xiaomi MiTV-MOOQ0
Android 10

Model Name: 43 Y1S Pro
Android 10
Model C00

### Devices that do not reproduce the issue

Fire TV Stick 4K - 1st Gen (2018)
Android 7.1.2

### Reproducible in the demo app?

Yes

### Reproduction steps

- Play the Dolby Atmos Content by configuring in media.exolist.json file.
- Observe that Video is stuck at 1st frame only.

### Expected result

- Video should play as expected because device claims to support Dolby Atmos.

### Actual result

Observe that Video is stuck at 1st frame only.

### Media

We will share the Media details via email to [dev.exoplayer@gmail.com]

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['microkatz'],,31
10936,Video stream always buffering if audio is not playing,open,2023-01-20 03:09:40,2023-02-15 18:00:03,,"I am using exoplayer to play the stream in a miracast sink application, in order to display a device mirroring it's screen. Using a windows PC, I try to cast to my app, but when I try to play the stream, it will get stuck buffering forever, until I play any kind of audio source on the windows PC. Stream works while the sound is playing, but it goes back to buffering the moment I pause all sounds. While doing this test, whenever I pause and play back a youtube video for example, I always get an error in exoplayer (Audio sink error, Unexpected audio track timestamp discontinuity). If I leave the audio source paused for too long, it will just crash due to the buffering.

I have tried using FLAG_IGNORE_AAC_STREAM on the setTsExtractorFlags, and if I do that the stream works completely as expected from windows, but then I cannot ever play any sound.

I need to be able to keep playing video always, ignoring any lack of AAC stream while there is none, but playing that when it does show up in the same stream. Is there any flag or option where I can set something like this up?","['question', 'needs triage']",['rohitjoins'],,2
10935,Fix subtitles crash,closed,2023-01-19 19:01:09,2023-03-21 01:06:03,2023-01-19 19:02:36,"Early out to avoid NPR when there are no events in subtitles
Set our first Mirego version",[],[],,1
10934,TtmlSubtitle\SubtitleOutputBuffer throws ArrayIndexOutOfBoundsException when trying to play video with subtitles,closed,2023-01-19 12:20:19,2023-03-21 01:06:04,2023-01-19 14:08:38,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Samsung SM-T970 (but this issue is not device specific and testing team was able to reproduce it with various devices)

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

No

### Reproduction steps

Start playback with enabled subtitles - in some cases player falls to error with errorCode = 1000
This issue is not reproducible with ExoPlayer 2.18.1 and looks like it was introduced in this commit https://github.com/google/ExoPlayer/commit/1bc316dee121502ac5d5e33994cd796fa2427256


### Expected result

Playback with subs is ok 

### Actual result

ExoPlayer reports issue ExoPlaybackException with ERROR_CODE_UNSPECIFIED = 1000 (from EventLogger):

playerFailed [eventTime=2.28, mediaPos=46.00, window=0, period=0, errorCode=ERROR_CODE_UNSPECIFIED
          com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtime error
    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:621)
    at android.os.Handler.dispatchMessage(Handler.java:102)
    at android.os.Looper.loopOnce(Looper.java:226)
    at android.os.Looper.loop(Looper.java:313)
    at android.os.HandlerThread.run(HandlerThread.java:67)
 Caused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=-1
    at com.google.android.exoplayer2.text.ttml.TtmlSubtitle.getEventTime(TtmlSubtitle.java:62)
    at com.google.android.exoplayer2.text.SubtitleOutputBuffer.getEventTime(SubtitleOutputBuffer.java:53)
    at com.google.android.exoplayer2.text.TextRenderer.getCurrentEventTimeUs(TextRenderer.java:426)
    at com.google.android.exoplayer2.text.TextRenderer.render(TextRenderer.java:259)
    at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)
    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)
    at android.os.Handler.dispatchMessage(Handler.java:102) #
    at android.os.Looper.loopOnce(Looper.java:226) 
    at android.os.Looper.loop(Looper.java:313) 
    at android.os.HandlerThread.run(HandlerThread.java:67)

### Media

Unfortunately I'm not able to provide media as well as bugreport from customer devices because of DRM protection and it is strongly forbidden to share it.

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['duplicate'],['icbaker'],,1
10933,Dev ffmpeg video renderer,closed,2023-01-18 02:54:45,2023-03-20 01:05:47,2023-01-18 06:04:40,"Implement an FfmpegVideoRenderer #2159
1. Help the #7132  merge  lastest dev-v2 code.
2. Import libyuv to support rotate_degree.
3. Fix Some Issues about CopyPlane",[],[],,0
10932,FFMPEG CMAKELISTS Doesnt Generate the correct .so ,closed,2023-01-17 22:41:28,2023-03-19 01:05:29,2023-01-17 23:27:00,"Regarding FFMPEG CMAKELISTS

https://github.com/google/ExoPlayer/blob/release-v2/extensions/ffmpeg/src/main/jni/CMakeLists.txt

The aar has been generated successfully using the following Script

```
cmake_minimum_required(VERSION 3.21.0 FATAL_ERROR)

set(CMAKE_CXX_STANDARD 11)

project(libffmpegJNI C CXX)

if(${ANDROID_ABI} MATCHES ""arm64-v8a"")
    set(CMAKE_CXX_FLAGS ""-Wl,-Bsymbolic"")
endif()

set(ffmpeg_location ""${CMAKE_CURRENT_SOURCE_DIR}"")
set(ffmpeg_binaries ""${ffmpeg_location}/jniLibs/${ANDROID_ABI}"")

foreach(ffmpeg_lib avutil swresample avcodec)
    set(ffmpeg_lib_filename lib${ffmpeg_lib}.a)
    set(ffmpeg_lib_file_path ${ffmpeg_binaries}/${ffmpeg_lib_filename})
    add_library(
            ${ffmpeg_lib}
            STATIC
            IMPORTED)
    set_target_properties(
            ${ffmpeg_lib} PROPERTIES
            IMPORTED_LOCATION
            ${ffmpeg_lib_file_path})
endforeach()

include_directories(
        include
        ${ffmpeg_location})

find_library(android_log_lib log)

add_library(ffmpegJNI
        SHARED
        ffmpeg_log.c
        ffmpeg_jni.cc)

target_link_libraries(ffmpegJNI
        PRIVATE android
        PRIVATE swresample
        PRIVATE avcodec
        PRIVATE avutil
        PRIVATE ${android_log_lib})
```

how ever when i use the aar i got an error 
` java.lang.UnsatisfiedLinkError: dlopen failed: library ""libexoplayer-ffmpeg.so"" not found`

what could be wrong with my cmake file ?","['question', 'needs triage']",[],,0
10931,Player is unable to parse an embedded TTML.,closed,2023-01-17 15:35:46,2023-03-19 01:05:30,2023-01-17 16:25:34,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Samsung Galaxy A22 running Android 13
Xiaomi Redmi Note 7 running Android 11
Huawei Mate 20 Lite running Android 10

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

1. Play the media in question.
2. Select any subtitle.

### Expected result

The player continues to play the media and shows the subtitle after selecting one.

### Actual result

The player immediately stops after selecting any subtitle and playback crashes with the following stack trace:

`Playback error
                                                       com.google.android.exoplayer2.ExoPlaybackException: Unexpected runtime error
                                                           at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:621)
                                                           at android.os.Handler.dispatchMessage(Handler.java:102)
                                                           at android.os.Looper.loop(Looper.java:223)
                                                           at android.os.HandlerThread.run(HandlerThread.java:67)
                                                       Caused by: java.lang.ArrayIndexOutOfBoundsException: length=0; index=-1
                                                           at com.google.android.exoplayer2.text.ttml.TtmlSubtitle.getEventTime(TtmlSubtitle.java:62)
                                                           at com.google.android.exoplayer2.text.SubtitleOutputBuffer.getEventTime(SubtitleOutputBuffer.java:53)
                                                           at com.google.android.exoplayer2.text.TextRenderer.getCurrentEventTimeUs(TextRenderer.java:426)
                                                           at com.google.android.exoplayer2.text.TextRenderer.render(TextRenderer.java:259)
                                                           at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)
                                                           at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)`

### Media

Sent it through email.

### Bug Report

- [x] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['duplicate'],['icbaker'],,1
10930,ExoPlayer2 switch tracks pro blems,closed,2023-01-17 06:19:40,2023-04-12 01:06:07,2023-02-10 12:48:00,"Hi developers , i was not able to fix some problems with ExoPlayer2.

#### Q1: I try to merge 2 mp3 files into one file with 2 tracks(one  accompany , one voice, in karaoke project). Then i should switch these tracks by myself(not play simultaneously).


* 1st step : merge 2 mp3 files
```
int dataLen = dataSource.getMixSongPaths().size();
MediaSource[] mediaSources = new MediaSource[dataLen];
mediaSources[0] = new ProgressiveMediaSource.Factory(
                            new DefaultDataSourceFactory(mAppContext, Util.getUserAgent(mAppContext, ""aitrip"" + i)))
                            .createMediaSource(MediaItem.fromUri(""/sdcard/xxx/invalid-1.mp3""));
mediaSources[1] = new ProgressiveMediaSource.Factory(
                            new DefaultDataSourceFactory(mAppContext, Util.getUserAgent(mAppContext, ""aitrip"" + i)))
                            .createMediaSource(MediaItem.fromUri(""/sdcard/xxx/invalid-2.mp3""));
MediaSource mediaSource = new MergingMediaSource(true, true, mediaSources);

```
* 2nd step : switch deferent tracks with TrackManager.java in Exo demo, the core code is
```
public void changeTrack()
    {
        TrackSelectionParameters.Builder builder = trackSelectionParameters.buildUpon();
        for (int i = 0; i < SUPPORTED_TRACK_TYPES.size(); i++)
        {
            int trackType = SUPPORTED_TRACK_TYPES.get(i);
            builder.setTrackTypeDisabled(trackType, false);
            builder.clearOverridesOfType(trackType);
            if (trackType == C.TRACK_TYPE_AUDIO)
            {
                for (TrackSelectionOverride override : overrides.values())
                {
                    builder.addOverride(override);
                }
            }
        }
        player.setTrackSelectionParameters(builder.build());
   }
```

* 3rd step:
##### The result is strange. Some mp3 files can  switch track successfully ( it seems that mp3 encoded by LAME3.98r is ok), some failed( it seems that mp3 encoded by LAME3.98 is failed).

* PS: I dont want to play this two mp3 files at the same time. I just want to switch 2 music tracks by myself when singing.

Please help me , thanks very much.

#### Q2: When i play mp4 video files with 2 tracks. I use TrackManager to switch the tracks successfully,but it always gets stuck for a while (video surface and sound will get stuck about 100-200ms).But MediaPlayer works well.In karaoke project, this is Unacceptable.

```
    public void setDataSource()
    {
        String dataPath = ""/sdcard/xxx/tempmv.mp4"";
        // create MediaSource
        MediaSource mediaSource = new ProgressiveMediaSource.Factory(
                new DefaultDataSourceFactory(this, Util.getUserAgent(this, ""aitrip"")))
                .createMediaSource(MediaItem.fromUri(dataPath));
        mInternalPlayer.setMediaSource(mediaSource);
        mInternalPlayer.prepare();
        mInternalPlayer.setPlayWhenReady(true);
        mInternalPlayer.addListener(new Player.Listener() {
            @Override
            public void onEvents(Player player, Player.Events events) {
                Player.Listener.super.onEvents(player, events);
            }

            @Override
            public void onPlayerError(PlaybackException error) {
                Player.Listener.super.onPlayerError(error);
            }
        });
    }


    findViewById(R.id.bt_switch).setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            index = index == 1 ? 0 :1;
            TrackManager.getInstance().initTrack(mInternalPlayer, index);
        }
    });
```

* Exo Version : 
```
    api ""com.google.android.exoplayer:exoplayer-core:2.18.0""
    api ""com.google.android.exoplayer:exoplayer-dash:2.18.0""
    api ""com.google.android.exoplayer:exoplayer-hls:2.18.0""
    api ""com.google.android.exoplayer:exoplayer-smoothstreaming:2.18.0""
```

I will put the files in the attachment.(LAME3.98r mp3 files , LAME3.98 mp3 files and the mp4 file)


Look forward to your reply. Thanks.
[demofiles.zip](https://github.com/google/ExoPlayer/files/10431904/demofiles.zip)
",['bug'],['microkatz'],,13
10929,Custom buffering audio processor : sync issues on seek/loop,closed,2023-01-16 13:49:05,2023-06-14 01:05:34,2023-04-14 01:05:51,"ExoPlayer version: Various - 2.16 right through 2.18.2

I am using a custom audio processor (extends BaseAudioProcessor) that (in queueInput(...) ):

- stashes audio samples into a custom buffer
- zeros the samples going into the output buffer - to preserve timing, etc

Audio is played back externally to ExoPlayer - being pulled off the custom buffer.  All seemed to work as desired.  However, I am seeing sync issues when seeking.  I initially looked to empty my custom buffer in overrides of onFlush(),  onQueueEndOfStream() and onReset().  Sync is still not right, and looping also appears to be out of sync.

Can anyone offer some guidance on when I should be emptying my custom audio buffer?","['question', 'closed-by-bot']",['tonihei'],,4
10928,MediaCodec: Codec reported err 0xfffffff4/NO_MEMORY on Android 12 devices,closed,2023-01-16 07:29:38,2023-03-18 01:05:15,2023-01-16 11:00:05,"### ExoPlayer Version

2.14.0

### Devices that reproduce the issue

Nokia 5.4

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Not tested

### Reproduction steps

1. Created instance of Exoplayer as Recyclerview Item and also a Viewpager Item.
2. If the Item is in focus, sometimes it plays perfectly but if scrolling is fast, it doesn't render the video from the URL.
3. Code:
`if (exoplayer == null && list != null) {`
`            val executorService = Executors.newSingleThreadExecutor()`
`            executorService.execute {`
`                val loadControl: LoadControl = DefaultLoadControl.Builder()`
`                    .setAllocator(DefaultAllocator(true, 16))`
`                    .setBufferDurationsMs(1 * 1024, 1 * 1024, 500, 1024)`
`                    .setTargetBufferBytes(-1)`
`                    .setPrioritizeTimeOverSizeThresholds(true)`
`                    .build()`
`                val trackSelector = DefaultTrackSelector(mActivity!!)`
`                try {`
`                    mActivity!!.runOnUiThread {`
`                        exoplayer =`
`                            SimpleExoPlayer.Builder(mActivity!!).setTrackSelector(trackSelector)`
`                                .setLoadControl(loadControl)`
`                                .build()`
`                        val dataSourceFactory: DataSource.Factory =`
`                            DefaultDataSourceFactory(`
`                                mActivity!!, mActivity!!.getString(R.string.app_name)`
`                            )`
`                        val videoSource: MediaSource =`
`                            ProgressiveMediaSource.Factory(dataSourceFactory)`
`                                .createMediaSource(MediaItem.fromUri(videoURL!!))`
`                        //exoplayer!!.setThrowsWhenUsingWrongThread(false)`
`                        exoplayer!!.addMediaSource(videoSource)`
`                        exoplayer!!.prepare()`
`                        //exoplayer!!.addListener(this@HomePostsAdapter)`
`                        exoplayer!!.repeatMode = Player.REPEAT_MODE_ONE`
`                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {`
`                            val audioAttributes =`
`                                AudioAttributes.Builder()`
`                                    .setUsage(C.USAGE_MEDIA)`
`                                    .setContentType(C.CONTENT_TYPE_MOVIE)`
`                                    .build()`
`                            exoplayer!!.setAudioAttributes(audioAttributes, true)`
`                        }`
`                    }`
`                } catch (e: Exception) {`
`                    Log.d(""PostHomeFragment"", ""Exception audio focus : $e"")`
`                }`
`                mActivity!!.runOnUiThread {`
`                    videoView.findViewById<View>(com.google.android.exoplayer2.ui.R.id.exo_play).visibility =`
`                        View.GONE`
`                    if (exoplayer != null) {`
`                         videoView.player = exoplayer`
`                        // list!![0]!!.getFiles()!![0]!!.playerView = exoplayer`
`                        exoplayer!!.playWhenReady = true`
`                    }`
`                }`
`            }`
`        }`

### Expected result

The video should be played smoothly if the view is in focus.

### Actual result

the holder displays a blank screen where;
1. Sometimes the video is playing perfectly.
2. Only the audio is playing.
3. Neither the audio nor the video is playing.

### Media

Not applicable.

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['question'],['marcbaechinger'],,1
10927,How to get the url of the currently playing ts file?,closed,2023-01-16 03:58:39,2023-03-21 01:06:05,2023-01-19 18:48:52,"```
Authentication error encountered during playback：
com.google.android.exoplayer2.ExoPlaybackException: Source error
    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:628)
    at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:600)
    at android.os.Handler.dispatchMessage(Handler.java:106)
    at android.os.Looper.loop(Looper.java:219)
    at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: Response code: 403
    at com.google.android.exoplayer2.upstream.DefaultHttpDataSource.open(DefaultHttpDataSource.java:382)
    at com.google.android.exoplayer2.upstream.DefaultDataSource.open(DefaultDataSource.java:258)
    at com.google.android.exoplayer2.upstream.DataSourceInputStream.checkOpened(DataSourceInputStream.java:99)
    at com.google.android.exoplayer2.upstream.DataSourceInputStream.open(DataSourceInputStream.java:62)
    at com.google.android.exoplayer2.source.hls.Aes128DataSource.open(Aes128DataSource.java:93)
    at com.google.android.exoplayer2.upstream.StatsDataSource.open(StatsDataSource.java:84)
    at com.google.android.exoplayer2.source.hls.HlsMediaChunk.prepareExtraction(HlsMediaChunk.java:483)
    at com.google.android.exoplayer2.source.hls.HlsMediaChunk.feedDataToExtractor(HlsMediaChunk.java:457)
    at com.google.android.exoplayer2.source.hls.HlsMediaChunk.loadMedia(HlsMediaChunk.java:432)
    at com.google.android.exoplayer2.source.hls.HlsMediaChunk.load(HlsMediaChunk.java:388)
    at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:409)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
    at java.lang.Thread.run(Thread.java:929)
```
How to get the url of the currently playing ts file?
",['question'],['rohitjoins'],,1
10926,can i use Ffmpeg as my video renderer ?,closed,2023-01-15 16:26:35,2023-03-19 01:05:30,2023-01-17 12:14:06,"Hello, I am using ffmpeg as my audio renderer can videorenderer be supported as well ?
",['duplicate'],['rohitjoins'],,2
10924,Fragment scrolling error,closed,2023-01-13 04:34:49,2023-05-15 01:05:29,2023-03-15 01:06:37,"```
023-01-13 12:33:22.994 307-23297/? E/C2RKMpiDec: failed to find output buffer
2023-01-13 12:33:22.994 22492-23295/com.example.zhuoyuadvert E/MediaCodec: Codec reported err 0xe, actionCode 0, while in state 6/STARTED
2023-01-13 12:33:22.996 22492-23295/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:22.996 22492-23295/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:22.996 22492-23295/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:22.996 22492-23295/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:22.996 22492-23295/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:22.996 22492-23295/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:22.996 22492-23295/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:23.001 22492-23293/com.example.zhuoyuadvert E/ExoPlayerImplInternal: Renderer error: index=0, type=video, format=Format(1, null, null, video/avc, null, -1, null, [720, 1280, 25.0], [-1, -1]), rendererSupport=YES
    com.google.android.exoplayer2.ExoPlaybackException: java.lang.IllegalStateException
        at com.google.android.exoplayer2.BaseRenderer.createRendererException(BaseRenderer.java:359)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:732)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:599)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:329)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loopOnce(Looper.java:201)
        at android.os.Looper.loop(Looper.java:288)
        at android.os.HandlerThread.run(HandlerThread.java:67)
     Caused by: java.lang.IllegalStateException
        at android.media.MediaCodec.native_dequeueInputBuffer(Native Method)
        at android.media.MediaCodec.dequeueInputBuffer(MediaCodec.java:2938)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer(MediaCodecRenderer.java:1048)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:719)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:599) 
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:329) 
        at android.os.Handler.dispatchMessage(Handler.java:102) 
        at android.os.Looper.loopOnce(Looper.java:201) 
        at android.os.Looper.loop(Looper.java:288) 
        at android.os.HandlerThread.run(HandlerThread.java:67) 
2023-01-13 12:33:23.003 22492-23293/com.example.zhuoyuadvert E/ExoPlayerImplInternal: Disable failed.
    java.lang.IllegalStateException
        at android.media.MediaCodec.native_flush(Native Method)
        at android.media.MediaCodec.flush(MediaCodec.java:2350)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flushOrReleaseCodec(MediaCodecRenderer.java:773)
        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.flushOrReleaseCodec(MediaCodecVideoRenderer.java:724)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onDisabled(MediaCodecRenderer.java:634)
        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onDisabled(MediaCodecVideoRenderer.java:569)
        at com.google.android.exoplayer2.BaseRenderer.disable(BaseRenderer.java:168)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.disableRenderer(ExoPlayerImplInternal.java:1136)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:891)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:850)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:382)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loopOnce(Looper.java:201)
        at android.os.Looper.loop(Looper.java:288)
        at android.os.HandlerThread.run(HandlerThread.java:67)
2023-01-13 12:33:23.010 22492-22628/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) cancelBuffer: BufferQueue has no connected producer
2023-01-13 12:33:23.011 22492-23293/com.example.zhuoyuadvert E/ExoPlayerImplInternal: Reset failed.
    java.lang.IllegalStateException
        at android.media.MediaCodec.native_stop(Native Method)
        at android.media.MediaCodec.stop(MediaCodec.java:2300)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.releaseCodec(MediaCodecRenderer.java:668)
        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.releaseCodec(MediaCodecVideoRenderer.java:714)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onReset(MediaCodecRenderer.java:641)
        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onReset(MediaCodecVideoRenderer.java:578)
        at com.google.android.exoplayer2.BaseRenderer.reset(BaseRenderer.java:175)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:900)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:850)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:382)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loopOnce(Looper.java:201)
        at android.os.Looper.loop(Looper.java:288)
        at android.os.HandlerThread.run(HandlerThread.java:67)
2023-01-13 12:33:23.021 22492-22628/com.example.zhuoyuadvert E/BufferQueueProducer: [SurfaceTexture-1-22492-6](id:57dc00000018,api:0,p:-1,c:22492) detachBuffer: BufferQueue has been abandoned
```","['question', 'closed-by-bot']",['christosts'],,3
10923,FFmpegExtractor  can add,closed,2023-01-13 02:02:13,2023-05-06 01:05:06,2023-03-06 10:10:46,"Before filing a feature request:
-----------------------
- Search existing open issues, specifically with the label ‘enhancement’:
  https://github.com/google/ExoPlayer/labels/enhancement
- Search existing pull requests: https://github.com/google/ExoPlayer/pulls

When filing a feature request:
-----------------------
Replace the content in the sections below.

### [REQUIRED] Use case description
Describe the use case or problem you are trying to solve in detail. If there are
any standards or specifications involved, please provide the relevant details.

### Proposed solution
A clear and concise description of your proposed solution, if you have one.

### Alternatives considered
A clear and concise description of any alternative solutions you considered,
if applicable.
","['enhancement', 'need more info']",['christosts'],,8
10922,url with PHP and parameters,closed,2023-01-12 14:15:53,2023-03-14 01:06:39,2023-01-12 20:30:36,"What is the way to provide the stream url in playlist with the php parameters?
In example:
this url works: http://server.com/test.php/index.m3u8
this one not: http://server.com/test.php?ch=tvchannel/index.m3u8

If there in the url link after the ""php"" comes the ""?"" sign, the Exo player do not opens the stream",['question'],['marcbaechinger'],,1
10921,"ProgressiveMediaSource calls ResolvingDataSource resolveDataSpec 1 time before playing the track, but HlsMediaSource calls resolveDataSpec immediately for the entire list of tracks",closed,2023-01-12 10:08:33,2023-04-11 01:05:56,2023-02-09 10:06:05,"That’s how we create our Media Source. At the time of receiving playlist we have not information about URI of tracks, so we use resolvingDataFactory

```
val mediaSources = playlist.map {
            HlsMediaSource.Factory(resolvingDataSourceFactory)
                .createMediaSource(
                    MediaItem.Builder().apply {
                        setTag(it)
                        setUri(it.getUri()) // id://track_id -> id://12345
                    }.build()
                )
        }
        mediaSource.setShuffleOrder(createShuffleOrder(true))
        mediaSource.addMediaSources(mediaSources)
        player.prepare(mediaSource, needResetPlayerState, needResetPlayerState)
```
        
Inside resolvingDataFactory we get the track id from the original URI and make a request to the server for a link to the playback file. Which can be mp3 or m3u8. And our problem is that for HlsMediaSource when playing one track, we have a lot requests for all playlist tracks",['question'],['icbaker'],,28
10920,How to inform ExoPlayer's StyledPlayerView about Full Screen State Changes?,closed,2023-01-12 08:12:49,2023-03-18 01:05:16,2023-01-16 07:20:01,"Hi, I am trying to implement the Full-Screen functionality in my Exo Player. For that I used a dialog like shown in the code below:

```
playerView.setFullscreenButtonClickListener {
        if(it){
            this.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE
            dialog = object : Dialog(this, android.R.style.Theme_Black_NoTitleBar_Fullscreen){
                override fun onBackPressed() {
                    StyledPlayerView.switchTargetView(player, fullScreenPlayerView, playerView)
                    this@MainActivity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT
                    
                    // TODO: Inform the Player about the full-screen close event.
                    
                    super.onBackPressed()
                }
            }
            dialog?.addContentView(
                fullScreenPlayerView,
                ViewGroup.LayoutParams(
                    ViewGroup.LayoutParams.MATCH_PARENT,
                    ViewGroup.LayoutParams.MATCH_PARENT
                )
            )
            dialog?.show()
            StyledPlayerView.switchTargetView(player, playerView, fullScreenPlayerView)
        } else {
            StyledPlayerView.switchTargetView(player, fullScreenPlayerView, playerView)
            this@MainActivity.requestedOrientation = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT
            dialog?.dismiss()
        }
    }
```
But I can't find a method that allows us to inform the player that the full screen is closed. I need to inform the player about the full-screen state change when the user presses the back button and we manually switch back to the normal view.
Is there any method to achieve this functionality? If not, how we are supposed to use setFullscreenButtonClickListener() callback?

Thanks","['question', 'needs triage']",['icbaker'],,6
10919,RTSP message why not include 'accept',open,2023-01-12 06:46:45,2023-01-14 02:45:21,,"When using DESCRIBE method, if the protocol message doesn't include 'Accept' data, exoplayer can't get server response.
How can I add 'Accept: application/sdp​' data when using ""DESCRIBE"" method?
or should I fix RTSP server feature?

<img width=""354"" alt=""image"" src=""https://user-images.githubusercontent.com/45546418/211996808-a46cadd0-aeb3-469d-8526-92d3c9bb9189.png"">
",['question'],['claincly'],,1
10918,RTSP header ,closed,2023-01-12 06:43:52,2023-03-14 01:06:40,2023-01-12 06:44:04,,"['question', 'needs triage']",[],,0
10917,Video and audio do not send to Casting Receiver,closed,2023-01-11 19:51:06,2023-04-03 01:05:40,2023-02-01 17:54:19,"I'm trying to implement casting based off the Casting Example included in this repo and I'm running into some problems.

To start though, my ExoPlayer versions are all 2.18.1 and because of that, I am using the deprecated CastContext.getSharedInstance, since I'm getting some annoying async issues using an executor and I just need to get this working for now before figuring that problem out. I have implemented the PlayerManager near identically, with the exception of adding some extra control over the MediaRouteButton. In alignment with implementing the PlayerManager near identically, I have included all I can from MainActivity into my own activity, with the next exception being that I am not implementing any kind of playlist behavior, so I have some of the code relating to such view removed. From my analysis, it does not seem like anything removed should be related to my issue, but I also only know so much.

To finally describe my issue, I am able to get the casting button to show and connect to my Chromecast, but once I do, nothing gets sent over; I just get a screen with the casting icon. Over on my tablet, the video stops, but the audio continues. If I disconnect and reconnect, the same behavior happens but I now have two audio sources at once. They do not stack further beyond this. I'm really at a loss as to what's happening and why my video isn't being sent over. The video has been working on the ExoPlayer for months so as far as I'm aware, it shouldn't be a support issue.

Any help would be appreciated. I am emailing my code to the provided email address, but if there is any other context missing, please let me know. I also apologize in advance for any ignorance, as I inherited this codebase without documentation or dev help, so I am only so knowledgeable on how it works.","['question', 'need more info']",['marcbaechinger'],,3
10916,App Fc [AbstractMethodError],closed,2023-01-11 13:51:01,2023-03-13 01:05:43,2023-01-11 18:36:07,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Redmi note 8
Android 10

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Not tested

### Reproduction steps

Listener in service

### Expected result

App not fc

### Actual result

Build version: 1.0 
Build date: 2023-01-11 20:46:50 
Current date: 2023-01-11 20:47:19 
Device: Xiaomi Redmi Note 8 
 
Stack trace:  
java.lang.AbstractMethodError: abstract method ""void com.google.android.exoplayer2.Player$Listener.onTimelineChanged(com.google.android.exoplayer2.Timeline, int)""
	at com.google.android.exoplayer2.ExoPlayerImpl.lambda$updatePlaybackInfo$12(ExoPlayerImpl.java:1874)
	at com.google.android.exoplayer2.ExoPlayerImpl$$ExternalSyntheticLambda14.invoke(Unknown Source:6)
	at com.google.android.exoplayer2.util.ListenerSet$ListenerHolder.invoke(ListenerSet.java:282)
	at com.google.android.exoplayer2.util.ListenerSet.lambda$queueEvent$0(ListenerSet.java:190)
	at com.google.android.exoplayer2.util.ListenerSet$$ExternalSyntheticLambda1.run(Unknown Source:6)
	at com.google.android.exoplayer2.util.ListenerSet.flushEvents(ListenerSet.java:211)
	at com.google.android.exoplayer2.ExoPlayerImpl.updatePlaybackInfo(ExoPlayerImpl.java:1966)
	at com.google.android.exoplayer2.ExoPlayerImpl.handlePlaybackInfo(ExoPlayerImpl.java:1794)
	at com.google.android.exoplayer2.ExoPlayerImpl.lambda$new$1$com-google-android-exoplayer2-ExoPlayerImpl(ExoPlayerImpl.java:312)
	at com.google.android.exoplayer2.ExoPlayerImpl$$ExternalSyntheticLambda5.run(Unknown Source:4)
	at android.os.Handler.handleCallback(Handler.java:883)
	at android.os.Handler.dispatchMessage(Handler.java:100)
	at android.os.Looper.loop(Looper.java:214)
	at android.app.ActivityThread.main(ActivityThread.java:7356)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:491)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:940)


### Media

Not applicable

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['christosts'],,1
10915,How could I connect the Unity's Texture2D with Android Studio's ExoPlayer?,closed,2023-01-11 08:43:39,2023-03-14 01:06:41,2023-01-12 12:56:56,"<!-- language-all: csharp -->

I'm learning about creating a plugin with [ExoPlayer](https://exoplayer.dev/) to render video-streams in Unity. I know this is not an issue directly related with ExoPlayer, but I'm searching for help. I have this same issue posted in [stackoverflow](https://stackoverflow.com/questions/75057101/how-to-create-android-view-textureview-from-unitys-texture2d).

I have the exoplayer working fine, everything is connected and I'm using also [JNI](https://en.wikipedia.org/wiki/Java_Native_Interface) to build the wrapper between Unity and Andriod native. The player is playing and I have sound, I can pause, play, seek, etc, but I don't have the rendering. 

My idea is creating a TextureView or a SurfaceView from Unity's Texture2D, but I don't know exactly how. As they explain in the documentation and also as I saw, ExoPlayer needs to be provided by one of those SurfaceView or TextureView. 

In AndroidStudio it's easy and it doesn't need too much because you can create a SurfaceView directly from the .xml off the app, but in Unity things are pretty different.

I'm trying to extrapolate the code from [unity-android-native-camera sample](https://github.com/robsondepaula/unity-android-native-camera) in order to create a Texture2D and use the pointer of that texture as they do. I'm not doing the exactly same things from the repo, but the concept is the same.

**Unity code**  
- **CreateTextureAndPassToPlugin** is used to create the Texture2D pointer, apply it to the RawImage or Material and the pass that pointer to the JNI to save the value.
-  **CallPluginAtEndOfFrames** is used to update the texture pointer from the Android part. 
- **InitExoPlayer** initializes ExoPlayer pressing a button in the scene.

Anyway, I don't think these 2 functions are doing anything, because in Android part I tried different things and the current version is trying to create a TextureView and set it into the ExoPlayer instance, because if you do that ExoPlayer-setTextureView directly in Android Studio (with no Unity) the rendering is updated automatically. But those functions are copy from the repo I mentioned before.

```C#
...
    void Start()
    {
        for (int i = 0; i < samples.Count; i++)
        {
            stringList.Add("""");
        }

        try
        {
            samples[0].text = stringList[0] = getDebugLog();
            samples[1].text = stringList[1] = ""TEXTURE: "" + CreateTextureAndPassToPlugin();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

        StartCoroutine(nameof(CallPluginAtEndOfFrames));
    }
...

    private IEnumerator CallPluginAtEndOfFrames()
    {
        while (true)
        {
            // Wait until all frame rendering is done
            yield return new WaitForEndOfFrame();

            // Issue a plugin event with arbitrary integer identifier.
            // The plugin can distinguish between different
            // things it needs to do based on this ID.
            // For our simple plugin, it does not matter which ID we pass here.
            GL.IssuePluginEvent(updateTexture(), 1);

            // skip one frame
            yield return new WaitForEndOfFrame();
        }
    }
...

    public void InitExoPlayer()
    {
        if (!initExoButton.enabled)
            return;

        // ExoPlayer init
        createUnityPlayer(uri, playing, enableRendering);
        ...
    }
... 

    private bool CreateTextureAndPassToPlugin()
    {
        Texture2D tex = new Texture2D(960, 640, TextureFormat.RGBA32, false);
        // Set point filtering just so we can see the pixels clearly
        tex.filterMode = FilterMode.Point;
        // Call Apply() so it's actually uploaded to the GPU
        tex.Apply();

        //displayMaterial.mainTexture = tex;
        displayRawImage.texture = tex;

        return setTextureFromUnity(tex.GetNativeTexturePtr());
    }

...
```

**JNI code**
The pointer of the Texture2D is saved into **g_TexturePointer**, so then I can use it in different functions. At the beginning I was using it as the repo uses it, but now I'm using it to initialize ExoPlayer with it, because I use that pointer to create a **SurfaceTexture** and then a **TextureView**.

```C++
...
extern ""C"" void UNITY_INTERFACE_EXPORT UNITY_INTERFACE_API
createUnityPlayer(char *uri, bool isAutoPlay, bool isRendering) {
    JNIEnv *jni_env_local = getJNIEnv();
    if (!jni_env_local || !EXO_createUnityPlayer) {
        releaseJNIEnv();
        return;
    }

    jstring sUri = jni_env_local->NewStringUTF(uri);
    if (g_TexturePointer) {
        GLuint gltex = (GLuint) (size_t) (g_TexturePointer);
        jni_env_local->CallVoidMethod(exoBridgeObject, EXO_createUnityPlayer,
                                      sUri, isAutoPlay, isRendering, (int) gltex);
    } else {
        jni_env_local->CallVoidMethod(exoBridgeObject, EXO_createUnityPlayer,
                                      sUri, isAutoPlay, isRendering, -1);
    }
}
...
static void UNITY_INTERFACE_API OnRenderEvent(int eventID) {
    JNIEnv *jni_env_local = getJNIEnv();
    if (!jni_env_local || !EXO_updateTexture || !g_TexturePointer) {
        releaseJNIEnv();
        return;
    }
    GLuint gltex = (GLuint) (size_t) (g_TexturePointer);
    jni_env_local->CallVoidMethod(exoBridgeObject, EXO_updateTexture, (int) gltex);
    releaseJNIEnv();
}

extern ""C"" UnityRenderingEvent UNITY_INTERFACE_EXPORT UNITY_INTERFACE_API
updateTexture() {
    return OnRenderEvent;
}
...
```

**ExoActivity.java**
I'm creating a new Activity which extends from UnityPlayerActivity. The **updateTexture function** is used to reproduce the steps from the repo, but as I said before I think this code is not relevant right now. Inside the **createUnityPlayer function** it is called **prepareExoRender function** in order to set-up the ExoPlayer's TextureView using the pointer of the Texture2D from Unity.

```Java
...
    public void createUnityPlayer(String uri, boolean isAutoPlay,
                                  boolean isRendering, int texturePointer) {
        ...
        prepareExoRender(texturePointer);
        ...
    }
...
    TextureView _exoView;
    SurfaceTexture _exoTex;
    /**
     *
     */
    private void prepareExoRender(int texturePointer) {
        ...
        try {
            _exoView = new TextureView(this);
            _exoTex = new SurfaceTexture(texturePointer);
            _exoView.setSurfaceTexture(_exoTex);

            _exoPlayer.prepareUnityView(_exoView);
            _debugLog = ""SUCCESS-TEXTURE_VIEW"";
        } catch (Exception e) {
            _debugLog = ""- "" + e.getMessage();
        }
    }
...
    private void updateTexture(int texturePointer) {
        if (!_isRendering)
            return;

        int[] imageBuffer = new int[0];

        if (_conversionScript != null) {
            imageBuffer = _conversionScript.getOutputBuffer();
        }

        if (imageBuffer.length > 1) {
            GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, texturePointer);

            GLES20.glTexSubImage2D(GLES20.GL_TEXTURE_2D, 0, 0, 0, _previewSize.getWidth(),
                    _previewSize.getHeight(), GLES20.GL_RGBA, GLES20.GL_UNSIGNED_BYTE,
                    IntBuffer.wrap(imageBuffer));
        }
        _exoTex.updateTexImage();
    }
...
```

**ExoClass.java**
Class which contains all the information related with ExoPlayer, basically the instance and related.

```Java
...
    public void prepareUnityView(TextureView view) {
        if (view == null || _player == null) {
            _result = ""NON-SURFACE-CREATED"";
            return;
        }
        try {
            _result = ""SET_VIDEO_SURFACE"";
            _player.setVideoTextureView(view);
            _result = ""SUCCESS - VIEW"";
        } catch (Exception e) {
            _result += ""- "" + e.getMessage();
        }
    }
...
```
As I tested in an raw-AndroidStudio project, if I create a TextureView and then I do the following:
```
TextureView playerView = findViewById(R.id.textureView);
        videoPlayer.setPlayerDefaultView(playerView);
        videoPlayer.prepareVideoPlayer(""https://storage.googleapis.com/wvmedia/clear/h264/tears/tears.mpd"");
        videoPlayer.startPlayback();
```
the player will be rendered automatically every frame.

How could I create a TextureView correctly?
Is there other ways to do this?",['question'],['andrewlewis'],,2
10914,Some devices not able to play EAC3 audio with external speakers,closed,2023-01-10 06:14:29,2023-04-15 01:05:09,2023-02-13 02:05:55,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue


![IMG_20230110_113640_2](https://user-images.githubusercontent.com/78247191/211475000-aaf5226e-d293-491a-9262-ca6a7d49fd91.jpg)

External speakers: Model - SA-WS500RF



### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

1. Launch ExoPlayer demo app
2. Play any content.

### Expected result

Should be audible when using external speakers all the time.

### Actual result

Content is audible using external speakers only on first playback after device start, all subsequent playback do not have audio output through external speakers.

### Media

Will send to dev.exoplayer@gmail.com 

### Bug Report

- [x] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['closed-by-bot'],['christosts'],,3
10912,ExoPlayer IMA extension for SSAI DASH Live stream.,open,2023-01-09 14:28:26,2023-06-01 17:51:19,,"According to https://developers.google.com/interactive-media-ads/docs/sdks/android/dai/exoplayer-extension I should be able to do this:

```
// Build an IMA SSAI media item to prepare the player with.
Uri ssaiLiveUri =
    new ImaServerSideAdInsertionUriBuilder()
        .setAssetKey(SAMPLE_ASSET_KEY)
        .setFormat(CONTENT_TYPE_HLS) // Use CONTENT_TYPE_DASH for dash streams.
        .build();
```

but with CONTENT_TYPE_DASH  instead of CONTENT_TYPE_HLS

When we try the setup as above we get IllegalStateException and upon further investigation we can trace the source of this exception to ImaServerSideAdInsertionUriBuilder.createStreamRequest(...) call. 

```
checkState(
    streamRequest.getFormat() != StreamFormat.DASH
        || TextUtils.isEmpty(streamRequest.getAssetKey()),
    ""DASH live streams are not supported yet."");
```

We're using ExoPlayer version 2.18.2 and wondering when will you support DASH format for Live when using IMA SSAI?",['enhancement'],['marcbaechinger'],,10
10911,Expect exoplayer could continue to play although the meta of video is invalid.,closed,2023-01-09 06:40:30,2023-05-10 01:05:34,2023-03-10 11:14:00,"### [REQUIRED] Use case description
Some videos have the invalid meta block, for example:
![image](https://user-images.githubusercontent.com/9456005/211250147-21a425ad-338b-4619-81e0-5c1e1edb189d.png)
this video is only 5MB. The Audio and Video trackers are valid.

Exoplayer can't play this video, it would throw `InvalidResponseCodeException: Response Code 416`. However, chrome, desktop and ffplay can play the video. I'm not good at media development, and for the protection of user privacy, I can't provide the video or other detailed message. 

### Proposed solution
Is it possible that skip the throw-exception step that read and parse the unnecessary data, so that exoplayer can continue to read and parse the next data, finally play the video successfully.

#3123
","['enhancement', 'bad media']",['rohitjoins'],,6
10910,Unable to play H264 50 tps Video,open,2023-01-09 02:58:19,2023-01-29 15:33:08,,"I am trying to play a HLS manifest live stream which is playable in VLC for Android. Its also playable in browser with just hls.js, also playable with ffplay as well.
Stream audio is MPEG-L2 and Video is h264. Attached here a sample ts segment for inspection.
[53-05280.zip](https://github.com/google/ExoPlayer/files/10370118/53-05280.zip)

### FFMPEG probe: 
Program 0
    Metadata:
      variant_bitrate : 4030000
    Stream #0:0: Video: h264 (Main) ([27][0][0][0] / 0x001B), yuv420p(tv, bt709), 1920x1080 [SAR 1:1 DAR 16:9], 50 fps, 50 tbr, 90k tbn, 50 tbc
    Metadata:
      variant_bitrate : 4030000
    Stream #0:1: Audio: mp2 ([4][0][0][0] / 0x0004), 48000 Hz, stereo, s16p, 96 kb/s
    Metadata:
      variant_bitrate : 4030000


Now, I am trying to play same HLS playlist with exoplayer demo.
Exoplayer shows a black screen without any audio for the same stream.
If I select only the audio I can hear audio just fine.
I even tried with the NDK compiled FFMPEG extensions even though its just for audio and audio is playing fine.
With extension decoders preferred it behaves exactly same.

Exoplayer does not give an error and no error logs etc.

I am not sure if I am missing any special configuration as audio and video codecs seem all supported.

If anyone interested I can generate a time window valid HLS stream url for testing.
Thanks a ton for the devs of this project.
","['question', 'needs triage']",['rohitjoins'],,4
10909,Play some hls videos frozen in the first frame,closed,2023-01-09 02:05:52,2023-06-11 01:05:13,2023-04-11 01:06:12,"Only the first frame can be displayed and then stopped
my video url:https://v-st1-http-play.cmcconenet.com:8443/live/live_100757778_1/index.m3u8?token=eyJrZXkiOjI4MzQzLCJzaWduIjoiQkJocmZzdnJtaFlvbmctWDFSLTJWSTRXRHA4MU0yajJzcEdKREJ4SjhCZTVWRjdHT29KandWODgxZ2xpRVV2RUppMFlpZHdyXzQwTXkybkFyb2x1RUVsVVdacDJEOUphRHE5WkpBUVN3QVZQaE5tbjUzay1KeXFhbnhLR0N1ZnIyWEplcmNtXzBBMWFheGJocWRqdDBRd1dueUw4Y2xJYkdqd24waHU1VGFGSXAzMkV1LWJGUExqM1pHRDk0LXpYVzR2Sl9xMkVqZU40cjBVS1phVk9hdyJ9
log:
2023-01-09 09:54:27.416 26464-27747/com.heking.zplayer.demo I/CCodecConfig: query failed after returning 16 values (BAD_INDEX)
2023-01-09 09:54:27.416 26464-27747/com.heking.zplayer.demo D/CCodecConfig: c2 config is Dict {
      c2::u32 coded.aac-packaging.value = 0
      c2::u32 coded.bitrate.value = 64000
      c2::u32 coded.pl.level = 0
      c2::u32 coded.pl.profile = 8192
      c2::float coding.drc.attenuation-factor.value = 1
      c2::float coding.drc.boost-factor.value = 1
      c2::i32 coding.drc.compression-mode.value = 3
      c2::i32 coding.drc.effect-type.value = 3
      c2::float coding.drc.encoded-level.value = 0.25
      c2::float coding.drc.reference-level.value = -16
      c2::u32 input.buffers.max-size.value = 8192
      c2::u32 input.delay.value = 0
      string input.media-type.value = ""audio/mp4a-latm""
      c2::u32 output.delay.value = 2
      string output.media-type.value = ""audio/raw""
      c2::u32 raw.channel-count.value = 1
      c2::u32 raw.sample-rate.value = 44100
    }
2023-01-09 09:54:27.418 26464-27747/com.heking.zplayer.demo D/CCodecConfig: c2 config is Dict {
      c2::u32 coded.aac-packaging.value = 0
      c2::u32 coded.bitrate.value = 64000
      c2::u32 coded.pl.level = 0
      c2::u32 coded.pl.profile = 8192
      c2::float coding.drc.attenuation-factor.value = 1
      c2::float coding.drc.boost-factor.value = 1
      c2::i32 coding.drc.compression-mode.value = 3
      c2::i32 coding.drc.effect-type.value = 3
      c2::float coding.drc.encoded-level.value = 0.25
      c2::float coding.drc.reference-level.value = -16
      c2::u32 input.buffers.max-size.value = 8192
      c2::u32 input.delay.value = 0
      string input.media-type.value = ""audio/mp4a-latm""
      c2::u32 output.delay.value = 2
      string output.media-type.value = ""audio/raw""
      c2::u32 raw.channel-count.value = 1
      c2::u32 raw.sample-rate.value = 8000
    }
2023-01-09 09:54:27.418 26464-27747/com.heking.zplayer.demo W/Codec2Client: query -- param skipped: index = 1107298332.
2023-01-09 09:54:27.418 26464-27747/com.heking.zplayer.demo D/CCodec: setup formats input: AMessage(what = 0x00000000) = {
      int32_t channel-count = 1
      int32_t level = 0
      int32_t max-input-size = 8192
      string mime = ""audio/mp4a-latm""
      int32_t profile = 2
      int32_t sample-rate = 8000
    } and output: AMessage(what = 0x00000000) = {
      int32_t channel-count = 1
      string mime = ""audio/raw""
      int32_t sample-rate = 8000
    }
","['question', 'closed-by-bot']",['tianyif'],,10
10908,Award-winning Exoplayer and unity ads video.,closed,2023-01-07 09:48:37,2023-03-12 02:05:14,2023-01-10 20:21:44,"Guys, I added the unity ads code in my exoplayer player file and the ad runs well, the problem is that after closing the ad, the movie does not play. If I remove the unity ads ad code, the movie plays normally. Could someone help me to run the normal movie after closing the ad?
Follow the video showing.
Thank you all.
https://drive.google.com/file/d/1KSuq5rACBxlCRnRp9ca_XVTd45h9V7KD/view?usp=share_link
This is the code for PlayerActivity.java

```
package com.cineday.box.view;

import static android.view.View.VISIBLE;

import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.media.session.MediaSession;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.PowerManager;
import android.util.Log;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;


import com.cineday.box.AppConfig;
import com.google.android.exoplayer2.C;
import com.google.android.exoplayer2.ExoPlayerFactory;
import com.google.android.exoplayer2.Format;
import com.google.android.exoplayer2.Player;
import com.google.android.exoplayer2.SimpleExoPlayer;
import com.google.android.exoplayer2.ext.rtmp.RtmpDataSourceFactory;
import com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
import com.google.android.exoplayer2.extractor.ExtractorsFactory;
import com.google.android.exoplayer2.source.ExtractorMediaSource;
import com.google.android.exoplayer2.source.MediaSource;
import com.google.android.exoplayer2.source.MergingMediaSource;
import com.google.android.exoplayer2.source.SingleSampleMediaSource;
import com.google.android.exoplayer2.source.hls.HlsMediaSource;
import com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;
import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;
import com.google.android.exoplayer2.trackselection.TrackSelection;
import com.google.android.exoplayer2.trackselection.TrackSelector;
import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
import com.google.android.exoplayer2.ui.PlayerControlView;
import com.google.android.exoplayer2.ui.PlayerView;
import com.google.android.exoplayer2.upstream.BandwidthMeter;
import com.google.android.exoplayer2.upstream.DataSource;
import com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
import com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;
import com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory;
import com.google.android.exoplayer2.util.MimeTypes;
import com.google.android.exoplayer2.util.Util;
import com.cineday.box.R;
import com.cineday.box.database.DatabaseHelper;
import com.cineday.box.model.PlaybackModel;
import com.cineday.box.model.Video;
import com.cineday.box.model.movieDetails.Subtitle;
import com.cineday.box.utils.ToastMsg;
import com.cineday.box.view.adapter.ServerAdapter;
import com.cineday.box.view.adapter.SubtitleListAdapter;
import com.squareup.picasso.Picasso;
import com.unity3d.ads.IUnityAdsInitializationListener;
import com.unity3d.ads.IUnityAdsLoadListener;
import com.unity3d.ads.IUnityAdsShowListener;
import com.unity3d.ads.UnityAds;
import com.unity3d.ads.UnityAdsShowOptions;
import android.app.Activity;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.TimeUnit;

public class PlayerActivity extends Activity implements IUnityAdsInitializationListener {
    Context context = this;
    private static final String TAG = ""PlayerActivity"";
    private static final String CLASS_NAME = ""com.cineday.box.ui.activity.PlayerActivity"";
    private PlayerView exoPlayerView;
    private SimpleExoPlayer player;
    private RelativeLayout rootLayout;
    private MediaSource mediaSource;
    private boolean isPlaying;
    private List<Video> videos = new ArrayList<>();
    private Video video = null;
    private String url = """";
    private String videoType = """";
    private String category = """";
    private int visible;
    private ImageButton serverButton, fastForwardButton, subtitleButton;
    private TextView movieTitleTV, movieDescriptionTV;
    private ImageView posterImageView, posterImageViewForTV;
    private RelativeLayout seekBarLayout;
    private TextView liveTvTextInController;
    private ProgressBar progressBar;
    private PowerManager.WakeLock wakeLock;
    private MediaSession session;

    private long mChannelId;
    private long mStartingPosition;
    private PlaybackModel model;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_player);

        { //unityads
            IUnityAdsLoadListener loadListener = new IUnityAdsLoadListener() {
                @Override
                public void onUnityAdsAdLoaded(String placementId) {
                    UnityAds.show(PlayerActivity.this, AppConfig.Unity_rewardedVideo_ID, new UnityAdsShowOptions(), new IUnityAdsShowListener() {
                        @Override
                        public void onUnityAdsShowFailure(String placementId, UnityAds.UnityAdsShowError error, String message) {
                            Log.e(""UnityAdsExample"", ""Unity Ads failed to load ad for "" + placementId + "" with error: ["" + error + ""] "" + message);
                        }


                        @Override
                        public void onUnityAdsShowStart(String placementId) {
                            Log.v(""UnityAdsExample"", ""onUnityAdsShowStart: "" + placementId);
                        }

                        @Override
                        public void onUnityAdsShowClick(String placementId) {
                            Log.v(""UnityAdsExample"", ""onUnityAdsShowClick: "" + placementId);
                        }

                        @Override
                        public void onUnityAdsShowComplete(String placementId, UnityAds.UnityAdsShowCompletionState state) {
                            Log.v(""UnityAdsExample"", ""onUnityAdsShowComplete: "" + placementId);
                            if (state.equals(UnityAds.UnityAdsShowCompletionState.COMPLETED)) {
                                // Reward the user for watching the ad to completion
                            } else {
                                // Do not reward the user for skipping the ad
                            }
                        }
                    });
                }

                @Override
                public void onUnityAdsFailedToLoad(String placementId, UnityAds.UnityAdsLoadError error, String message) {


                }
            };
            UnityAds.initialize (this, AppConfig.Unity_Game_ID, AppConfig.unity_ad_testMode);
            UnityAds.load(AppConfig.Unity_rewardedVideo_ID, loadListener);
        }

        mChannelId = getIntent().getLongExtra(VideoPlaybackActivity.EXTRA_CHANNEL_ID, -1L);
        mStartingPosition = getIntent().getLongExtra(VideoPlaybackActivity.EXTRA_POSITION, -1L);

        model = (PlaybackModel) getIntent().getSerializableExtra(VideoPlaybackActivity.EXTRA_VIDEO);


        assert model != null;
        url = model.getVideoUrl();
        videoType = model.getVideoType();
        category = model.getCategory();
        if (model.getVideo() != null)
            video = model.getVideo();
        if (model.getCategory().equals(""movie"") && mChannelId > -1L && model.getIsPaid().equals(""1"")) {
            //Paid Content from Channel
            //check user has subscription or not
            //if not, send user to VideoDetailsActivity
            DatabaseHelper db = new DatabaseHelper(PlayerActivity.this);
            final String status = db.getActiveStatusData() != null ? db.getActiveStatusData().getStatus() : ""inactive"";
            if (!status.equals(""active"")) {
                Intent intent = new Intent(PlayerActivity.this, VideoDetailsActivity.class);
                intent.putExtra(""type"", model.getCategory());
                intent.putExtra(""id"", model.getMovieId());
                intent.putExtra(""thumbImage"", model.getCardImageUrl());
                startActivity(intent, null);
                finish();
            }
        }

        intiViews();
        initVideoPlayer(url, videoType);

    }

    private void intiViews() {
        progressBar = findViewById(R.id.progress_bar);
        exoPlayerView = findViewById(R.id.player_view);
        rootLayout = findViewById(R.id.root_layout);
        movieTitleTV = findViewById(R.id.movie_title);
        movieDescriptionTV = findViewById(R.id.movie_description);
        posterImageView = findViewById(R.id.poster_image_view);
        posterImageViewForTV = findViewById(R.id.poster_image_view_for_tv);
        serverButton = findViewById(R.id.img_server);
        subtitleButton = findViewById(R.id.img_subtitle);
        fastForwardButton = findViewById(R.id.exo_ffwd);
        liveTvTextInController = findViewById(R.id.live_tv);
        seekBarLayout = findViewById(R.id.seekbar_layout);
        if (category.equalsIgnoreCase(""tv"")) {
            serverButton.setVisibility(View.GONE);
            subtitleButton.setVisibility(View.GONE);
            //seekBarLayout.setVisibility(View.GONE);
            fastForwardButton.setVisibility(View.GONE);
            liveTvTextInController.setVisibility(View.VISIBLE);
            posterImageView.setVisibility(View.GONE);
            posterImageViewForTV.setVisibility(VISIBLE);
            seekBarLayout.setVisibility(View.GONE);
        }

        if (category.equalsIgnoreCase(""tvseries"")) {
            serverButton.setVisibility(View.GONE);
            //hide subtitle button if there is no subtitle
            if (video != null) {
                if (video.getSubtitle().isEmpty()) {
                    subtitleButton.setVisibility(View.GONE);
                }
            } else {
                subtitleButton.setVisibility(View.GONE);
            }
        }

        if (category.equalsIgnoreCase(""movie"")) {
            if (model.getVideoList() != null)
                videos.clear();
            videos = model.getVideoList();
            //hide subtitle button if there is no subtitle
            if (video != null) {
                if (video.getSubtitle().isEmpty()) {
                    subtitleButton.setVisibility(View.GONE);
                }
            } else {
                subtitleButton.setVisibility(View.GONE);
            }
            if (videos != null) {
                if (videos.size() < 1)
                    serverButton.setVisibility(View.GONE);

            }

        }

    }

    @Override
    protected void onStart() {
        super.onStart();
        PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
        wakeLock = pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK | PowerManager.ON_AFTER_RELEASE, ""My Tag:"");

        subtitleButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                //open subtitle dialog
                openSubtitleDialog();
            }
        });

        serverButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //open server dialog
                openServerDialog(videos);
            }
        });


        //set title, description and poster in controller layout
        movieTitleTV.setText(model.getTitle());
        movieDescriptionTV.setText(model.getDescription());
        if (category.equalsIgnoreCase(""tv"")) {
            Picasso.get()
                    .load(model.getCardImageUrl())
                    .placeholder(R.drawable.poster_placeholder)
                    .centerCrop()
                    .resize(200, 120)
                    .error(R.drawable.poster_placeholder)
                    .into(posterImageViewForTV);
        }else {
            Picasso.get()
                    .load(model.getCardImageUrl())
                    .placeholder(R.drawable.poster_placeholder)
                    .centerCrop()
                    .resize(120, 200)
                    .error(R.drawable.poster_placeholder)
                    .into(posterImageView);
        }
    }

    @Override
    protected void onUserLeaveHint() {
        Log.e(""RemoteKey"", ""DPAD_HOME"");
        /** Use pressed home button **/
        //time to set media session active
        super.onUserLeaveHint();
    }

    boolean doubleBackToExitPressedOnce = false;

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {

        switch (keyCode) {
            case KeyEvent.KEYCODE_MOVE_HOME:

                break;
            case KeyEvent.KEYCODE_DPAD_UP:
                if (!exoPlayerView.isControllerVisible()) {
                    exoPlayerView.showController();
                }
                break;
            case KeyEvent.KEYCODE_DPAD_DOWN:
                Log.e(""RemoteKey"", ""DPAD_DOWN"");
                if (!exoPlayerView.isControllerVisible()) {
                    exoPlayerView.showController();
                }
                break;
            case KeyEvent.KEYCODE_DPAD_RIGHT:
                Log.e(""RemoteKey"", ""DPAD_RIGHT"");
                if (!exoPlayerView.isControllerVisible()) {
                    exoPlayerView.showController();
                }
                break;
            case KeyEvent.KEYCODE_DPAD_LEFT:
                Log.e(""RemoteKey"", ""DPAD_LEFT"");
                if (!exoPlayerView.isControllerVisible()) {
                    exoPlayerView.showController();
                }
                break;
            case KeyEvent.KEYCODE_DPAD_CENTER:
                Log.e(""RemoteKey"", ""DPAD_CENTER"");
                if (!exoPlayerView.isControllerVisible()) {
                    exoPlayerView.showController();
                }
                break;
            case KeyEvent.KEYCODE_BACK:
                Log.e(""RemoteKey"", ""DPAD_BACK"");
                if (exoPlayerView.isControllerVisible()) {
                    exoPlayerView.hideController();
                    finish();
                }else{
                    exoPlayerView.showController();
                }
//                else {
//                    if (doubleBackToExitPressedOnce) {
//                        releasePlayer();
//                        //mediaSessionHelper.stopMediaSession();
//                        finish();
//                    } else {
//                        handleBackPress();
//                    }
//                }

                break;
            case KeyEvent.KEYCODE_ESCAPE:
                Log.e(""RemoteKey"", ""DPAD_ESCAPE"");
               /* if (!exoPlayerView.isControllerVisible()){
                    exoPlayerView.showController();
                }else {
                    releasePlayer();
                    finish();
                }*/
                break;
        }
        return false;
    }


    private void handleBackPress() {
        this.doubleBackToExitPressedOnce = true;
        //Toast.makeText(this, ""Please click BACK again to exit."", Toast.LENGTH_SHORT).show();
        new ToastMsg(PlayerActivity.this).toastIconSuccess(""Clique em VOLTAR novamente para sair."");
        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                doubleBackToExitPressedOnce = false;
            }
        }, 2000);

    }

    private void openServerDialog(List<Video> videos) {
        if (videos != null) {
            List<Video> videoList = new ArrayList<>();
            videoList.clear();

            for (Video video : videos) {
                if (!video.getFileType().equalsIgnoreCase(""embed"")) {
                    videoList.add(video);
                }
            }

            AlertDialog.Builder builder = new AlertDialog.Builder(PlayerActivity.this);
            View view = LayoutInflater.from(PlayerActivity.this).inflate(R.layout.layout_server_tv, null);
            RecyclerView serverRv = view.findViewById(R.id.serverRv);
            ServerAdapter serverAdapter = new ServerAdapter(PlayerActivity.this, videoList, ""movie"");
            serverRv.setLayoutManager(new LinearLayoutManager(PlayerActivity.this));
            serverRv.setHasFixedSize(true);
            serverRv.setAdapter(serverAdapter);

            Button closeBt = view.findViewById(R.id.close_bt);

            builder.setView(view);

            final AlertDialog dialog = builder.create();
            dialog.show();

            closeBt.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    dialog.dismiss();
                }
            });

            final ServerAdapter.OriginalViewHolder[] viewHolder = {null};
            serverAdapter.setOnItemClickListener(new ServerAdapter.OnItemClickListener() {

                @Override
                public void onItemClick(View view, Video obj, int position, ServerAdapter.OriginalViewHolder holder) {
                    Intent playerIntent = new Intent(PlayerActivity.this, PlayerActivity.class);
                    PlaybackModel video = new PlaybackModel();
                    video.setId(model.getId());
                    video.setTitle(model.getTitle());
                    video.setDescription(model.getDescription());
                    video.setCategory(""movie"");
                    video.setVideo(obj);
                    video.setVideoList(model.getVideoList());
                    video.setVideoUrl(obj.getFileUrl());
                    video.setVideoType(obj.getFileType());
                    video.setBgImageUrl(model.getBgImageUrl());
                    video.setCardImageUrl(model.getCardImageUrl());
                    video.setIsPaid(model.getIsPaid());

                    playerIntent.putExtra(VideoPlaybackActivity.EXTRA_VIDEO, video);

                    startActivity(playerIntent);
                    dialog.dismiss();
                    finish();
                }
            });
        } else {
            new ToastMsg(this).toastIconError(getString(R.string.no_other_server_found));
        }
    }

    private void openSubtitleDialog() {
        if (video != null) {
            if (!video.getSubtitle().isEmpty()) {
                AlertDialog.Builder builder = new AlertDialog.Builder(PlayerActivity.this);
                View view = LayoutInflater.from(PlayerActivity.this).inflate(R.layout.layout_subtitle_dialog, null);
                RecyclerView serverRv = view.findViewById(R.id.serverRv);
                SubtitleListAdapter adapter = new SubtitleListAdapter(PlayerActivity.this, video.getSubtitle());
                serverRv.setLayoutManager(new LinearLayoutManager(PlayerActivity.this));
                serverRv.setHasFixedSize(true);
                serverRv.setAdapter(adapter);

                Button closeBt = view.findViewById(R.id.close_bt);

                builder.setView(view);
                final AlertDialog dialog = builder.create();
                dialog.show();

                closeBt.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        dialog.dismiss();
                    }
                });
                //click event
                adapter.setListener(new SubtitleListAdapter.OnSubtitleItemClickListener() {
                    @Override
                    public void onSubtitleItemClick(View view, Subtitle subtitle, int position, SubtitleListAdapter.SubtitleViewHolder holder) {
                        setSelectedSubtitle(mediaSource, subtitle.getUrl());
                        dialog.dismiss();
                    }
                });

            } else {
                new ToastMsg(this).toastIconError(getResources().getString(R.string.no_subtitle_found));
            }
        } else {
            new ToastMsg(this).toastIconError(getResources().getString(R.string.no_subtitle_found));
        }
    }

    private void setSelectedSubtitle(com.google.android.exoplayer2.source.MediaSource mediaSource, String url) {
        MergingMediaSource mergedSource;
        if (url != null) {
            Uri subtitleUri = Uri.parse(url);

            Format subtitleFormat = Format.createTextSampleFormat(
                    null, // An identifier for the track. May be null.
                    MimeTypes.TEXT_VTT, // The mime type. Must be set correctly.
                    Format.NO_VALUE, // Selection flags for the track.
                    ""en""); // The subtitle language. May be null.

            DefaultDataSourceFactory dataSourceFactory = new DefaultDataSourceFactory(PlayerActivity.this,
                    Util.getUserAgent(PlayerActivity.this, CLASS_NAME), new DefaultBandwidthMeter());


            com.google.android.exoplayer2.source.MediaSource subtitleSource = new SingleSampleMediaSource
                    .Factory(dataSourceFactory)
                    .createMediaSource(subtitleUri, subtitleFormat, C.TIME_UNSET);


            mergedSource = new MergingMediaSource(mediaSource, subtitleSource);
            player.prepare(mergedSource, false, false);
            player.setPlayWhenReady(true);
            //resumePlayer();

        } else {
            Toast.makeText(PlayerActivity.this, ""não há legenda"", Toast.LENGTH_SHORT).show();
        }
    }

    public void initVideoPlayer(String url, String type) {
        if (player != null) {
            player.release();
        }

        progressBar.setVisibility(VISIBLE);
        BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();
        TrackSelection.Factory videoTrackSelectionFactory = new
                AdaptiveTrackSelection.Factory(bandwidthMeter);

        TrackSelector trackSelector = new
                DefaultTrackSelector(videoTrackSelectionFactory);

        player = ExoPlayerFactory.newSimpleInstance((Context) PlayerActivity.this, trackSelector);
        exoPlayerView.setPlayer(player);
        // below 2 lines will make screen size to fit
        exoPlayerView.setResizeMode(AspectRatioFrameLayout.RESIZE_MODE_FILL);
        player.setVideoScalingMode(C.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING);
        exoPlayerView.setControllerShowTimeoutMs(5000);
        player.setPlayWhenReady(true);

        Uri uri = Uri.parse(url);

        switch (type) {
            case ""hls"":
                mediaSource = hlsMediaSource(uri, PlayerActivity.this);
                break;
           /* case ""youtube"":
                extractYoutubeUrl(url, PlayerActivity.this, 18);
                break;
            case ""youtube-live"":
                extractYoutubeUrl(url, PlayerActivity.this, 133);
                break;*/
            case ""rtmp"":
                mediaSource = rtmpMediaSource(uri);
                break;
            default:
                mediaSource = mediaSource(uri, PlayerActivity.this);
                break;
        }

        if (!type.contains(""youtube"")) {
            player.prepare(mediaSource, true, false);
            exoPlayerView.setPlayer(player);
            player.setPlayWhenReady(true);
        }

        seekToStartPosition();

        player.addListener(new Player.DefaultEventListener() {
            @Override
            public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {
                if (playWhenReady && playbackState == Player.STATE_READY) {
                    isPlaying = true;
                    progressBar.setVisibility(View.GONE);

                    //create media session
                    // mediaSessionHelper = new MediaSessionHelper(player, PlayerActivity.this, model, isPlaying);
                    // mediaSessionHelper.updateMetadata();
                    //mediaSessionHelper.updatePlaybackState();

                } else if (playbackState == Player.STATE_READY) {
                    isPlaying = false;
                    progressBar.setVisibility(View.GONE);
                    //add watch next card
                    long position = player.getCurrentPosition();
                    long duration = player.getDuration();
                    /*mediaSessionHelper.updateMetadata();
                    mediaSessionHelper.updatePlaybackState();*/

                } else if (playbackState == Player.STATE_BUFFERING) {
                    isPlaying = false;
                    progressBar.setVisibility(VISIBLE);
                    player.setPlayWhenReady(true);

                } else if (playbackState == Player.STATE_ENDED) {
                    //remove now playing card
                    //mediaSessionHelper.stopMediaSession();
                } else {
                    // player paused in any state
                    isPlaying = false;
                    progressBar.setVisibility(View.GONE);
                }
            }
        });

        exoPlayerView.setControllerVisibilityListener(new PlayerControlView.VisibilityListener() {
            @Override
            public void onVisibilityChange(int visibility) {
                visible = visibility;
            }
        });
    }

    private void seekToStartPosition() {
        // Skip ahead if given a starting position.
        if (mStartingPosition > -1L) {
            if (player.getPlayWhenReady()) {
                Log.d(""VideoFragment"", ""Is prepped, seeking to "" + mStartingPosition);
                player.seekTo(mStartingPosition);
            }
        }
    }


    private com.google.android.exoplayer2.source.MediaSource mp3MediaSource(Uri uri) {
        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(getApplicationContext(), ""Dalvik/2.1.0 (Linux; U; Android 7.1.2; ASUS_Z01QD Build/N2G48H)"");
        ExtractorsFactory extractorsFactory = new DefaultExtractorsFactory();
        Handler mainHandler = new Handler();
        return new ExtractorMediaSource(uri, dataSourceFactory, extractorsFactory, mainHandler, null);
    }

    private com.google.android.exoplayer2.source.MediaSource mediaSource(Uri uri, Context context) {
        return new ExtractorMediaSource.Factory(
                new DefaultHttpDataSourceFactory(""Dalvik/2.1.0 (Linux; U; Android 7.1.2; ASUS_Z01QD Build/N2G48H)"")).
                createMediaSource(uri);
    }

    private com.google.android.exoplayer2.source.MediaSource rtmpMediaSource(Uri uri) {
        com.google.android.exoplayer2.source.MediaSource videoSource = null;

        RtmpDataSourceFactory dataSourceFactory = new RtmpDataSourceFactory();
        videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)
                .createMediaSource(uri);

        return videoSource;
    }

   /* @SuppressLint(""StaticFieldLeak"")
    private void extractYoutubeUrl(String url, final Context context, final int tag) {

        new YouTubeExtractor(context) {
            @Override
            public void onExtractionComplete(SparseArray<YtFile> ytFiles, VideoMeta vMeta) {
                if (ytFiles != null) {
                    int itag = tag;
                    String dashUrl = ytFiles.get(itag).getUrl();

                    try {
                        com.google.android.exoplayer2.source.MediaSource source = mediaSource(Uri.parse(dashUrl), context);
                        player.prepare(source, true, false);
                        //player.setPlayWhenReady(false);
                        exoPlayerView.setPlayer(player);
                        player.setPlayWhenReady(true);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        }.extract(url, true, true);
    }*/

    private com.google.android.exoplayer2.source.MediaSource hlsMediaSource(Uri uri, Context context) {

        DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();
        DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(context,
                Util.getUserAgent(context, ""Dalvik/2.1.0 (Linux; U; Android 7.1.2; ASUS_Z01QD Build/N2G48H)""), bandwidthMeter);
        com.google.android.exoplayer2.source.MediaSource videoSource = new HlsMediaSource.Factory(dataSourceFactory)
                .createMediaSource(uri);

        return videoSource;
    }

    @Override
    public void onBackPressed() {
        if (visible == View.GONE) {
            exoPlayerView.showController();
        } else {
            releasePlayer();
            super.onBackPressed();
        }

    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        releasePlayer();
        if (wakeLock != null)
            wakeLock.release();
    }

    @Override
    protected void onPause() {
        super.onPause();
        releasePlayer();
    }

    @Override
    protected void onResume() {
        super.onResume();
        setVolumeControlStream(AudioManager.STREAM_MUSIC);
        wakeLock.acquire(10 * 60 * 1000L /*10 minutes*/);
    }

    private void releasePlayer() {
        if (player != null) {
            player.setPlayWhenReady(false);
            player.stop();
            player.release();
            player = null;
            exoPlayerView.setPlayer(null);
        }
    }

    @Override
    public void onInitializationComplete() {

    }

    @Override
    public void onInitializationFailed(UnityAds.UnityAdsInitializationError unityAdsInitializationError, String s) {

    }
}
```",[],['christosts'],,1
10907,Is it ok to use `runBlocking{}` on ExoPlayer's playback thread?,closed,2023-01-06 16:07:39,2023-03-26 01:05:17,2023-01-24 19:18:15,"Didn't get any answers to my [stackoverflow question](https://stackoverflow.com/q/75010016/535915) :disappointed:  so here goes again!

I need to make a network call just before playback (similar in part to [this issue](https://github.com/google/ExoPlayer/issues/8476)). In this case, the network result is also used to to build `AdsConfiguration` and `DrmConfiguration`, which are provided to the `MediaItem.Builder`.

The following code works fine, but I cannot find documentation that confirms it's ok!

```kotlin
override fun createMediaSource(mediaItem: MediaItem): MediaSource {
    val builder = mediaItem.buildUpon()

// Is it ok to use `runBlocking` here?
    val remoteData = runBlocking {
         fetchPlayableMedia()
    }

    remoteData?.let {
        builder.setUri(it.mediaUri)
            .setAdsConfiguration(it.toAdsConfiguration())
            .setDrmConfiguration(it.toDrmConfiguration())
    }

    return mediaSourceDelegate.createMediaSource(builder.build())
}
```

[MediaSource doc](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/source/MediaSource.html) says

    All methods are called on the player's internal playback thread

which is different from the [background thread](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/ExoPlayer.html).

I tried using a `ResolvingDataSource`, where documentation for `resolveDataSpec()` clearly mentions

    This method is allowed to block until the DataSpec has been resolved.

But `resolveDataSpec()` is called only after `createMediaSource(mediaItem)`, so it seems too late to set Ads/DRM configuration.

The `DataSourceFactory` does call `createDataSource()`, but I'm not sure if `httpDataSource.setRequestProperty()` can be used to configure Ads/DRM.

To put it differently: how can one do a network call on ExoPlayer's background thread, just before playback, and use the data to set Ads/DRM configuration?",['question'],['marcbaechinger'],,11
10906,DefaultHttpDataSource disconnects after 20sec on chromebook,closed,2023-01-06 09:25:11,2023-04-12 01:06:08,2023-02-10 02:06:22,"I have 2 HP Chromebooks X2-v1 & X2-v2, both disconnect after approx 15 seconds from my app's HTTP server. If I connect VLC or my app exoplayer on an android only tablet it works OK.

Has anyone experienced something similar?

Thanks","['question', 'closed-by-bot']",['christosts'],,6
10905,get the data of every frame played,closed,2023-01-06 02:50:20,2023-03-14 01:06:41,2023-01-12 13:43:19,"When I play MP4/HLS, I want to get the data of every frame played.  What should I do?",['question'],['christosts'],,1
10904,Subtitles don't disable after upgrading to 2.18.2 from 2.18.1,closed,2023-01-05 20:24:20,2023-04-11 01:05:57,2023-02-09 15:15:49,"After the upgrade I can no longer turn off subtitles, turning them on still works. The code snippet I use works to toggle the subtitles which has worked for several versions is 

```
        DefaultTrackSelector.Parameters parameters = trackSelector.getParameters();
        DefaultTrackSelector.Parameters.Builder builder = parameters.buildUpon();
        if (id.equals(""Disable""))
        {
            builder.clearOverridesOfType(C.TRACK_TYPE_TEXT);
            builder.setRendererDisabled(C.TRACK_TYPE_TEXT, true);
            trackSelector.setParameters(builder);
            enableSubtitle = false;
            return;
        } else if (id.equals(""Enable"")) {
            builder.clearOverridesOfType(C.TRACK_TYPE_TEXT);
            builder.setPreferredTextLanguage(Locale.getDefault().getLanguage());
            builder.setSelectUndeterminedTextLanguage(true);
            builder.setRendererDisabled(C.TRACK_TYPE_TEXT, false);
            trackSelector.setParameters(builder);
            enableSubtitle = true;
            return;
        }
```
The rendererIndex seen in  DefaultTrackSelector() is the same (3) and I do see rendererDisabledFlags toggle start at {3=true} go to {} and the back to {3=true}

 I do notice is that the debug EventLogger() messages don't trigger when I disable subtitles.  Is there something new I need to to do force this change to be triggered?

",['question'],['icbaker'],,3
10903,[demo app] Ongoing downloads not resumed after reboot,open,2023-01-05 07:10:53,2023-01-13 00:41:51,,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

I posted it here https://github.com/google/ExoPlayer/issues/8645#issuecomment-1369657451 after which,
I checked on your demo app RECEIVE_BOOT_COMPLETED  is not working/ once we restart mobile downloads wont resume.
In my app i noticed this issue (the downloads dont resume in it unless we open the app again)am using https://exoplayer.dev/downloading-media.html but still its not working on device reboot. Is there a way i could get logs when on action.BOOT_COMPLETED? could we get some logs or to test this?. Also i want to listen to this, show notification of download progress and check that iam connected to a specific server. I want to make sure with less user intervention once requested for download it should complete when connected.

### Devices that do not reproduce the issue

checked on OPPO A74 5G 
Model CPH2263.
Android 12

### Reproducible in the demo app?

Yes

### Reproduction steps

In demo app (com.google.android.exoplayer2.demo)
1. Download multiple files ->it will show download progress in notification.
2. restart mobile
3. download not restarted

### Expected result

the download should resume

### Actual result

no download progress notification displayed,
download not resumed

### Media

I cannot record it as it happening when mobile restarted.

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['wont fix: intended behavior'],['marcbaechinger'],,2
10902,Playing VAST ads with AdsLoader changes  player buttons' and random layouts' color theme from dark to day mode,closed,2023-01-04 13:44:13,2023-03-07 02:06:37,2023-01-05 17:22:58,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

* Pixel 6 running Android 13
* HTC One M9 running Android 7

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

No

### Reproduction steps

1. Implement Exoplayer with custom UI player
2. Implement client-side ads following steps from: https://exoplayer.dev/ad-insertion.html
3. Play video in activity/fragment

### Expected result

The media plays and the layout theme does not change

### Actual result

The fragment/activity theme changes from dark mode to Light mode on random layouts including text fields

In logcat this error occurs:

```
2023-01-04 18:38:38.398 22869-23003 JavaBinder              com.test.app.debug              E  !!! FAILED BINDER TRANSACTION !!!  (parcel size = 328)
2023-01-04 18:38:38.398 22869-23003 GmsClient               com.test.app.debug              W  IGmsServiceBroker.getService failed
                                                                                                    android.os.DeadObjectException: Transaction failed on small parcel; remote process probably died, but this could also be caused by running out of binder buffe
                                                                                                    	at android.os.BinderProxy.transactNative(Native Method)
                                                                                                    	at android.os.BinderProxy.transact(BinderProxy.java:584)
                                                                                                    	at WE.b(chromium-TrichromeWebViewGoogle6432.apk-stable-495157437:288)
                                                                                                    	at com.google.android.gms.common.internal.BaseGmsClient.p(chromium-TrichromeWebViewGoogle6432.apk-stable-495157437:53)
                                                                                                    	at BB.run(chromium-TrichromeWebViewGoogle6432.apk-stable-495157437:1849)
                                                                                                    	at android.os.Handler.handleCallback(Handler.java:942)
                                                                                                    	at android.os.Handler.dispatchMessage(Handler.java:99)
                                                                                                    	at Sp0.dispatchMessage(chromium-TrichromeWebViewGoogle6432.apk-stable-495157437:223)
                                                                                                    	at android.os.Looper.loopOnce(Looper.java:201)
                                                                                                    	at android.os.Looper.loop(Looper.java:288)
                                                                                                    	at android.os.HandlerThread.run(HandlerThread.java:67)
``` 

### Media

Sample tags from: 
https://developers.google.com/interactive-media-ads/docs/sdks/html5/client-side/tags

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['question'],['icbaker'],,4
10901,How can I rotate a video without using texture_view?,open,2023-01-03 23:29:43,2023-01-05 16:50:28,,"I found out today that `app:surface_type=""texture_view""` doesn't appear to work with HDR videos, well it works but the videos are pretty dark.  It is pretty easy to reproduce that issue, just add the `texture_view` attribute and play this video https://4kmedia.org/life-untouched-hdr-uhd-4k-demo/ on a CCwGTV. 

The issue is that now that I've removed `app:surface_type=""texture_view""`, video rotation doesn't work anymore. 

So how can I rotate a video if I want to also allow HDR videos?



",['question'],['claincly'],,4
10900,how i can set the startup bitrate in exo player?,closed,2023-01-03 14:29:50,2023-03-07 02:06:38,2023-01-05 15:59:17,how i can set the startup bitrate in exo player?,['question'],['tonihei'],,4
10899,Audio Sink Error when change bitrate,closed,2023-01-03 05:02:02,2023-06-11 01:05:14,2023-04-11 01:06:16,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Samsung A20s, Android Version 10

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

1. Play the Video
2. the video have multiple bitrates, and set auto bitrate
3. if network unstable and the bitrates change, the error Audio Sink Error will appear
4. com.google.android.exoplayer2.audio.AudioSink$UnexpectedDiscontinuityException: Unexpected audio track timestamp discontinuity: expected 1000097905661, got 1000091910995
5. video freeze but the audio is running

### Expected result

the video can play with audio or 
video and audio buffer first

### Actual result

Video freeze but audio running

### Media

![gambar](https://user-images.githubusercontent.com/29775844/210302439-1df10cb2-3d0e-41d7-a8aa-caf7205ac4c1.png)


### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['closed-by-bot'],['tianyif'],,7
10898,Low resolution on HD streams since v2.18.2,open,2023-01-02 17:21:38,2023-03-22 15:26:40,,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

* Pixel 2 emulator, Android 10
* Lenova Tablet Tab M10 FHD Plus, Android 10

### Devices that do not reproduce the issue

* Pixel 7, Android 13
* Fairphone 3, Android 11
* Fold-out emulator, Android 11
* Samsung S7, Android 8

### Reproducible in the demo app?

Yes

### Reproduction steps

Play back the German public broadcasting stream `https://mcdn.daserste.de/daserste/de/master.m3u8` with Exoplayer 2.18.2.

This issue does not occur with Exoplayer 2.18.1

### Expected result

Exoplayer should select the HD resolution

![android-11](https://user-images.githubusercontent.com/403202/210262173-5f8350bf-894b-488e-acfd-e9e5eb115a20.JPG)


### Actual result

Exoplayer does select a very low and blurry 480x270 resolution

![android-10](https://user-images.githubusercontent.com/403202/210262221-302bb56a-a6ac-4164-a3a8-5ed781f46baf.JPG)

This issue was first reported on the Zapp open source project: https://github.com/mediathekview/zapp/issues/346

### Media

https://mcdn.daserste.de/daserste/de/master.m3u8

### Bug Report

- [x] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug: device specific'],['microkatz'],,11
10897,Identify onPlaybackStatsReady callbacks for Ads playback,closed,2023-01-02 13:18:42,2023-03-09 02:06:13,2023-01-07 11:44:25,"As mentioned in docs for `PlaybackStatsListener`, `onPlaybackStatsReady` callback is called separately for main playback item and all of the inserted ads (e.g. pre-roll ads). Since `PlaybackStats` for ad playbacks are not important for me, I only want to log stats for the main media item. Is there a way to identify the type of media item for which the  `PlaybackStats` is prepared?",['question'],['tonihei'],,2
10896,How to signal that the activation status of an `AudioProcessor` has changed?,closed,2023-01-01 17:56:21,2023-03-07 02:06:39,2023-01-05 16:46:04,"As an optimization, I try to avoid ""no-op"" scenarios that would require an expensive copy in my `AudioProcessor` by overriding `isActive` and returning `false` if the `AudioProcessor` has nothing to do. The issue is that the activation status can change during playback, and I've recently realized that ExoPlayer is highly inconsistent in when it checks if the `AudioProcessor` is active. 

For example, if the `AudioProcessor` was *active*, then became *inactive*, and then became *active* again, ExoPlayer picks up on it immediately. However, if the `AudioProcessor` starts *inactive* and then becomes *active*, ExoPlayer does not pick up on it until the next `MediaItem` plays. This results in really in-explicable issues in my app.

Is there a way to signal ExoPlayer to always re-check my `AudioProcessor` when it's activation status changes? There should be some way to do it given that `SonicAudioProcessor` could feasibly change it's activation status during playback too. Without this, I'm stuck either with this inconsistent behavior or removing the `isActive` optimization entirely and doing a copy when there's nothing to do, neither of which are desirable in any capacity.

Any help here would be appreciated.",['question'],['tonihei'],,2
10895,Xiaomi Redmi 6A (cactus) - Decoder error playing H265 video,closed,2023-01-01 00:57:57,2023-04-12 01:06:09,2023-02-10 02:06:27,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

* Xiaomi Redmi 6A (M1804C3CG) 16GB (GSM Unlocked)
* 

### Devices that do not reproduce the issue

* Samsung Galaxy 22

### Reproducible in the demo app?

Yes

### Reproduction steps

Try to play the attached video

https://user-images.githubusercontent.com/1601858/210158446-ff6422ec-7d8d-4efe-85e1-cceac81b9d1f.mp4



### Expected result

Video plays

### Actual result

Decoder error 

### Media

See attached video above

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['question', 'closed-by-bot']",['christosts'],,5
10894,เพิ่มความคมชัดของขนาดภาพ,closed,2022-12-31 18:22:30,2023-03-13 01:05:44,2023-01-11 11:25:00,"Before filing a feature request:
-----------------------
- Search existing open issues, specifically with the label ‘enhancement’:
  https://github.com/google/ExoPlayer/labels/enhancement
- Search existing pull requests: https://github.com/google/ExoPlayer/pulls

When filing a feature request:
-----------------------
Replace the content in the sections below.

### [REQUIRED] Use case description
Describe the use case or problem you are trying to solve in detail. If there are
any standards or specifications involved, please provide the relevant details.

### Proposed solution
A clear and concise description of your proposed solution, if you have one.

### Alternatives considered
A clear and concise description of any alternative solutions you considered,
if applicable.
",['enhancement'],['marcbaechinger'],,1
10893,Creating a media source ,closed,2022-12-30 18:37:50,2023-03-28 01:06:12,2023-01-26 14:42:11,"i'm following this tutorial on youtube and i'm using exoPlayer with Kotlin to play audio from firebase storage
-------------------------


the probleme is when i got to a part to creata media source 
the youtuber got a Uri option but i end up with MediaDataCompat instead 

here my full class to better reading 

thank you for any contrbution

`class FirebaseAudioSource
    @Inject constructor(
        private val audioDatabase: AudioDatabase
    ){
    //audiobook metadata holder
    var audioBooks = emptyList<MediaMetadataCompat>()


    //function to get audioBooks metadata
    suspend fun fetchMediaData() = withContext(Dispatchers.IO){
        state = STATE_INITIALIZING
        val allAudioBooks = audioDatabase.getAllBooks()
        audioBooks = allAudioBooks.map {
           MediaMetadataCompat.Builder()
                .putString(METADATA_KEY_ARTIST,it.narrator)
                .putString(METADATA_KEY_MEDIA_ID,it.bookId)
                .putString(METADATA_KEY_TITLE,it.title)
                .putString(METADATA_KEY_DISPLAY_ICON_URI,it.bookCover)
                .putString(METADATA_KEY_ALBUM_ART_URI,it.bookCover)
                .putString(METADATA_KEY_WRITER,it.writer)
                .putString(METADATA_KEY_MEDIA_URI,it.bookUrl)
                .putString(METADATA_KEY_RATING,it.bookRating.toString())
                .putString(METADATA_KEY_DISPLAY_TITLE,it.title)
                .putString(METADATA_KEY_DISPLAY_SUBTITLE,it.narrator)
                .putString(METADATA_KEY_DISPLAY_DESCRIPTION,it.narrator)
                .build()
        }
        state=STATE_INITIALIZED
    }

    fun asMediaSource(dataSourceFactory: DefaultDataSourceFactory):ConcatenatingMediaSource{
        val concatenatingMediaSource = ConcatenatingMediaSource()

        audioBooks.forEach {
            val mediaSource = ProgressiveMediaSource.Factory(dataSourceFactory)
                .createMediaSource(**here i got the issue it supose to ask for an uri and iyt asking for MediaMetadatCompat**))
        }
    }
`",['question'],['tonihei'],,2
10892,"HLS livestream video indefinitely stuck at buffering state, but works when I seek the video to some other timestamp",closed,2022-12-30 16:00:54,2023-03-28 01:06:13,2023-01-26 14:41:59,"#### Issue
I am trying to play an HLS live stream video in our main codebase but it is stuck in buffering state at timestamp 0 and not playing. But when I seek the video to some other timestamp, it works fine.

HLS video I am using: [Link](https://2gud-live-cdn.akamaized.net/media/fk-p-user-2gudsocial072022/social-multimedia/video/publish/112288_E57A7D49690199E252FEEBB8AC81455E/master.m3u8)

<img width=""200"" alt=""image"" src=""https://user-images.githubusercontent.com/23074857/210089298-e979de5c-78bf-48d9-b20d-6c06ab7478dd.png"">

#### Context
I went through the code and figured out that `playBackState` never changes from `buffering` state to `ready` state and the player never plays the video. It is not throwing any errors either.

Checked the network logs. It is only requesting initial segments but not making subsequent network calls to get video chunks. Please check the network log screenshots.
<img width=""400"" alt=""1"" src=""https://user-images.githubusercontent.com/23074857/210087890-56699a96-11e7-42eb-be09-552c2c961a08.png""><img width=""400"" alt=""2"" src=""https://user-images.githubusercontent.com/23074857/210087901-74140bbb-f129-4d2c-b5e6-23cb947ce2c4.png"">

I got the following log through a custom Analytics Event listener. It was put inside `onPlayerStateChanged` callback.
```
2023-01-01 21:39:51.706 31400-31400/com.flipkart.android D/FkVideoAnalyticsListener: [main]  onPlayerStateChanged currentPlaybackPositionMs: 0 totalBufferedDurationMs: 0 playWhenReady:true playbackState:2
```
That means buffering itself is stuck!
#### Ask
Is there a way to check what the exoplayer is waiting for complete the buffer? Please suggest ways to debug this further.
#### Additional information
Checked another similar issue https://github.com/google/ExoPlayer/issues/4659, but the suggested solution didn't work.

Also, I have another demo video player. **This player is able to play the video properly. So, I am guessing that there is no issue with the media and issue lies with the implementation.**
#### Versions
ExoPlayer 2.9.6
#### Device
Redmi Note 8 Pro (Physical device), Android 11
",['question'],['tonihei'],,6
10891,How to cache videos like instagram reels using exoPlayer?,closed,2022-12-30 09:43:08,2023-03-12 02:05:15,2023-01-10 21:50:08,"My URLs are CDN(content delivery network). Stll it takes 4-5sec when loading in exoplayer. I want to cache the videos like instagram. Currently I'm using a background service and for loop to cache video like below:
```
        for(int i=0;i<mediaList.size();i++){
          if(mediaList.get(i).getType()==PostType.VIDEO){
              ExecutorService serviceVideo = Executors.newSingleThreadExecutor();
      int finalI = i;
              serviceVideo.execute(() -> {
                  new ProgressiveMediaSource.Factory(new CacheDataSource.Factory()
                          .setCache(SimpleMediaPlayer.simpleCache)
                          .setUpstreamDataSourceFactory(new DefaultHttpDataSource.Factory().setUserAgent(""ExoplayerDemo""))
                          .setFlags(CacheDataSource.FLAG_IGNORE_CACHE_ON_ERROR))
                          .createMediaSource(MediaItem.fromUri(mediaList.get(finalI).getUrl()));
                  Log.d(""TAGServices"", ""VID-CACHE: ""+finalI);

              });
     }
}
```
But it is not woking as of my expectations. Is there any efficient way?","['duplicate', 'question']",['marcbaechinger'],,1
10890,widevine DRM cbcs content decode error,closed,2022-12-30 02:29:31,2023-04-23 01:05:25,2023-02-21 02:06:06,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Vivo 1907, Android 11

Issue happens in few devices in multiple brands like vivo, oneplus, redmi. 

### Devices that do not reproduce the issue

cbcs works in samsung, vivo, oneplus, redmi etc. Issue happens only in few devices

### Reproducible in the demo app?

Not tested

### Reproduction steps

Just play the CBCS encrypted video.

### Expected result

Video should play successfully

### Actual result

video decode fails with the following crash:

{""error"":{""errorStackTrace"":""com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(3, null, null, video/avc, avc1.42C01E, 1322752, null, [1970, 1080, 25.0], [-1, -1]), format_supported=YES\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:575)\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\n\tat android.os.Looper.loop(Looper.java:257)\n\tat android.os.HandlerThread.run(HandlerThread.java:67)\nCaused by: com.google.android.exoplayer2.video.MediaCodecVideoDecoderException: Decoder failed: OMX.MTK.VIDEO.DECODER.AVC.secure\n\tat com.google.android.exoplayer2.video.MediaCodecVideoRenderer.createDecoderException(MediaCodecVideoRenderer.java:1512)\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:813)\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:998)\n\tat com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:499)\n\t... 3 more\nCaused by: java.lang.IllegalStateException\n\tat android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\n\tat android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:3452)\n\tat com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.dequeueOutputBufferIndex(SynchronousMediaCodecAdapter.java:106)\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(MediaCodecRenderer.java:1806)\n\tat com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:792)\n\t... 5 more\n"",""errorCode"":""24003"",""errorException"":""MediaCodecVideoRenderer error, index=0, format=Format(3, null, null, video/avc, avc1.42C01E, 1322752, null, [1970, 1080, 25.0], [-1, -1]), format_supported=YES"",""errorString"":""ExoPlaybackException: ERROR_CODE_DECODING_FAILED""}}

### Media

This does not happen for specific media file. If it happens in user device, it happens for all videos

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['bug: in platform drm', 'closed-by-bot']",['rrfrias'],,7
10889,how to set a custom repeat drawable ?,closed,2022-12-29 13:53:12,2023-04-04 01:05:55,2023-02-02 02:06:09,"## Issue

I'm trying to override the `exo_styled_controls_repeat_off`, `exo_styled_controls_repeat_one` and `exo_styled_controls_repeat_all` icons, following the documentation: https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/ui/StyledPlayerControlView.html.

The `exo_styled_controls_repeat_off` and `exo_styled_controls_repeat_one` works fine, but the `exo_styled_controls_repeat_all` shows nothing. I'm sure that the `REPEAT_MODE_ALL` is activated but the drawable does'nt appear.

 ## Uses

Exo version: 2.13.3 ( I cannot update it, because I need a `MIN SDK = 22` )
Emulator: Android TV API 30
Class: I'm current using PlayerView, but I tried to change to StyledPlayerView and doesn't work neither.
","['question', 'closed-by-bot']",['tonihei'],,3
10888,Bandwidth meter improvements (e.g. for audio-only adaptive streaming) ,open,2022-12-27 19:44:16,2023-02-02 09:26:37,,"Hi,

We are looking for a status update on this issue: https://github.com/google/ExoPlayer/issues/10307.

You reference your analysis for improving adaptive bitrate streaming from 2019. But as far as we can tell, this has never been fixed to allow for audio only adaptive switching.

is there any timeline to get this fixed? What can we do to escalate this issue?

Thanks

Ronak
",['enhancement'],['christosts'],,12
10887,Wrong currentPosition(even negative value) after reset when play AC-4,closed,2022-12-27 14:52:52,2023-03-13 01:05:44,2023-01-11 09:47:09,"### ExoPlayer Version

2.17.0

### Devices that reproduce the issue

Samsung Galaxy Z Flip 4 running Android 13
Samsung Galaxy Z Fold 2 running Android 12
Samsung Galaxy Note 8 running Android 9
(Probably unrelated.)

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

(a) Negative value case
1. Play AC4 media using the demo app.
2. Try to log currentPosition repeatedly. (I repeated at 100 ms intervals right after prepare.)
3. Negative value is returned right after playback.

<br/>

(b) Seeking case (only in my app)
I haven't tested this case in the demo app.
However, I think this is also a related issue.

I set SeekParameter.Exact to the player.

1. Play AC4 media.
2. Request to seek to a specific position.
5. Try to get current position when seek is completed.
6. Returned value is less than requested position. (50ms~4s difference)

<br/>

(+) Additional Information
I log some values from `ExoPlayerImplInternal-updatePlaybackPositions()`
And here are the results.
```
com.google.android.exoplayer2.demo   D  renderPositionUs 999999937792
com.google.android.exoplayer2.demo   D  set playbackInfo positionUs -62208
```

### Expected result

Return accurate current position

### Actual result

Return inaccurate current position (even negative)

### Media

Any AC4 media
(I used sample.ac4 in your repository/testdata.)

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug: device specific'],['tonihei'],,4
10886,"No AdOverlay but receiving  two callbacks AD_PERIOD_STARTED_EVENT , AD_PERIOD_ENDED_EVENT",closed,2022-12-27 10:57:57,2023-03-05 02:05:17,2023-01-03 15:21:03,"
dependencies : 
def EXO_PLAYER_VERSION = '2.18.2'
implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
implementation 'com.google.ads.interactivemedia.v3:interactivemedia:3.29.0'
implementation (""com.google.android.exoplayer:extension-ima:${EXO_PLAYER_VERSION}""){
exclude group: 'com.google.android.exoplayer', module:'exoplayer-common'
}
implementation ""com.google.android.exoplayer:exoplayer-core:${EXO_PLAYER_VERSION}""
implementation ""com.google.android.exoplayer:exoplayer-dash:${EXO_PLAYER_VERSION}""
implementation ""com.google.android.exoplayer:exoplayer-ui:${EXO_PLAYER_VERSION}""
implementation ""com.google.android.exoplayer:exoplayer-hls:${EXO_PLAYER_VERSION}""
implementation ""com.google.android.exoplayer:exoplayer-smoothstreaming:${EXO_PLAYER_VERSION}""
implementation ""com.google.android.exoplayer:extension-mediasession:${EXO_PLAYER_VERSION}""

I have implemented DAI which is working fine on native app, but on react native app using the same code it is not working, getting two callbacks AD_PERIOD_STARTED_EVENT , AD_PERIOD_ENDED_EVENT but didint see any ad overlay 



",['question'],['marcbaechinger'],,1
10885,How can EXO directly use the framework's capabilities? ,closed,2022-12-26 03:41:23,2023-03-28 01:06:14,2023-01-26 14:41:31,"My device is a deeply customized Android device. The underlying supports various software and hardware solutions. How can EXO directly use the framework's capabilities? For example, FLV queries tell you that you have said that you will not continue to support more complex FLVs, but my device has already been supported by using mediacotec directly. If you use the exo shell and the device's software and hardware solutions, please give me a hard answer",['question'],['tonihei'],,3
10884,Android 13 requires runtime POST_NOTIFICATIONS permission for DownloadService notifications,open,2022-12-23 16:18:21,2023-08-21 15:03:14,,"Reading though Android 13 changes, I've noticed that we now need to add `android.permission.POST_NOTIFICATIONS` in the manifest. 

As Exoplayer provides a [`DownloadService`](https://github.com/google/ExoPlayer/blob/release-v2/library/core/src/main/java/com/google/android/exoplayer2/offline/DownloadService.java) should the next versions of Exoplayer/Media3 add this permission and implements something about it ? ","['bug', 'documentation candidate']",['marcbaechinger'],,8
10883,setPlaybackParameters() not overwriten by live adjusment,closed,2022-12-22 18:48:59,2023-03-28 01:06:14,2023-01-26 09:26:21,"There are multiple sequences of handler messages which can cause a user request to update playback speed to be overwritten by the `LivePlaybackSpeedControl` value.

All the sequeunces share a common feature that:

1. a queued `MSG_PLAYBACK_PARAMETERS_CHANGED_INTERNAL` executes after the `MSG_SET_PLAYBACK_PARAMETERS`
2. The `PlaybackParameters` in this internal change are not the intended speed.

The easiest way to reproduce this is with AC-3 pass-thru audio, in this case the audio renderer does not properly support speed change, see bug:
  https://github.com/google/ExoPlayer/issues/10865

According to this commit,

 [Add back support for setting audio pitch](https://github.com/google/ExoPlayer/commit/74c493f51e) [andrewlewis]

This callback to report the internal speed change is needed for the renderers to run slow motion properly.

In any event, there is no reason to propegate this internal speed change to the user speed setting (`ExoPlayerImplInternal.playbackParameters`). The change simply fixes `MSG_PLAYBACK_PARAMETERS_CHANGED_INTERNAL` not to update the user setting.",[],['tonihei'],,3
10882,User setPlaybackParameters() is overwritten by live adjusment,closed,2022-12-22 18:46:06,2023-06-04 01:05:10,2023-04-04 08:31:22,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Evolution Digital eStream 4k (https://evolutiondigital.com/estream-4k/)  (probably many others)

Easiest to reproduce if device is running AC-3 audio with off-board decode.

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

Pretty difficult, working on a ExoPlayer unit test case (not sure it is even possible)

The steps are to repeatedly tune to a live channel, while speed adjustment is progress, then:
1. Disable the audio 
2. Set the speed to > 1.0. (eg 8x)

### Expected result

Media plays at 2.0x (or whatever the setting was).

### Actual result

Playback reverts immediately to 1.0 (with adjustment +/- 3% default).

The branch [x-live-speed-overwrites-user-logging](https://github.com/TiVo/ExoPlayer/tree/x-live-speed-overwrites-user-logging) has the logging shown in the description below.  Here's the sequence that causes the bug with my analysis:

1. `DO_SOME_WORK` &mdash; sees renderer clock is 1.0, does live speed adjustment, sets speed to 1.03

```
12-21 14:34:41.564  7303  7343 I ExoPlayerImplInternal: updatePlaybackPositions() changing speed - 
		old: PlaybackParameters(speed=1.00, pitch=1.00) 
		new speed: 1.03 
		MediaClock: DefaultMediaClock isUsingStandaloneClock: false standaloneClockIsStarted: true 
		      rendererClock: PlaybackParameters(speed=1.00, pitch=1.00) 
		      standaloneClock: PlaybackParameters(speed=1.00, pitch=1.00)

12-21 14:34:41.564  7303  7343 I ExoPlayerImplInternal: handlePlaybackParameters()  updatePlaybackInfo:false acknowledgeCommand:false 
        currentPlaybackSpeed: 1.03 currentParameters: PlaybackParameters(speed=1.00, pitch=1.00) playbackParameters: PlaybackParameters(speed=1.00, pitch=1.00)
```

2a. `DO_SOME_WORK` &mdash; Renderer reports speed 1.0 (ignore 1.03 setting), and this queues a `MSG_PLAYBACK_PARAMETERS_CHANGED_INTERNAL`, and resets standalone clock to 1.0

```
12-21 14:34:41.580  7303  7343 I DefaultMediaClock: syncClocks() mismatch - renderer: PlaybackParameters(speed=1.00, pitch=1.00) standalone: PlaybackParameters(speed=1.03, pitch=1.00)
```

2b. In same `DO_SOME_WORK` message, live speed again sees speed is 1.0 (from 2a), and again trys to set it to 1.03

```
12-21 14:34:41.581  7303  7343 I ExoPlayerImplInternal: updatePlaybackPositions() changing speed - 
		old: PlaybackParameters(speed=1.00, pitch=1.00) 
		new speed: 1.03 
		MediaClock: DefaultMediaClock isUsingStandaloneClock: false standaloneClockIsStarted: true 
			rendererClock: PlaybackParameters(speed=1.00, pitch=1.00) 
			standaloneClock: PlaybackParameters(speed=1.00, pitch=1.00)
12-21 14:34:41.581  7303  7343 I ExoPlayerImplInternal: handlePlaybackParameters()  updatePlaybackInfo:false acknowledgeCommand:false 
		currentPlaybackSpeed: 1.03 currentParameters: PlaybackParameters(speed=1.00, pitch=1.00) playbackParameters: PlaybackParameters(speed=1.00, pitch=1.00)
```

3. `MSG_TRACK_SELECTION_INVALIDATED` &mdash; disable audio renderer, this messages does the following:

   - update tracks, then calls `updatePlaybackPositions()`, which does a `syncClocks()`, again clocks don't match so queues `MSG_PLAYBACK_PARAMETERS_CHANGED_INTERNAL` 
   - disables audio renderer, so standalone clock is now master, standalone clock has 1.03 and renderer vetoed it (so it has 1.0)

```
12-21 14:34:41.592  7303  7343 D ExoPlayerImplInternal: handleMessage() - msg: 10 playbackInfo.playbackParametersPlaybackParameters(speed=1.00, pitch=1.00)
```

4. `MSG_SET_PLAYBACK_PARAMETERS` &mdash; handle the user requested speed. 

```

12-21 14:34:41.655  7303  7343 D ExoPlayerImplInternal: handleMessage() - msg: 4 playbackInfo.playbackParametersPlaybackParameters(speed=1.00, pitch=1.00)
12-21 14:34:41.655  7303  7343 I ExoPlayerImplInternal: setPlaybackParametersInternal() - parameters: PlaybackParameters(speed=8.00, pitch=1.00) 
		MediaClock: DefaultMediaClock isUsingStandaloneClock: true standaloneClockIsStarted: true 
			rendererClock: none 
			standaloneClock: PlaybackParameters(speed=1.03, pitch=1.00)
12-21 14:34:41.655  7303  7343 I ExoPlayerImplInternal: handlePlaybackParameters()  updatePlaybackInfo:true acknowledgeCommand:true 
		currentPlaybackSpeed: 8.0 currentParameters: PlaybackParameters(speed=1.00, pitch=1.00) playbackParameters: PlaybackParameters(speed=8.00, pitch=1.00)
````

5. Then the `MSG_PLAYBACK_PARAMETERS_CHANGED_INTERNAL`, queued in step 3 (track selection) overwrites the 8x speed back to 1.0

```
12-21 14:34:41.657  7303  7343 D ExoPlayerImplInternal: handleMessage() - msg: 16 playbackInfo.playbackParametersPlaybackParameters(speed=8.00, pitch=1.00)
12-21 14:34:41.657  7303  7343 I ExoPlayerImplInternal: MSG_PLAYBACK_PARAMETERS_CHANGED_INTERNAL updatedParameters : PlaybackParameters(speed=1.00, pitch=1.00) 
		EPII.playbackParameters: PlaybackParameters(speed=8.00, pitch=1.00) 
       	MediaClock: DefaultMediaClock isUsingStandaloneClock: true standaloneClockIsStarted: true 
           	rendererClock: none 
           	standaloneClock: PlaybackParameters(speed=8.00, pitch=1.00)

12-21 14:34:41.657  7303  7343 I ExoPlayerImplInternal: handlePlaybackParameters()  updatePlaybackInfo:true acknowledgeCommand:false 
		currentPlaybackSpeed: 1.0 currentParameters: PlaybackParameters(speed=8.00, pitch=1.00) playbackParameters: PlaybackParameters(speed=1.00, pitch=1.00)
```

6. Lastly, again main loop sees renderer clock is 1.0, does live speed adjustment, sets speed to 1.03

```
12-21 14:34:41.658  7303  7343 I ExoPlayerImplInternal: updatePlaybackPositions() changing speed - 
	old: PlaybackParameters(speed=8.00, pitch=1.00) 
	new speed: 1.03 
	MediaClock: DefaultMediaClock isUsingStandaloneClock: true standaloneClockIsStarted: true 
		rendererClock: none 
		standaloneClock: PlaybackParameters(speed=8.00, pitch=1.00)
12-21 14:34:41.658  7303  7343 I ExoPlayerImplInternal: handlePlaybackParameters()  updatePlaybackInfo:false acknowledgeCommand:false 
		currentPlaybackSpeed: 1.03 currentParameters: PlaybackParameters(speed=1.00, pitch=1.00) playbackParameters: PlaybackParameters(speed=1.00, pitch=1.00)
```

### Media

I'll send a live URL.

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bug'],['tonihei'],,16
10881,playout is getting stuck with DASH LIVE HEVC,closed,2022-12-21 20:44:24,2023-04-04 01:05:55,2023-02-02 02:06:13,"Unfortunately we can't answer all questions. Unclear questions or questions with
insufficient information may not get attention.

Before filing a question:
-------------------------

- Ask general Android development questions on Stack Overflow
- Search existing issues, including issues that are closed
  https://github.com/google/ExoPlayer/issues?q=is%3Aissue
- Consult our developer website (https://exoplayer.dev/) and Javadoc
  (https://exoplayer.dev/doc/reference/)

When filing a question:
-------------------------

Describe your question in detail.

In case your question refers to a problem you are seeing in your app:

- Output of running `$ adb bugreport` in the console

In case your question is related to a piece of media:

- URI to test content
- For protected content:
  - DRM scheme and license server URL
  - Authentication HTTP headers

Don't forget to check supported formats and devices
(https://exoplayer.dev/supported-formats.html).

If there's something you don't want to post publicly, please submit the issue,
then email the link/bug report to dev.exoplayer@gmail.com using a subject in the
format ""Issue #1234"", where #1234 is your issue number (we don't reply to
emails).
","['question', 'closed-by-bot']",['tonihei'],,4
10880,SurfaceView.updateSurface causes the thread check to fail if the ExoPlayer instance is managed from a thread other than main,open,2022-12-21 14:50:14,2023-01-06 17:25:41,,"### ExoPlayer Version

2.14.2

### Devices that reproduce the issue

All.

### Devices that do not reproduce the issue

None.

### Reproducible in the demo app?

No

### Reproduction steps

1. Checkout MWE [here](https://github.com/stoyicker/mwe-exoplayer-surfaceviewwrongthread/tree/1ef3c119bf460485c3b2e884157c21d240e7a476).
2. Run the app.

### Expected result

The video plays successfully.

### Actual result

The video visuals fail to render. See longs for ""wrong thread"" issue and how it traces to SurfaceView.

Note that it seems to be a slightly different form https://github.com/google/ExoPlayer/issues/9005

It is a strong requirement for me to use a custom thread as it has to use a specific ThreadGroup and be confined to certain parts of the codebase.

I've opened it as a bug, but I'm not even sure it is - is there an intended way to work with this? If so, what is it?

### Media

https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['enhancement', 'question']",['tianyif'],,4
10879,Settings PopUp dialog isn't displayed properly when using setDecorFitsSystemWindows(false) ,closed,2022-12-21 00:22:06,2023-02-20 02:05:29,2022-12-21 10:22:10,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

NOTE: This happens only on 2.17.2 and up. On 2.17.1, this cannot be reproduced, there's no bug.

Pixel 4 Emulator running Android 12
Xiaomi Poco F3 running Android 12
Xiaomi Redmi 8 running Android 9

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps


NOTE: This happens only on 1.0.0-beta01 and up. On 1.0.0-alpha03, this cannot be reproduced, there's no bug.

Try to hide the SystemUI (Status bar and Navigation bar) by using setDecorFitsSystemWindows(false)

Full code: 

```
fun Activity.hideSystemUI() {
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
        window.setDecorFitsSystemWindows(false)
        window.insetsController?.let {
            it.systemBarsBehavior = WindowInsetsController.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE
            it.hide(WindowInsetsCompat.Type.systemBars())
        }
    } else {
        WindowCompat.setDecorFitsSystemWindows(window, false)
        WindowCompat.getInsetsController(window, window.decorView).apply {
            systemBarsBehavior = WindowInsetsControllerCompat.BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE
            hide(WindowInsetsCompat.Type.systemBars())
        }
    }

    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
        window?.attributes?.layoutInDisplayCutoutMode =
            WindowManager.LayoutParams.LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES
    }
}
```

### Expected result

NOTE: This happens only on 2.17.2 and up. On 2.17.1, this cannot be reproduced, there's no bug.

Version 1.0.0-alpha03

<img width=""451"" alt=""image"" src=""https://user-images.githubusercontent.com/13114412/208789866-def179d5-b022-4865-8f2c-8208a24a58fd.png"">
<img width=""443"" alt=""image"" src=""https://user-images.githubusercontent.com/13114412/208789884-71a09ba5-a111-43a9-bc65-29d028204cde.png"">

### Actual result

NOTE: This happens only on 1.0.0-beta01 and up. On 1.0.0-alpha03, this cannot be reproduced, there's no bug.

Version 1.0.0-beta03

<img width=""420"" alt=""image"" src=""https://user-images.githubusercontent.com/13114412/208789504-8e409d29-18b5-448d-8182-06e915505c89.png"">
<img width=""435"" alt=""image"" src=""https://user-images.githubusercontent.com/13114412/208790824-9f09c3d6-1215-47c6-b0aa-cc4e90270a21.png"">


### Media

https://www.youtube.com/api/manifest/dash/id/bf5bb2419360daf1/source/youtube?as=fmp4_audio_clear,fmp4_sd_hd_clear&sparams=ip,ipbits,expire,source,id,as&ip=0.0.0.0&ipbits=0&expire=19000000000&signature=51AF5F39AB0CEC3E5497CD9C900EBFEAECCCB5C7.8506521BFC350652163895D4C26DEE124209AA9E&key=ik0

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['duplicate'],['icbaker'],,1
10878,Video not playable,open,2022-12-20 13:31:41,2022-12-22 17:39:10,,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

Samsung Tab A (Android 11)

### Devices that do not reproduce the issue

_No response_

### Reproducible in the demo app?

Yes

### Reproduction steps

Play the attached video in the mail with ExoPlayer.

### Expected result

The video should be playable. 

### Actual result

While playing a video on an Android device in kiosk mode, Exoplayer shows the following error com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: 
Decoder init failed: OMX.qcom.video.decoder.avc, Format(1, null, null, video/avc, null, -1, null, [1200, 1920, -1.0], [-1, -1]) and a black screen is displayed. 

### Media

Attached in the mail.

### Bug Report

- [X] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.","['bug', 'needs triage']",['tianyif'],,0
10877,Video not playable,closed,2022-12-20 13:03:23,2023-02-19 02:05:07,2022-12-20 14:39:15,,"['bug', 'needs triage']",[],,1
10876,ExoPlayer doesn't play some videos on some devices.,closed,2022-12-19 20:48:45,2023-02-21 02:06:03,2022-12-22 12:41:10,"The video stays black, no sound, no image, no crash. It does show the length of the video tho!
On simulator it runs but has weird artifacts.

Device: SAMSUNG GALAXY S10 LIGHT

It's an MP4 video which was cropped and resized with FFMPEG (X264).

Version:
``implementation 'com.google.android.exoplayer:exoplayer:2.18.2'``

My code:
```kotlin
@Composable
fun VideoView(videoUri: String, height: Float) {
    val context = LocalContext.current

    val exoPlayer = ExoPlayer.Builder(context)
            .build()
            .also { exoPlayer ->

                val mediaItem = MediaItem.Builder()
                        .setMimeType(""video/mp4"")
                        .setUri(videoUri)
                        .build()

                exoPlayer.setMediaItem(mediaItem)
                exoPlayer.prepare()
            }

    val lifecycleOwner = rememberUpdatedState(LocalLifecycleOwner.current)

    DisposableEffect(
            AndroidView(factory = {
                StyledPlayerView(context).apply {
                    player = exoPlayer
                }
            }, modifier = Modifier.height(height.dp))
    ) {
        val observer = LifecycleEventObserver { owner, event ->
            when (event) {
                Lifecycle.Event.ON_PAUSE -> {
                    exoPlayer.pause()
                }
                Lifecycle.Event.ON_RESUME -> {
                    exoPlayer.play()
                }
                else -> {}
            }
        }
        val lifecycle = lifecycleOwner.value.lifecycle
        lifecycle.addObserver(observer)

        onDispose {
            exoPlayer.release()
            lifecycle.removeObserver(observer)
        }
    }
}
```

I had to cut a lot out because of the limit. The part i think is the most interesting:
```
E/ACodec: signalError(omxError 0x80001001, internalError -2147483648)
E/ACodec: [OMX.qcom.video.decoder.avc] ERROR(0x80001009)
E/ACodec: signalError(omxError 0x80001009, internalError -2147483648)
E/MediaCodec: Codec reported err 0x80001001/-2147479551 (Unknown error 2147479551), actionCode 0, while in state 6/STARTED
E/ACodec: signalError(omxError 0x80001001, internalError -2147483648)
D/SurfaceUtils: disconnecting from surface 0xb400007c2fcb1010, reason disconnectFromSurface
E/Surface: freeAllBuffers: 4 buffers were freed while being dequeued!
E/MediaCodec: Codec reported err 0x80001009/-2147479543 (Unknown error 2147479543), actionCode 0, while in state 0/UNINITIALIZED
E/MediaCodec: Codec reported err 0x80001001/-2147479551 (Unknown error 2147479551), actionCode 0, while in state 0/UNINITIALIZED
E/MediaCodecVideoRenderer: Video codec error
      android.media.MediaCodec$CodecException: Error 0x80001001
D/MediaCodecInfo: NoSupport [codec.profileLevel, avc1.6E001F, video/avc] [OMX.qcom.video.decoder.avc, video/avc] [r5q, SM-G770F, samsung, 33]
D/MediaCodecInfo: NoSupport [codec.profileLevel, avc1.6E001F, video/avc] [c2.android.avc.decoder, video/avc] [r5q, SM-G770F, samsung, 33]
E/ExoPlayerImplInternal: Playback error
      com.google.android.exoplayer2.ExoPlaybackException: MediaCodecVideoRenderer error, index=0, format=Format(1, null, null, video/avc, avc1.6E001F, -1, null, [800, 602, 29.997414], [-1, -1]), format_supported=NO_EXCEEDS_CAPABILITIES
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:571)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loopOnce(Looper.java:226)
        at android.os.Looper.loop(Looper.java:313)
        at android.os.HandlerThread.run(HandlerThread.java:67)
     Caused by: com.google.android.exoplayer2.video.MediaCodecVideoDecoderException: Decoder failed: OMX.qcom.video.decoder.avc
        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.createDecoderException(MediaCodecVideoRenderer.java:1629)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(MediaCodecRenderer.java:813)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.doSomeWork(ExoPlayerImplInternal.java:994)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:495)
        at android.os.Handler.dispatchMessage(Handler.java:102) 
        at android.os.Looper.loopOnce(Looper.java:226) 
        at android.os.Looper.loop(Looper.java:313) 
        at android.os.HandlerThread.run(HandlerThread.java:67) 
     Caused by: android.media.MediaCodec$CodecException: Error 0x80001001
E/ExoPlayerImplInternal: Disable failed.
      java.lang.IllegalStateException
        at android.media.MediaCodec.native_flush(Native Method)
        at android.media.MediaCodec.flush(MediaCodec.java:2388)
        at com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecAdapter.flush(AsynchronousMediaCodecAdapter.java:228)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flushCodec(MediaCodecRenderer.java:877)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flushOrReleaseCodec(MediaCodecRenderer.java:870)
        at com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onDisabled(MediaCodecRenderer.java:710)
        at com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onDisabled(MediaCodecVideoRenderer.java:608)
        at com.google.android.exoplayer2.BaseRenderer.disable(BaseRenderer.java:186)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.disableRenderer(ExoPlayerImplInternal.java:1655)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.resetInternal(ExoPlayerImplInternal.java:1396)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.stopInternal(ExoPlayerImplInternal.java:1359)
        at com.google.android.exoplayer2.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:587)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loopOnce(Looper.java:226)
        at android.os.Looper.loop(Looper.java:313)
        at android.os.HandlerThread.run(HandlerThread.java:67)
```
","['question', 'needs triage']",['microkatz'],,2
10875,Click ExoPlayer notification to open app,closed,2022-12-19 10:04:48,2023-02-18 02:05:13,2022-12-19 10:46:45,"I would like to ask whether there is a way to click on ExoPlayer notification and open the app on a specific screen (e.g. on a Media Player Activity).

Thank you in advance","['question', 'needs triage']",[],,1
10874,can not play mp4 video packaged by PS format,closed,2022-12-19 02:57:06,2023-03-19 01:05:31,2023-01-17 02:04:48,"com.google.android.exoplayer2.source.UnrecognizedInputFormatException: None of the available extractors
my play source is mp4  DASH which is fomated with PS
is code error or exoplayer is not supported?
","['question', 'needs triage', 'closed-by-bot']",['tianyif'],,3
10873,Is there a way to get the Segments length in exo player?,closed,2022-12-17 12:44:15,2023-03-19 01:05:31,2023-01-17 02:04:51,i need to get the segment length in exo player,"['question', 'needs triage', 'closed-by-bot']",['tianyif'],,3
10872,Streaming video on rebuffering again after play 1 times,closed,2022-12-17 02:40:07,2023-04-15 01:05:09,2023-02-13 02:06:00,"### ExoPlayer Version

2.18.2

### Devices that reproduce the issue

*Osprey device android 11
*MediaCodecInfo name is c2.android.aac.decoder

Link device: https://www.ebay.com/itm/334306318018

### Devices that do not reproduce the issue

*Emulator android 10, 11, 12 and 13 (MediaCodecInfo name is c2.android.avc.decoder )
*Osprey device android 10  (MediaCodecInfo name is OMX.google.h264.decoder)


### Reproducible in the demo app?

Yes

### Reproduction steps

1. Link media url reproduce rebuffer again:
 a. https://xandrssads-staging-sponsored.secure.footprint.net/XAAF/di/DTV_Movers/DTV_Movers.mp4 (need vpn USA)
 b. https://xandrssads-sponsored.secure.footprint.net/XAAF/di/MEPS_112922_1080p/MEPS_112922_1080p.mp4 (need vpn USA)

2. Link media url not reproduce rebuffer again:
 a. https://static.videezy.com/system/resources/previews/000/049/943/original/002831-HD-COUNTDOWN-03.mp4

 override fun onPlayerStateChanged(
        eventTime: AnalyticsListener.EventTime, playWhenReady: Boolean, playbackState: Int
    ) {
        when (playbackState) {
            Player.STATE_IDLE -> {
   
            }
            Player.STATE_BUFFERING -> {
          
            }
            Player.STATE_READY -> {
           
            }
            Player.STATE_ENDED -> {
           
            }
        }
    }

When the play finish for 1 video and do repeat again this video, it shouldn't go back to Player.STATE_BUFFERING when mediacode using c2.android.aac.decoder. Meanwhile the rest of other mediacode no have problem (not return back to Player.STATE_BUFFERING).

### Expected result

 override fun onPlayerStateChanged(
        eventTime: AnalyticsListener.EventTime, playWhenReady: Boolean, playbackState: Int
    ) {
        when (playbackState) {
            Player.STATE_IDLE -> {
   
            }
            Player.STATE_BUFFERING -> {
          
            }
            Player.STATE_READY -> {
           
            }
            Player.STATE_ENDED -> {
           
            }
        }
    }

When the play finish for 1 video and do repeat again it shouldn't go back to Player.STATE_BUFFERING (This not happen to mediacode c2.android.avc.decoder and OMX.google.h264.decoder

### Actual result


`val videoComponent = player.videoComponent
        videoComponent?.setVideoTextureView(textureView)
        val textComponent = player.textComponent
        //textComponent?.addTextOutput(componentListener)
        this.player.addListener(componentListener)`

`val mediaSource = buildMediaSource(videoUri)
        player.setMediaSource(mediaSource, true)
        player.prepare()
        player.playWhenReady = true
        player.repeatMode = Player.REPEAT_MODE_ALL`

`private fun buildMediaSource(uri: Uri): MediaSource {
        return ProgressiveMediaSource.Factory(DefaultHttpDataSource.Factory())
            .createMediaSource(MediaItem.fromUri(uri))
    }`

`override fun onPlayerStateChanged(
        eventTime: AnalyticsListener.EventTime, playWhenReady: Boolean, playbackState: Int
    ) {
        when (playbackState) {
            Player.STATE_IDLE -> {
                logD(""onPlayerStateChanged playWhenReady: $playWhenReady Player.STATE_IDLE"")
            }
            Player.STATE_BUFFERING -> {.  <-- when finish first video and do repeat this video, it shouldn't go to this state for mediacode c2.android.aac.decoder but the rest of other mediacode are not go here.
                logD(""onPlayerStateChanged playWhenReady: $playWhenReady Player.STATE_BUFFERING"")
                xaafVideoVideoEventListener.onPlayerStateChanged(XaafVideoVideoEventListener.ExoPlayerState.BUFFERING)
            }
            Player.STATE_READY -> {
                logD(""onPlayerStateChanged playWhenReady: $playWhenReady Player.Player.STATE_READY"")
                xaafVideoVideoEventListener.onPlayerStateChanged(XaafVideoVideoEventListener.ExoPlayerState.READY)

            }
            Player.STATE_ENDED -> {
                logD(""onPlayerStateChanged playWhenReady: $playWhenReady Player.STATE_ENDED"")
                xaafVideoVideoEventListener.onPlayerStateChanged(XaafVideoVideoEventListener.ExoPlayerState.ENDED)
            }
        }
    }`

### Media

As explain in above, buffer state should not be called again if do repeating in mediacode c2.android.aac.decoder. This also happen in latest exoplayer 2.18.2.

To conclude, other mediacode so far so good, no go back to buffer state again when repeat the video. You can test on the list video url above.

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['closed-by-bot'],['christosts'],,3
10871,No caption subtitle track is detected,closed,2022-12-16 13:33:15,2023-02-15 02:06:20,2022-12-16 16:02:45,"### ExoPlayer Version

2.18.1

### Devices that reproduce the issue

Android Emulator - Android_TV_1080p_API_28

### Devices that do not reproduce the issue

None

### Reproducible in the demo app?

Not tested

### Reproduction steps

1. Disable HLS chunkless preparation
2. Play the attached media in the demo app

### Expected result

4 caption/subtitle tracks should be visible

![Screen Shot 2022-12-16 at 9 32 33 PM](https://user-images.githubusercontent.com/100230840/208109434-982bc7e5-755d-4a8d-b079-767c31f93088.png)


### Actual result

No caption/subtitle track is detected

```
D/EventLogger( 4179):   group [
D/EventLogger( 4179):     [X] Track:0, id=0, mimeType=video/avc, bitrate=2340000, codecs=avc1.4d001f, res=1024x576, fps=29.97, supported=YES
D/EventLogger( 4179):     [X] Track:1, id=1, mimeType=video/avc, bitrate=4350000, codecs=avc1.4d001f, res=1280x720, fps=29.97, supported=YES
D/EventLogger( 4179):     [X] Track:2, id=2, mimeType=video/avc, bitrate=9600000, codecs=avc1.640028, res=1920x1080, fps=29.97, supported=YES
D/EventLogger( 4179):   ]
D/EventLogger( 4179):   group [
D/EventLogger( 4179):     [X] Track:0, id=10/15, mimeType=audio/mp4a-latm, codecs=mp4a.40.2, channels=2, sample_rate=48000, language=en, supported=YES
D/EventLogger( 4179):   ]
D/EventLogger( 4179):   group [
D/EventLogger( 4179):     [X] Track:0, id=null, mimeType=application/id3, supported=YES
D/EventLogger( 4179):   ]
D/EventLogger( 4179):   Metadata [
D/EventLogger( 4179):     HlsTrackMetadataEntry
D/EventLogger( 4179):   ]
D/EventLogger( 4179): ]
```

### Media

I will send the media to dev.exoplayer@gmail.com

### Bug Report

- [ ] You will email the zip file produced by `adb bugreport` to dev.exoplayer@gmail.com after filing this issue.",['bad media'],['icbaker'],,1
